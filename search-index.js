var searchIndex={};
searchIndex["kernel_hal"] = {"doc":"Hardware Abstraction Layer","i":[[3,"GeneralRegs","kernel_hal","General registers",null,null],[12,"rax","","",0,null],[12,"rbx","","",0,null],[12,"rcx","","",0,null],[12,"rdx","","",0,null],[12,"rsi","","",0,null],[12,"rdi","","",0,null],[12,"rbp","","",0,null],[12,"rsp","","",0,null],[12,"r8","","",0,null],[12,"r9","","",0,null],[12,"r10","","",0,null],[12,"r11","","",0,null],[12,"r12","","",0,null],[12,"r13","","",0,null],[12,"r14","","",0,null],[12,"r15","","",0,null],[12,"rip","","",0,null],[12,"rflags","","",0,null],[12,"fsbase","","",0,null],[12,"gsbase","","",0,null],[3,"UserContext","","User space context",null,null],[12,"general","","",1,null],[12,"trap_num","","",1,null],[12,"error_code","","",1,null],[3,"VectorRegs","","",null,null],[12,"fcw","","",2,null],[12,"fsw","","",2,null],[12,"ftw","","",2,null],[12,"_pad0","","",2,null],[12,"fop","","",2,null],[12,"fip","","",2,null],[12,"fcs","","",2,null],[12,"_pad1","","",2,null],[12,"fdp","","",2,null],[12,"fds","","",2,null],[12,"_pad2","","",2,null],[12,"mxcsr","","",2,null],[12,"mxcsr_mask","","",2,null],[12,"mm","","",2,null],[12,"xmm","","",2,null],[12,"reserved","","",2,null],[12,"available","","",2,null],[3,"U128","","",null,null],[12,"0","","",3,null],[3,"Thread","","",null,null],[3,"PageTable","","Page Table",null,null],[3,"PhysFrame","","",null,null],[3,"InterruptManager","","",null,null],[3,"SleepFuture","","",null,null],[3,"SerialFuture","","",null,null],[5,"context_run","","",null,[[["usercontext",3]]]],[5,"pmem_read","","Read physical memory from `paddr` to `buf`.",null,[[["physaddr",6]]]],[5,"pmem_write","","Write physical memory to `paddr` from `buf`.",null,[[["physaddr",6]]]],[5,"frame_copy","","Copy content of `src` frame to `target` frame.",null,[[["physaddr",6]]]],[5,"frame_zero_in_range","","Zero `target` frame.",null,[[["physaddr",6]]]],[5,"frame_flush","","Flush the physical frame.",null,[[["physaddr",6]]]],[5,"serial_set_callback","","Register a callback of serial readable event.",null,[[["box",3],["fnonce",8]]]],[5,"serial_read","","Read a string from console.",null,[[]]],[5,"serial_write","","Output a string to console.",null,[[]]],[5,"timer_now","","Get current time.",null,[[],["duration",3]]],[5,"timer_set","","Set a new timer. After `deadline`, the `callback` will be…",null,[[["box",3],["duration",3],["fnonce",8]]]],[5,"timer_tick","","Check timers, call when timer interrupt happened.",null,[[]]],[5,"irq_handle","","",null,[[]]],[5,"vdso_constants","","Get platform specific information.",null,[[],["vdsoconstants",3]]],[5,"fetch_fault_vaddr","","Get fault address of the last page fault.",null,[[],["virtaddr",6]]],[5,"pc_firmware_tables","","Get physical address of `acpi_rsdp` and `smbios` on x86_64.",null,[[]]],[5,"get_acpi_table","","Get ACPI Table",null,[[],[["acpi",3],["option",4]]]],[5,"outpd","","IO Ports access on x86 platform",null,[[]]],[5,"inpd","","",null,[[]]],[5,"apic_local_id","","Get local APIC ID",null,[[]]],[5,"yield_now","","Yields execution back to the async runtime.",null,[[]]],[5,"sleep_until","","Sleeps until the specified of time.",null,[[["duration",3]]]],[5,"serial_getchar","","Get a char from serial.",null,[[]]],[0,"defs","","",null,null],[3,"MMUFlags","kernel_hal::defs","",null,null],[4,"CachePolicy","","",null,null],[13,"Cached","","",4,null],[13,"Uncached","","",4,null],[13,"UncachedDevice","","",4,null],[13,"WriteCombining","","",4,null],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[6,"DevVAddr","","",null,null],[17,"CACHE_POLICY_MASK","","",null,null],[17,"PAGE_SIZE","","",null,null],[18,"CACHE_1","","",5,null],[18,"CACHE_2","","",5,null],[18,"READ","","",5,null],[18,"WRITE","","",5,null],[18,"EXECUTE","","",5,null],[18,"USER","","",5,null],[11,"empty","","Returns an empty set of flags",5,[[],["mmuflags",3]]],[11,"all","","Returns the set containing all flags.",5,[[],["mmuflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",5,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",5,[[],[["option",4],["mmuflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",5,[[],["mmuflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",5,[[],["mmuflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",5,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",5,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",5,[[["mmuflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",5,[[["mmuflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",5,[[["mmuflags",3]]]],[11,"remove","","Removes the specified flags in-place.",5,[[["mmuflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",5,[[["mmuflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",5,[[["mmuflags",3]]]],[11,"spawn","kernel_hal","Spawn a new thread.",6,[[["box",3],["pin",3]]]],[11,"set_tid","","Set tid and pid of current task.",6,[[]]],[11,"get_tid","","Get tid and pid of current task.",6,[[]]],[11,"current","","Get current page table",7,[[]]],[11,"new","","Create a new `PageTable`.",7,[[]]],[11,"map","","Map the page of `vaddr` to the frame of `paddr` with…",7,[[["virtaddr",6],["physaddr",6],["mmuflags",3]],["result",4]]],[11,"unmap","","Unmap the page of `vaddr`.",7,[[["virtaddr",6]],["result",4]]],[11,"protect","","Change the `flags` of the page of `vaddr`.",7,[[["virtaddr",6],["mmuflags",3]],["result",4]]],[11,"query","","Query the physical address which the page of `vaddr` maps…",7,[[["virtaddr",6]],[["result",4],["physaddr",6]]]],[11,"table_phys","","Get the physical address of root page table.",7,[[],["physaddr",6]]],[11,"map_many","","",7,[[["virtaddr",6],["mmuflags",3]],["result",4]]],[11,"map_cont","","",7,[[["virtaddr",6],["physaddr",6],["mmuflags",3]],["result",4]]],[11,"unmap_cont","","",7,[[["virtaddr",6]],["result",4]]],[11,"alloc","","",8,[[],["option",4]]],[11,"alloc_contiguous_base","","",8,[[],[["option",4],["physaddr",6]]]],[11,"alloc_contiguous","","",8,[[],["vec",3]]],[11,"addr","","",8,[[],["physaddr",6]]],[11,"zero_frame_addr","","",8,[[],["physaddr",6]]],[11,"handle","","Handle IRQ.",9,[[]]],[11,"set_ioapic_handle","","",9,[[["box",3],["fn",8]],["option",4]]],[11,"add_handle","","Add an interrupt handle to an irq",9,[[["box",3],["fn",8]],["option",4]]],[11,"reset_ioapic_handle","","",9,[[]]],[11,"remove_handle","","Remove the interrupt handle of an irq",9,[[]]],[11,"allocate_block","","Allocate contiguous positions for irq",9,[[],["option",4]]],[11,"free_block","","",9,[[]]],[11,"overwrite_handler","","",9,[[["box",3],["fn",8]]]],[11,"enable","","Enable IRQ.",9,[[]]],[11,"disable","","Disable IRQ.",9,[[]]],[11,"maxinstr","","Get IO APIC maxinstr",9,[[],["option",4]]],[11,"configure","","",9,[[]]],[11,"is_valid","","",9,[[]]],[0,"user","","",null,null],[3,"UserPtr","kernel_hal::user","",null,null],[4,"In","","",null,null],[4,"Out","","",null,null],[4,"InOut","","",null,null],[4,"Error","","The error type which is returned from user pointer.",null,null],[13,"InvalidUtf8","","",10,null],[13,"InvalidPointer","","",10,null],[6,"UserInPtr","","",null,null],[6,"UserOutPtr","","",null,null],[6,"UserInOutPtr","","",null,null],[8,"Policy","","",null,null],[8,"Read","","",null,null],[8,"Write","","",null,null],[11,"is_null","","",11,[[]]],[11,"add","","",11,[[]]],[11,"as_ptr","","",11,[[]]],[11,"check","","",11,[[],[["error",4],["result",4]]]],[11,"as_ref","","",11,[[],[["result",4],["error",4]]]],[11,"read","","",11,[[],[["error",4],["result",4]]]],[11,"read_if_not_null","","",11,[[],[["option",4],["result",4],["error",4]]]],[11,"read_array","","",11,[[],[["error",4],["result",4],["vec",3]]]],[11,"read_string","","",11,[[],[["error",4],["result",4],["string",3]]]],[11,"read_cstring","","",11,[[],[["error",4],["result",4],["string",3]]]],[11,"read_cstring_array","","",11,[[],[["error",4],["result",4],["vec",3]]]],[11,"write","","",11,[[],[["error",4],["result",4]]]],[11,"write_if_not_null","","",11,[[],[["error",4],["result",4]]]],[11,"write_array","","",11,[[],[["error",4],["result",4]]]],[11,"write_cstring","","",11,[[],[["error",4],["result",4]]]],[0,"vdso","kernel_hal","",null,null],[3,"VdsoConstants","kernel_hal::vdso","This struct contains constants that are initialized by the…",null,null],[12,"max_num_cpus","","Maximum number of CPUs that might be online during the…",12,null],[12,"features","","Bit map indicating features.",12,null],[12,"dcache_line_size","","Number of bytes in a data cache line.",12,null],[12,"icache_line_size","","Number of bytes in an instruction cache line.",12,null],[12,"ticks_per_second","","Conversion factor for zx_ticks_get return values to seconds.",12,null],[12,"ticks_to_mono_numerator","","Ratio which relates ticks (zx_ticks_get) to clock monotonic.",12,null],[12,"ticks_to_mono_denominator","","",12,null],[12,"physmem","","Total amount of physical memory in the system, in bytes.",12,null],[12,"buildid","","A build id of the system. Currently a non-null terminated…",12,null],[3,"Features","","Bit map indicating features.",null,null],[12,"cpu","","",13,null],[12,"hw_breakpoint_count","","Total amount of debug registers available in the system.",13,null],[12,"hw_watchpoint_count","","",13,null],[3,"BuildID","","",null,null],[11,"from","kernel_hal","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","kernel_hal::defs","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","kernel_hal::user","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"from","kernel_hal::vdso","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"fmt","kernel_hal","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",1,[[],["usercontext",3]]],[11,"clone","","",0,[[],["generalregs",3]]],[11,"default","","",1,[[],["usercontext",3]]],[11,"default","","",0,[[],["generalregs",3]]],[11,"from","kernel_hal::user","",11,[[]]],[11,"fmt","kernel_hal::defs","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","kernel_hal","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","kernel_hal::user","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","kernel_hal::vdso","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],[["result",4],["error",3]]]],[11,"sub","kernel_hal::defs","Returns the set difference of the two sets of flags.",5,[[["mmuflags",3]],["mmuflags",3]]],[11,"eq","","",5,[[["mmuflags",3]]]],[11,"ne","","",5,[[["mmuflags",3]]]],[11,"eq","","",4,[[["cachepolicy",4]]]],[11,"eq","kernel_hal::user","",10,[[["error",4]]]],[11,"cmp","kernel_hal::defs","",5,[[["mmuflags",3]],["ordering",4]]],[11,"partial_cmp","","",5,[[["mmuflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["mmuflags",3]]]],[11,"le","","",5,[[["mmuflags",3]]]],[11,"gt","","",5,[[["mmuflags",3]]]],[11,"ge","","",5,[[["mmuflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",5,[[["mmuflags",3]]]],[11,"not","","Returns the complement of this set of flags.",5,[[],["mmuflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",5,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",5,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",5,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",5,[[["mmuflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",5,[[["mmuflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",5,[[["mmuflags",3]]]],[11,"drop","kernel_hal","",8,[[]]],[11,"hash","kernel_hal::defs","",5,[[]]],[11,"extend","","",5,[[["intoiterator",8]]]],[11,"from_iter","","",5,[[["intoiterator",8]],["mmuflags",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"clone","","",5,[[],["mmuflags",3]]],[11,"clone","","",4,[[],["cachepolicy",4]]],[11,"clone","kernel_hal","",2,[[],["vectorregs",3]]],[11,"clone","","",3,[[],["u128",3]]],[11,"clone","kernel_hal::user","",10,[[],["error",4]]],[11,"default","kernel_hal","",2,[[]]],[11,"default","","",3,[[],["u128",3]]],[11,"default","kernel_hal::vdso","",19,[[]]],[11,"poll","kernel_hal","",14,[[["context",3],["pin",3]],["poll",4]]],[11,"poll","","",15,[[["context",3],["pin",3]],["poll",4]]],[11,"run","","Go to user space with the context, and come back when a…",1,[[]]]],"p":[[3,"GeneralRegs"],[3,"UserContext"],[3,"VectorRegs"],[3,"U128"],[4,"CachePolicy"],[3,"MMUFlags"],[3,"Thread"],[3,"PageTable"],[3,"PhysFrame"],[3,"InterruptManager"],[4,"Error"],[3,"UserPtr"],[3,"VdsoConstants"],[3,"Features"],[3,"SleepFuture"],[3,"SerialFuture"],[4,"In"],[4,"Out"],[4,"InOut"],[3,"BuildID"]]};
searchIndex["kernel_hal_bare"] = {"doc":"Zircon HAL implementation for bare metal environment.","i":[[3,"Thread","kernel_hal_bare","",null,null],[3,"Frame","","",null,null],[3,"NAIVE_TIMER","","",null,null],[5,"context_run","","",null,[[["usercontext",3]]]],[5,"map_kernel","","Map kernel for the new page table.",null,[[]]],[5,"pmem_read","","Read physical memory from `paddr` to `buf`.",null,[[["physaddr",6]]]],[5,"pmem_write","","Write physical memory to `paddr` from `buf`.",null,[[["physaddr",6]]]],[5,"frame_copy","","Copy content of `src` frame to `target` frame",null,[[["physaddr",6]]]],[5,"frame_zero_in_range","","Zero `target` frame.",null,[[["physaddr",6]]]],[5,"frame_flush","","Flush the physical frame.",null,[[["physaddr",6]]]],[5,"timer_set","","",null,[[["duration",3],["box",3],["fnonce",8]]]],[5,"timer_tick","","",null,[[]]],[5,"init","","Initialize the HAL.",null,[[["config",3]]]],[0,"arch","","",null,null],[3,"PageTableImpl","kernel_hal_bare::arch","Page Table",null,null],[3,"Config","","Configuration of HAL.",null,null],[12,"acpi_rsdp","","",0,null],[12,"smbios","","",0,null],[5,"set_page_table","","Set page table.",null,[[]]],[5,"init_framebuffer","","Initialize console on framebuffer.",null,[[["physaddr",6]]]],[5,"putfmt","","",null,[[["arguments",3]]]],[5,"serial_set_callback","","",null,[[["box",3],["fnonce",8]]]],[5,"serial_read","","",null,[[]]],[5,"serial_write","","",null,[[]]],[5,"timer_now","","",null,[[],["duration",3]]],[5,"apic_local_id","","",null,[[]]],[5,"init","","Initialize the HAL.",null,[[["config",3]]]],[5,"fetch_fault_vaddr","","",null,[[],["virtaddr",6]]],[5,"pc_firmware_tables","","Get physical address of `acpi_rsdp` and `smbios` on x86_64.",null,[[]]],[5,"get_acpi_table","","",null,[[],[["acpi",3],["option",4]]]],[5,"outpd","","IO Port in/out instruction",null,[[]]],[5,"inpd","","",null,[[]]],[11,"current","","",1,[[]]],[11,"new","","Create a new `PageTable`.",1,[[]]],[11,"map","","Map the page of `vaddr` to the frame of `paddr` with…",1,[[["physaddr",3],["mmuflags",3],["virtaddr",3]],["result",4]]],[11,"unmap","","Unmap the page of `vaddr`.",1,[[["virtaddr",3]],["result",4]]],[11,"protect","","Change the `flags` of the page of `vaddr`.",1,[[["mmuflags",3],["virtaddr",3]],["result",4]]],[11,"query","","Query the physical address which the page of `vaddr` maps…",1,[[["virtaddr",3]],[["physaddr",3],["result",4]]]],[11,"spawn","kernel_hal_bare","",2,[[["box",3],["pin",3]]]],[11,"set_tid","","",2,[[]]],[11,"get_tid","","",2,[[]]],[11,"alloc","","",3,[[],["option",4]]],[11,"dealloc","","",3,[[]]],[11,"zero_frame_addr","","",3,[[],["physaddr",6]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","kernel_hal_bare::arch","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"deref","kernel_hal_bare","",4,[[],["mutex",3]]],[11,"initialize","","",4,[[]]]],"p":[[3,"Config"],[3,"PageTableImpl"],[3,"Thread"],[3,"Frame"],[3,"NAIVE_TIMER"]]};
searchIndex["kernel_hal_unix"] = {"doc":"","i":[[3,"MMUFlags","kernel_hal_unix","",null,null],[4,"CachePolicy","","",null,null],[13,"Cached","","",0,null],[13,"Uncached","","",0,null],[13,"UncachedDevice","","",0,null],[13,"WriteCombining","","",0,null],[17,"CACHE_POLICY_MASK","","",null,null],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[6,"DevVAddr","","",null,null],[17,"PAGE_SIZE","","",null,null],[0,"defs","","",null,null],[3,"MMUFlags","kernel_hal_unix::defs","",null,null],[4,"CachePolicy","","",null,null],[13,"Cached","","",0,null],[13,"Uncached","","",0,null],[13,"UncachedDevice","","",0,null],[13,"WriteCombining","","",0,null],[17,"CACHE_POLICY_MASK","","",null,null],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[6,"DevVAddr","","",null,null],[17,"PAGE_SIZE","","",null,null],[0,"user","kernel_hal_unix","",null,null],[3,"UserPtr","kernel_hal_unix::user","",null,null],[8,"Policy","","",null,null],[8,"Read","","",null,null],[8,"Write","","",null,null],[4,"In","","",null,null],[4,"Out","","",null,null],[4,"InOut","","",null,null],[6,"UserInPtr","","",null,null],[6,"UserOutPtr","","",null,null],[6,"UserInOutPtr","","",null,null],[4,"Error","","The error type which is returned from user pointer.",null,null],[13,"InvalidUtf8","","",1,null],[13,"InvalidPointer","","",1,null],[0,"vdso","kernel_hal_unix","",null,null],[3,"VdsoConstants","kernel_hal_unix::vdso","This struct contains constants that are initialized by the…",null,null],[12,"max_num_cpus","","Maximum number of CPUs that might be online during the…",2,null],[12,"features","","Bit map indicating features.",2,null],[12,"dcache_line_size","","Number of bytes in a data cache line.",2,null],[12,"icache_line_size","","Number of bytes in an instruction cache line.",2,null],[12,"ticks_per_second","","Conversion factor for zx_ticks_get return values to seconds.",2,null],[12,"ticks_to_mono_numerator","","Ratio which relates ticks (zx_ticks_get) to clock monotonic.",2,null],[12,"ticks_to_mono_denominator","","",2,null],[12,"physmem","","Total amount of physical memory in the system, in bytes.",2,null],[12,"buildid","","A build id of the system. Currently a non-null terminated…",2,null],[3,"Features","","Bit map indicating features.",null,null],[12,"cpu","","",3,null],[12,"hw_breakpoint_count","","Total amount of debug registers available in the system.",3,null],[12,"hw_watchpoint_count","","",3,null],[3,"BuildID","","",null,null],[3,"GeneralRegs","kernel_hal_unix","General registers",null,null],[12,"rax","","",4,null],[12,"rbx","","",4,null],[12,"rcx","","",4,null],[12,"rdx","","",4,null],[12,"rsi","","",4,null],[12,"rdi","","",4,null],[12,"rbp","","",4,null],[12,"rsp","","",4,null],[12,"r8","","",4,null],[12,"r9","","",4,null],[12,"r10","","",4,null],[12,"r11","","",4,null],[12,"r12","","",4,null],[12,"r13","","",4,null],[12,"r14","","",4,null],[12,"r15","","",4,null],[12,"rip","","",4,null],[12,"rflags","","",4,null],[12,"fsbase","","",4,null],[12,"gsbase","","",4,null],[3,"UserContext","","User space context",null,null],[12,"general","","",5,null],[12,"trap_num","","",5,null],[12,"error_code","","",5,null],[5,"timer_now","","Get current time.",null,[[],["duration",3]]],[17,"CACHE_POLICY_MASK","","",null,null],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[6,"DevVAddr","","",null,null],[17,"PAGE_SIZE","","",null,null],[3,"Thread","","",null,null],[5,"context_run","","",null,[[["usercontext",3]]]],[3,"PageTable","","Page Table",null,null],[3,"PhysFrame","","",null,null],[5,"pmem_read","","Read physical memory from `paddr` to `buf`.",null,[[]]],[5,"pmem_write","","Write physical memory to `paddr` from `buf`.",null,[[]]],[5,"frame_copy","","Copy content of `src` frame to `target` frame.",null,[[]]],[5,"frame_zero_in_range","","Zero `target` frame.",null,[[]]],[5,"frame_flush","","Flush the physical frame.",null,[[]]],[5,"serial_set_callback","","Register a callback of serial readable event.",null,[[["box",3],["fnonce",8]]]],[5,"serial_read","","Read a string from console.",null,[[]]],[5,"serial_write","","Output a string to console.",null,[[]]],[5,"timer_set","","Set a new timer. After `deadline`, the `callback` will be…",null,[[["box",3],["fnonce",8],["duration",3]]]],[5,"timer_tick","","Check timers, call when timer interrupt happened.",null,[[]]],[3,"InterruptManager","","",null,null],[5,"irq_handle","","",null,[[]]],[5,"vdso_constants","","Get platform specific information.",null,[[],["vdsoconstants",3]]],[5,"fetch_fault_vaddr","","Get fault address of the last page fault.",null,[[]]],[5,"pc_firmware_tables","","Get physical address of `acpi_rsdp` and `smbios` on x86_64.",null,[[]]],[5,"get_acpi_table","","Get ACPI Table",null,[[],[["acpi",3],["option",4]]]],[5,"outpd","","IO Ports access on x86 platform",null,[[]]],[5,"inpd","","",null,[[]]],[5,"apic_local_id","","Get local APIC ID",null,[[]]],[5,"yield_now","","Yields execution back to the async runtime.",null,[[]]],[5,"sleep_until","","Sleeps until the specified of time.",null,[[["duration",3]]]],[3,"SleepFuture","","",null,null],[5,"serial_getchar","","Get a char from serial.",null,[[]]],[3,"SerialFuture","","",null,null],[3,"MMUFlags","","",null,null],[4,"CachePolicy","","",null,null],[13,"Cached","","",0,null],[13,"Uncached","","",0,null],[13,"UncachedDevice","","",0,null],[13,"WriteCombining","","",0,null],[3,"VectorRegs","","",null,null],[12,"fcw","","",6,null],[12,"fsw","","",6,null],[12,"ftw","","",6,null],[12,"_pad0","","",6,null],[12,"fop","","",6,null],[12,"fip","","",6,null],[12,"fcs","","",6,null],[12,"_pad1","","",6,null],[12,"fdp","","",6,null],[12,"fds","","",6,null],[12,"_pad2","","",6,null],[12,"mxcsr","","",6,null],[12,"mxcsr_mask","","",6,null],[12,"mm","","",6,null],[12,"xmm","","",6,null],[12,"reserved","","",6,null],[12,"available","","",6,null],[3,"U128","","",null,null],[12,"0","","",7,null],[3,"Thread","","",null,null],[3,"PageTable","","Page Table",null,null],[3,"PhysFrame","","",null,null],[5,"pmem_read","","Read physical memory from `paddr` to `buf`.",null,[[["physaddr",6]]]],[5,"pmem_write","","Write physical memory to `paddr` from `buf`.",null,[[["physaddr",6]]]],[5,"frame_copy","","Copy content of `src` frame to `target` frame",null,[[["physaddr",6]]]],[5,"frame_zero","","Zero `target` frame.",null,[[["physaddr",6]]]],[5,"frame_flush","","Flush the physical frame.",null,[[["physaddr",6]]]],[5,"serial_set_callback","","",null,[[["box",3],["fnonce",8]]]],[5,"serial_read","","",null,[[]]],[5,"serial_write","","Output a char to console.",null,[[]]],[5,"timer_now","","Get current time.",null,[[],["duration",3]]],[5,"timer_set","","Set a new timer.",null,[[["duration",3],["fnonce",8],["box",3]]]],[5,"vdso_constants","","",null,[[],["vdsoconstants",3]]],[5,"init","","Initialize the HAL.",null,[[]]],[5,"syscall_entry","","",null,null],[11,"spawn","","",8,[[["box",3],["pin",3]]]],[11,"set_tid","","",8,[[]]],[11,"get_tid","","",8,[[]]],[11,"new","","Create a new `PageTable`.",9,[[]]],[11,"map","","Map the page of `vaddr` to the frame of `paddr` with…",9,[[["virtaddr",6],["mmuflags",3],["physaddr",6]],["result",4]]],[11,"unmap","","Unmap the page of `vaddr`.",9,[[["virtaddr",6]],["result",4]]],[11,"protect","","Change the `flags` of the page of `vaddr`.",9,[[["virtaddr",6],["mmuflags",3]],["result",4]]],[11,"query","","Query the physical address which the page of `vaddr` maps…",9,[[["virtaddr",6]],[["result",4],["physaddr",6]]]],[11,"unmap_cont","","",9,[[["virtaddr",6]],["result",4]]],[11,"alloc","","",10,[[],["option",4]]],[11,"zero_frame_addr","","",10,[[],["physaddr",6]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","kernel_hal_unix::user","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","kernel_hal_unix::vdso","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","kernel_hal_unix","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from_iter","","",11,[[],["mmuflags",3]]],[11,"from","kernel_hal_unix::user","",12,[[],["userptr",3]]],[11,"fmt","kernel_hal_unix","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",11,[[["mmuflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",11,[[["mmuflags",3]]]],[11,"le","","",11,[[["mmuflags",3]]]],[11,"gt","","",11,[[["mmuflags",3]]]],[11,"ge","","",11,[[["mmuflags",3]]]],[11,"fmt","","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"bitor_assign","","Adds the set of flags.",11,[[["mmuflags",3]]]],[11,"hash","","",11,[[]]],[11,"cmp","","",11,[[["mmuflags",3]],["ordering",4]]],[11,"fmt","","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix::user","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix::vdso","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",16,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix::vdso","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix::user","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"drop","kernel_hal_unix","",19,[[]]],[11,"sub","","Returns the set difference of the two sets of flags.",11,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",11,[[["mmuflags",3]],["mmuflags",3]]],[11,"not","","Returns the complement of this set of flags.",11,[[],["mmuflags",3]]],[11,"fmt","","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",11,[[["mmuflags",3]]]],[11,"poll","","",22,[[["pin",3],["serialfuture",3],["context",3]],["poll",4]]],[11,"poll","","",21,[[["pin",3],["sleepfuture",3],["context",3]],["poll",4]]],[11,"bitand_assign","","Disables all flags disabled in the set.",11,[[["mmuflags",3]]]],[11,"extend","","",11,[[]]],[11,"try_from","","",0,[[],[["result",4],["cachepolicy",4]]]],[11,"bitor","","Returns the union of the two sets of flags.",11,[[["mmuflags",3]],["mmuflags",3]]],[11,"default","kernel_hal_unix::vdso","",16,[[],["buildid",3]]],[11,"default","kernel_hal_unix","",6,[[],["vectorregs",3]]],[11,"default","","",7,[[],["u128",3]]],[11,"eq","","",0,[[["cachepolicy",4]]]],[11,"eq","kernel_hal_unix::user","",1,[[["error",4]]]],[11,"eq","kernel_hal_unix","",11,[[["mmuflags",3]]]],[11,"ne","","",11,[[["mmuflags",3]]]],[11,"clone","","",7,[[],["u128",3]]],[11,"clone","","",0,[[],["cachepolicy",4]]],[11,"clone","kernel_hal_unix::user","",1,[[],["error",4]]],[11,"clone","kernel_hal_unix","",6,[[],["vectorregs",3]]],[11,"clone","","",11,[[],["mmuflags",3]]],[11,"fmt","","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",11,[[["mmuflags",3]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",11,[[["mmuflags",3]],["mmuflags",3]]],[11,"fmt","","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",5,[[],["usercontext",3]]],[11,"clone","","",4,[[],["generalregs",3]]],[11,"default","","",5,[[],["usercontext",3]]],[11,"default","","",4,[[],["generalregs",3]]],[11,"drop","","",10,[[]]],[11,"fmt","","",10,[[["formatter",3]],[["result",4],["error",3]]]],[18,"CACHE_1","","",11,null],[18,"CACHE_2","","",11,null],[18,"READ","","",11,null],[18,"WRITE","","",11,null],[18,"EXECUTE","","",11,null],[18,"USER","","",11,null],[11,"empty","","Returns an empty set of flags",11,[[],["mmuflags",3]]],[11,"all","","Returns the set containing all flags.",11,[[],["mmuflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",11,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",11,[[],[["option",4],["mmuflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",11,[[],["mmuflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",11,[[],["mmuflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",11,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",11,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",11,[[["mmuflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",11,[[["mmuflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",11,[[["mmuflags",3]]]],[11,"remove","","Removes the specified flags in-place.",11,[[["mmuflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",11,[[["mmuflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",11,[[["mmuflags",3]]]],[11,"is_null","kernel_hal_unix::user","",12,[[]]],[11,"add","","",12,[[],["userptr",3]]],[11,"as_ptr","","",12,[[]]],[11,"check","","",12,[[],[["result",4],["error",4]]]],[11,"as_ref","","",12,[[],[["result",4],["error",4]]]],[11,"read","","",12,[[],[["result",4],["error",4]]]],[11,"read_if_not_null","","",12,[[],[["result",4],["option",4],["error",4]]]],[11,"read_array","","",12,[[],[["result",4],["vec",3],["error",4]]]],[11,"read_string","","",12,[[],[["error",4],["string",3],["result",4]]]],[11,"read_cstring","","",12,[[],[["error",4],["string",3],["result",4]]]],[11,"read_cstring_array","","",12,[[],[["vec",3],["error",4],["result",4]]]],[11,"write","","",12,[[],[["result",4],["error",4]]]],[11,"write_if_not_null","","",12,[[],[["result",4],["error",4]]]],[11,"write_array","","",12,[[],[["result",4],["error",4]]]],[11,"write_cstring","","",12,[[],[["result",4],["error",4]]]],[11,"run","kernel_hal_unix","Go to user space with the context, and come back when a…",5,[[]]],[11,"spawn","","Spawn a new thread.",17,[[["pin",3],["box",3]],["thread",3]]],[11,"set_tid","","Set tid and pid of current task.",17,[[]]],[11,"get_tid","","Get tid and pid of current task.",17,[[]]],[11,"current","","Get current page table",18,[[],["pagetable",3]]],[11,"new","","Create a new `PageTable`.",18,[[],["pagetable",3]]],[11,"map","","Map the page of `vaddr` to the frame of `paddr` with…",18,[[["mmuflags",3]],["result",4]]],[11,"unmap","","Unmap the page of `vaddr`.",18,[[],["result",4]]],[11,"protect","","Change the `flags` of the page of `vaddr`.",18,[[["mmuflags",3]],["result",4]]],[11,"query","","Query the physical address which the page of `vaddr` maps…",18,[[],["result",4]]],[11,"table_phys","","Get the physical address of root page table.",18,[[]]],[11,"map_many","","",18,[[["mmuflags",3]],["result",4]]],[11,"map_cont","","",18,[[["mmuflags",3]],["result",4]]],[11,"unmap_cont","","",18,[[],["result",4]]],[11,"alloc","","",19,[[],[["option",4],["physframe",3]]]],[11,"alloc_contiguous_base","","",19,[[],["option",4]]],[11,"alloc_contiguous","","",19,[[],[["vec",3],["physframe",3]]]],[11,"addr","","",19,[[]]],[11,"zero_frame_addr","","",19,[[]]],[11,"handle","","Handle IRQ.",20,[[]]],[11,"set_ioapic_handle","","",20,[[["box",3],["fn",8]],["option",4]]],[11,"add_handle","","Add an interrupt handle to an irq",20,[[["box",3],["fn",8]],["option",4]]],[11,"reset_ioapic_handle","","",20,[[]]],[11,"remove_handle","","Remove the interrupt handle of an irq",20,[[]]],[11,"allocate_block","","Allocate contiguous positions for irq",20,[[],["option",4]]],[11,"free_block","","",20,[[]]],[11,"overwrite_handler","","",20,[[["box",3],["fn",8]]]],[11,"enable","","Enable IRQ.",20,[[]]],[11,"disable","","Disable IRQ.",20,[[]]],[11,"maxinstr","","Get IO APIC maxinstr",20,[[],["option",4]]],[11,"configure","","",20,[[]]],[11,"is_valid","","",20,[[]]]],"p":[[4,"CachePolicy"],[4,"Error"],[3,"VdsoConstants"],[3,"Features"],[3,"GeneralRegs"],[3,"UserContext"],[3,"VectorRegs"],[3,"U128"],[3,"Thread"],[3,"PageTable"],[3,"PhysFrame"],[3,"MMUFlags"],[3,"UserPtr"],[4,"In"],[4,"Out"],[4,"InOut"],[3,"BuildID"],[3,"Thread"],[3,"PageTable"],[3,"PhysFrame"],[3,"InterruptManager"],[3,"SleepFuture"],[3,"SerialFuture"]]};
searchIndex["linux_loader"] = {"doc":"","i":[[5,"run","linux_loader","",null,[[["filesystem",8],["string",3],["arc",3],["vec",3]],[["arc",3],["process",3]]]]],"p":[]};
searchIndex["linux_object"] = {"doc":"Linux kernel objects","i":[[0,"error","linux_object","",null,null],[4,"LxError","linux_object::error","",null,null],[13,"EUNDEF","","",0,null],[13,"EPERM","","",0,null],[13,"ENOENT","","",0,null],[13,"ESRCH","","",0,null],[13,"EINTR","","",0,null],[13,"EIO","","",0,null],[13,"ENXIO","","",0,null],[13,"E2BIG","","",0,null],[13,"ENOEXEC","","",0,null],[13,"EBADF","","",0,null],[13,"ECHILD","","",0,null],[13,"EAGAIN","","",0,null],[13,"ENOMEM","","",0,null],[13,"EACCES","","",0,null],[13,"EFAULT","","",0,null],[13,"ENOTBLK","","",0,null],[13,"EBUSY","","",0,null],[13,"EEXIST","","",0,null],[13,"EXDEV","","",0,null],[13,"ENODEV","","",0,null],[13,"ENOTDIR","","",0,null],[13,"EISDIR","","",0,null],[13,"EINVAL","","",0,null],[13,"ENFILE","","",0,null],[13,"EMFILE","","",0,null],[13,"ENOTTY","","",0,null],[13,"ETXTBSY","","",0,null],[13,"EFBIG","","",0,null],[13,"ENOSPC","","",0,null],[13,"ESPIPE","","",0,null],[13,"EROFS","","",0,null],[13,"EMLINK","","",0,null],[13,"EPIPE","","",0,null],[13,"EDOM","","",0,null],[13,"ERANGE","","",0,null],[13,"EDEADLK","","",0,null],[13,"ENAMETOOLONG","","",0,null],[13,"ENOLCK","","",0,null],[13,"ENOSYS","","",0,null],[13,"ENOTEMPTY","","",0,null],[13,"ELOOP","","",0,null],[13,"ENOTSOCK","","",0,null],[13,"ENOPROTOOPT","","",0,null],[13,"EPFNOSUPPORT","","",0,null],[13,"EAFNOSUPPORT","","",0,null],[13,"ENOBUFS","","",0,null],[13,"EISCONN","","",0,null],[13,"ENOTCONN","","",0,null],[13,"ECONNREFUSED","","",0,null],[6,"LxResult","","",null,null],[6,"SysResult","","",null,null],[0,"fs","linux_object","",null,null],[0,"vfs","linux_object::fs","",null,null],[8,"INode","linux_object::fs::vfs","Abstract file system object such as file or directory.",null,null],[10,"read_at","","Read bytes at `offset` into `buf`, return the number of…",1,[[],[["fserror",4],["result",4]]]],[10,"write_at","","Write bytes at `offset` from `buf`, return the number of…",1,[[],[["fserror",4],["result",4]]]],[10,"poll","","Poll the events, return a bitmap of events.",1,[[],[["fserror",4],["pollstatus",3],["result",4]]]],[11,"metadata","","Get metadata of the INode",1,[[],[["result",4],["fserror",4],["metadata",3]]]],[11,"set_metadata","","Set metadata of the INode",1,[[["metadata",3]],[["fserror",4],["result",4]]]],[11,"sync_all","","Sync all data and metadata",1,[[],[["fserror",4],["result",4]]]],[11,"sync_data","","Sync data (not include metadata)",1,[[],[["fserror",4],["result",4]]]],[11,"resize","","Resize the file",1,[[],[["fserror",4],["result",4]]]],[11,"create","","Create a new INode in the directory",1,[[["filetype",4]],[["result",4],["arc",3],["fserror",4]]]],[11,"create2","","Create a new INode in the directory, with a data field for…",1,[[["filetype",4]],[["result",4],["arc",3],["fserror",4]]]],[11,"link","","Create a hard link `name` to `other`",1,[[["arc",3]],[["fserror",4],["result",4]]]],[11,"unlink","","Delete a hard link `name`",1,[[],[["fserror",4],["result",4]]]],[11,"move_","","Move INode `self/old_name` to `target/new_name`. If…",1,[[["arc",3]],[["fserror",4],["result",4]]]],[11,"find","","Find the INode `name` in the directory",1,[[],[["result",4],["arc",3],["fserror",4]]]],[11,"get_entry","","Get the name of directory entry",1,[[],[["fserror",4],["result",4],["string",3]]]],[11,"io_control","","Control device",1,[[],[["fserror",4],["result",4]]]],[11,"fs","","Get the file system of the INode",1,[[],[["arc",3],["filesystem",8]]]],[10,"as_any_ref","","This is used to implement dynamics cast. Simply return…",1,[[],["any",8]]],[4,"IOCTLError","","",null,null],[13,"NotValidFD","","",2,null],[13,"NotValidMemory","","",2,null],[13,"NotValidParam","","",2,null],[13,"NotCharDevice","","",2,null],[3,"PollStatus","","",null,null],[12,"read","","",3,null],[12,"write","","",3,null],[12,"error","","",3,null],[3,"Metadata","","Metadata of INode",null,null],[12,"dev","","Device ID",4,null],[12,"inode","","Inode number",4,null],[12,"size","","Size in bytes",4,null],[12,"blk_size","","A file system-specific preferred I/O block size for this…",4,null],[12,"blocks","","Size in blocks",4,null],[12,"atime","","Time of last access",4,null],[12,"mtime","","Time of last modification",4,null],[12,"ctime","","Time of last change",4,null],[12,"type_","","Type of file",4,null],[12,"mode","","Permission",4,null],[12,"nlinks","","Number of hard links",4,null],[12,"uid","","User ID",4,null],[12,"gid","","Group ID",4,null],[12,"rdev","","Raw device id e.g. /dev/null: makedev(0x1, 0x3)",4,null],[3,"Timespec","","",null,null],[12,"sec","","",5,null],[12,"nsec","","",5,null],[4,"FileType","","",null,null],[13,"File","","",6,null],[13,"Dir","","",6,null],[13,"SymLink","","",6,null],[13,"CharDevice","","",6,null],[13,"BlockDevice","","",6,null],[13,"NamedPipe","","",6,null],[13,"Socket","","",6,null],[3,"FsInfo","","Metadata of FileSystem",null,null],[12,"bsize","","File system block size",7,null],[12,"frsize","","Fundamental file system block size",7,null],[12,"blocks","","Total number of blocks on file system in units of `frsize`",7,null],[12,"bfree","","Total number of free blocks",7,null],[12,"bavail","","Number of free blocks available to non-privileged process",7,null],[12,"files","","Total number of file serial numbers",7,null],[12,"ffree","","Total number of free file serial numbers",7,null],[12,"namemax","","Maximum filename length",7,null],[4,"FsError","","",null,null],[13,"NotSupported","","",8,null],[13,"NotFile","","",8,null],[13,"IsDir","","",8,null],[13,"NotDir","","",8,null],[13,"EntryNotFound","","",8,null],[13,"EntryExist","","",8,null],[13,"NotSameFs","","",8,null],[13,"InvalidParam","","",8,null],[13,"NoDeviceSpace","","",8,null],[13,"DirRemoved","","",8,null],[13,"DirNotEmpty","","",8,null],[13,"WrongFs","","",8,null],[13,"DeviceError","","",8,null],[13,"IOCTLError","","",8,null],[13,"NoDevice","","",8,null],[13,"Again","","",8,null],[13,"SymLoop","","",8,null],[13,"Busy","","",8,null],[6,"Result","","",null,null],[8,"FileSystem","","Abstract file system",null,null],[10,"sync","","Sync all data to the storage",9,[[],[["fserror",4],["result",4]]]],[10,"root_inode","","Get the root INode of the file system",9,[[],[["arc",3],["inode",8]]]],[10,"info","","Get the file system information",9,[[],["fsinfo",3]]],[5,"make_rdev","","",null,[[]]],[3,"File","linux_object::fs","",null,null],[12,"path","","",10,null],[3,"OpenOptions","","",null,null],[12,"read","","",11,null],[12,"write","","",11,null],[12,"append","","Before each write, the file offset is positioned at the…",11,null],[12,"nonblock","","",11,null],[3,"Pseudo","","",null,null],[3,"RandomINodeData","","",null,null],[3,"RandomINode","","",null,null],[3,"Stdout","","",null,null],[3,"FileDesc","","",null,null],[4,"SeekFrom","","",null,null],[13,"Start","","",12,null],[13,"End","","",12,null],[13,"Current","","",12,null],[5,"create_root_fs","","",null,[[["filesystem",8],["arc",3]],[["arc",3],["inode",8]]]],[5,"split_path","","Split a `path` str to `(base_path, file_name)`",null,[[]]],[11,"new","","",10,[[["arc",3],["inode",8],["openoptions",3],["string",3]],["arc",3]]],[11,"read","","",10,[[],["lxresult",6]]],[11,"read_at","","",10,[[],["lxresult",6]]],[11,"write","","",10,[[],["lxresult",6]]],[11,"write_at","","",10,[[],["lxresult",6]]],[11,"seek","","",10,[[["seekfrom",4]],["lxresult",6]]],[11,"set_len","","",10,[[],["lxresult",6]]],[11,"sync_all","","",10,[[],["lxresult",6]]],[11,"sync_data","","",10,[[],["lxresult",6]]],[11,"metadata","","",10,[[],[["metadata",3],["lxresult",6]]]],[11,"lookup_follow","","",10,[[],[["lxresult",6],["arc",3]]]],[11,"read_entry","","",10,[[],[["lxresult",6],["string",3]]]],[11,"poll","","",10,[[],[["lxresult",6],["pollstatus",3]]]],[11,"io_control","","",10,[[],["lxresult",6]]],[11,"inode","","",10,[[],[["arc",3],["inode",8]]]],[11,"fcntl","","",10,[[],["lxresult",6]]],[11,"new","","",13,[[["filetype",4]]]],[11,"new","","",14,[[],["randominode",3]]],[8,"FileLike","","Generic file interface",null,null],[10,"read","","",15,[[],["lxresult",6]]],[10,"write","","",15,[[],["lxresult",6]]],[10,"read_at","","",15,[[],["lxresult",6]]],[10,"write_at","","",15,[[],["lxresult",6]]],[10,"poll","","",15,[[],[["lxresult",6],["pollstatus",3]]]],[10,"ioctl","","",15,[[],["lxresult",6]]],[10,"fcntl","","",15,[[],["lxresult",6]]],[8,"INodeExt","","",null,null],[10,"read_as_vec","","",16,[[],[["vec",3],["result",6]]]],[11,"is","","Returns true if the trait object wraps an object of type…",15,[[]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the…",15,[[["box",3]],[["result",4],["box",3],["box",3]]]],[11,"downcast_rc","","Returns an `Rc`-ed object from an `Rc`-ed trait object if…",15,[[["rc",3]],[["rc",3],["rc",3],["result",4]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object…",15,[[],["option",4]]],[11,"downcast_mut","","Returns a mutable reference to the object within the trait…",15,[[],["option",4]]],[11,"downcast_arc","","Returns an `Arc`-ed object from an `Arc`-ed trait object…",15,[[["arc",3]],[["arc",3],["arc",3],["result",4]]]],[18,"CWD","","Pathname is interpreted relative to the current working…",17,null],[0,"loader","linux_object","",null,null],[3,"LinuxElfLoader","linux_object::loader","Linux ELF Program Loader.",null,null],[12,"syscall_entry","","",18,null],[12,"stack_pages","","",18,null],[12,"root_inode","","",18,null],[11,"load","","",18,[[["arc",3],["string",3],["vec",3]],["lxresult",6]]],[0,"process","linux_object","Linux Process",null,null],[3,"LinuxProcess","linux_object::process","Linux specific process information.",null,null],[12,"cwd","","Current Working Directory",19,null],[12,"exec_path","","Execute path",19,null],[5,"wait_child","","Wait for state changes in a child of the calling process,…",null,[[["arc",3],["koid",6]]]],[5,"wait_child_any","","Wait for state changes in a child of the calling process.",null,[[["arc",3]]]],[6,"ExitCode","","",null,null],[8,"ProcessExt","","",null,null],[10,"create_linux","","",20,[[["arc",3],["filesystem",8],["arc",3]],[["arc",3],["zxresult",6]]]],[10,"lock_linux","","",20,[[],[["mutexguard",3],["linuxprocess",3]]]],[10,"vfork_from","","",20,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"new","","Create a new process.",19,[[["filesystem",8],["arc",3]]]],[11,"get_futex","","Get futex object.",19,[[["virtaddr",6]],[["futex",3],["arc",3]]]],[11,"add_file","","Add a file to the file descriptor table.",19,[[["arc",3],["filelike",8]],[["lxresult",6],["filedesc",3]]]],[11,"add_file_at","","Add a file to the file descriptor table at given `fd`.",19,[[["arc",3],["filedesc",3],["filelike",8]]]],[11,"get_file","","Get the `File` with given `fd`.",19,[[["filedesc",3]],[["lxresult",6],["arc",3]]]],[11,"get_file_like","","Get the `FileLike` with given `fd`.",19,[[["filedesc",3]],[["arc",3],["lxresult",6]]]],[11,"close_file","","Close file descriptor `fd`.",19,[[["filedesc",3]],["lxresult",6]]],[11,"root_inode","","Get root INode of the process.",19,[[],["arc",3]]],[11,"parent","","Get parent process.",19,[[],[["option",4],["arc",3]]]],[0,"thread","linux_object","Linux Thread",null,null],[3,"LinuxThread","linux_object::thread","Linux specific thread information.",null,null],[8,"ThreadExt","","",null,null],[10,"create_linux","","",21,[[["arc",3]],[["arc",3],["zxresult",6]]]],[10,"lock_linux","","",21,[[],[["linuxthread",3],["mutexguard",3]]]],[10,"set_tid_address","","",21,[[["useroutptr",6]]]],[10,"exit_linux","","",21,[[]]],[11,"from","linux_object::error","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",0,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",0,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"from","linux_object::fs::vfs","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_any_arc","","",2,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",2,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",2,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_any_arc","","",3,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",3,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",3,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"into_any_arc","","",4,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",4,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",4,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"into_any_arc","","",5,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",5,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",5,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"into_any_arc","","",6,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",6,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",6,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_any_arc","","",7,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",7,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",7,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_string","","",8,[[],["string",3]]],[11,"into_any_arc","","",8,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",8,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",8,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"from","linux_object::fs","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_any_arc","","",10,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",10,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",10,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_any_arc","","",11,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",11,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",11,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_any_arc","","",13,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",13,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",13,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"into_any_arc","","",22,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",22,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",22,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",22,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"into_any_arc","","",14,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",14,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",14,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"into_any_arc","","",23,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",23,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",23,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",23,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"into_any_arc","","",17,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",17,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",17,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",17,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_any_arc","","",12,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",12,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",12,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"from","linux_object::loader","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"into_any_arc","","",18,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",18,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",18,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"from","linux_object::process","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_any_arc","","",19,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",19,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",19,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"from","linux_object::thread","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_any_arc","","",24,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",24,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",24,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",24,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"clone","linux_object::fs::vfs","",5,[[],["timespec",3]]],[11,"clone","","",4,[[],["metadata",3]]],[11,"clone","","",6,[[],["filetype",4]]],[11,"eq","","",6,[[["filetype",4]]]],[11,"eq","","",8,[[["fserror",4]]]],[11,"eq","","",5,[[["timespec",3]]]],[11,"ne","","",5,[[["timespec",3]]]],[11,"eq","","",4,[[["metadata",3]]]],[11,"ne","","",4,[[["metadata",3]]]],[11,"cmp","","",5,[[["timespec",3]],["ordering",4]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",5,[[]]],[11,"default","","",3,[[],["pollstatus",3]]],[11,"partial_cmp","","",5,[[["timespec",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["timespec",3]]]],[11,"le","","",5,[[["timespec",3]]]],[11,"gt","","",5,[[["timespec",3]]]],[11,"ge","","",5,[[["timespec",3]]]],[11,"from","","",4,[[["metadata",3]],["metadata",3]]],[11,"from","","",8,[[["error",3]],["fserror",4]]],[11,"from","","",8,[[["deverror",3]],["fserror",4]]],[11,"from","","",6,[[["filetype",4]],["filetype",4]]],[11,"read","linux_object::fs","",10,[[],["lxresult",6]]],[11,"write","","",10,[[],["lxresult",6]]],[11,"read_at","","",10,[[],["lxresult",6]]],[11,"write_at","","",10,[[],["lxresult",6]]],[11,"poll","","",10,[[],[["lxresult",6],["pollstatus",3]]]],[11,"ioctl","","",10,[[],["lxresult",6]]],[11,"fcntl","","",10,[[],["lxresult",6]]],[11,"read_as_vec","linux_object::fs::vfs","",1,[[],[["vec",3],["result",6]]]],[11,"from","linux_object::error","",0,[[["zxerror",4]]]],[11,"from","","",0,[[["fserror",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","linux_object::fs","",17,[[]]],[11,"fmt","linux_object::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::fs","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::error","",0,[[["formatter",3]],["result",6]]],[11,"eq","linux_object::fs","",17,[[["filedesc",3]]]],[11,"ne","","",17,[[["filedesc",3]]]],[11,"cmp","","",17,[[["filedesc",3]],["ordering",4]]],[11,"partial_cmp","","",17,[[["filedesc",3]],[["ordering",4],["option",4]]]],[11,"lt","","",17,[[["filedesc",3]]]],[11,"le","","",17,[[["filedesc",3]]]],[11,"gt","","",17,[[["filedesc",3]]]],[11,"ge","","",17,[[["filedesc",3]]]],[11,"hash","","",17,[[]]],[11,"try_from","","",17,[[],["lxresult",6]]],[11,"into","","",17,[[]]],[11,"clone","","",14,[[],["randominode",3]]],[11,"clone","","",17,[[],["filedesc",3]]],[11,"default","","",23,[[],["stdout",3]]],[11,"read_at","","",13,[[],["result",6]]],[11,"write_at","","",13,[[],["result",6]]],[11,"poll","","",13,[[],[["result",6],["pollstatus",3]]]],[11,"metadata","","",13,[[],[["result",6],["metadata",3]]]],[11,"as_any_ref","","",13,[[],["any",8]]],[11,"read_at","","",14,[[],["result",6]]],[11,"write_at","","",14,[[],["result",6]]],[11,"poll","","",14,[[],[["result",6],["pollstatus",3]]]],[11,"metadata","","",14,[[],[["result",6],["metadata",3]]]],[11,"as_any_ref","","",14,[[],["any",8]]],[11,"read_at","","",23,[[],["result",6]]],[11,"write_at","","",23,[[],["result",6]]],[11,"poll","","",23,[[],[["result",6],["pollstatus",3]]]],[11,"io_control","","",23,[[],["result",6]]],[11,"as_any_ref","","",23,[[],["any",8]]],[11,"id","","",10,[[],["koid",6]]],[11,"type_name","","",10,[[]]],[11,"name","","",10,[[],["string",3]]],[11,"set_name","","",10,[[]]],[11,"signal","","",10,[[],["signal",3]]],[11,"signal_set","","",10,[[["signal",3]]]],[11,"signal_change","","",10,[[["signal",3]]]],[11,"add_signal_callback","","",10,[[["signalhandler",6]]]],[11,"downcast_ref","linux_object::fs::vfs","Downcast the INode to specific struct",1,[[],["option",4]]],[11,"list","","Get all directory entries as a Vec",1,[[],[["vec",3],["result",4],["fserror",4]]]],[11,"lookup","","Lookup path from current INode, and do not follow symlinks",1,[[],[["result",4],["arc",3],["fserror",4]]]],[11,"lookup_follow","","Lookup path from current INode, and follow symlinks at…",1,[[],[["result",4],["arc",3],["fserror",4]]]],[11,"lookup_inode_at","linux_object::process","Lookup INode from the process.",19,[[["filedesc",3]],[["lxresult",6],["arc",3]]]],[11,"lookup_inode","","",19,[[],[["lxresult",6],["arc",3]]]]],"p":[[4,"LxError"],[8,"INode"],[4,"IOCTLError"],[3,"PollStatus"],[3,"Metadata"],[3,"Timespec"],[4,"FileType"],[3,"FsInfo"],[4,"FsError"],[8,"FileSystem"],[3,"File"],[3,"OpenOptions"],[4,"SeekFrom"],[3,"Pseudo"],[3,"RandomINode"],[8,"FileLike"],[8,"INodeExt"],[3,"FileDesc"],[3,"LinuxElfLoader"],[3,"LinuxProcess"],[8,"ProcessExt"],[8,"ThreadExt"],[3,"RandomINodeData"],[3,"Stdout"],[3,"LinuxThread"]]};
searchIndex["linux_syscall"] = {"doc":"Linux syscall implementations","i":[[3,"Syscall","linux_syscall","",null,null],[12,"thread","","",0,null],[12,"syscall_entry","","",0,null],[12,"regs","","",0,null],[12,"spawn_fn","","",0,null],[12,"exit","","Set `true` to exit current task.",0,null],[11,"sys_getcwd","","",0,[[["useroutptr",6]],["sysresult",6]]],[11,"sys_chdir","","",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_mkdir","","",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_mkdirat","","",0,[[["userinptr",6],["filedesc",3]],["sysresult",6]]],[11,"sys_rmdir","","",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_getdents64","","",0,[[["useroutptr",6],["filedesc",3]],["sysresult",6]]],[11,"sys_link","","",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_linkat","","",0,[[["userinptr",6],["filedesc",3]],["sysresult",6]]],[11,"sys_unlink","","",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_unlinkat","","",0,[[["userinptr",6],["filedesc",3]],["sysresult",6]]],[11,"sys_rename","","",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_renameat","","",0,[[["userinptr",6],["filedesc",3]],["sysresult",6]]],[11,"sys_readlink","","",0,[[["useroutptr",6],["userinptr",6]],["sysresult",6]]],[11,"sys_readlinkat","","",0,[[["userinptr",6],["useroutptr",6],["filedesc",3]],["sysresult",6]]],[11,"sys_open","","",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_openat","","",0,[[["userinptr",6],["filedesc",3]],["sysresult",6]]],[11,"sys_close","","",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_dup2","","",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_read","","",0,[[["useroutptr",6],["filedesc",3]],["sysresult",6]]],[11,"sys_write","","",0,[[["userinptr",6],["filedesc",3]],["sysresult",6]]],[11,"sys_pread","","",0,[[["useroutptr",6],["filedesc",3]],["sysresult",6]]],[11,"sys_pwrite","","",0,[[["userinptr",6],["filedesc",3]],["sysresult",6]]],[11,"sys_readv","","",0,[[["iovec",3],["userinptr",6],["filedesc",3]],["sysresult",6]]],[11,"sys_writev","","",0,[[["iovec",3],["userinptr",6],["filedesc",3]],["sysresult",6]]],[11,"sys_lseek","","",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_truncate","","",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_ftruncate","","",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_sendfile","","",0,[[["userinoutptr",6],["filedesc",3]],["sysresult",6]]],[11,"sys_copy_file_range","","",0,[[["userinoutptr",6],["filedesc",3]],["sysresult",6]]],[11,"sys_sync","","",0,[[],["sysresult",6]]],[11,"sys_fsync","","",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_fdatasync","","",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_ioctl","","",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_fcntl","","",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_access","","",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_faccessat","","",0,[[["userinptr",6],["filedesc",3]],["sysresult",6]]],[11,"sys_lstat","","",0,[[["useroutptr",6],["stat",3],["userinptr",6]],["sysresult",6]]],[11,"sys_fstat","","",0,[[["useroutptr",6],["stat",3],["filedesc",3]],["sysresult",6]]],[11,"sys_fstatat","","",0,[[["stat",3],["userinptr",6],["useroutptr",6],["filedesc",3]],["sysresult",6]]],[11,"sys_stat","","",0,[[["useroutptr",6],["stat",3],["userinptr",6]],["sysresult",6]]],[11,"sys_arch_prctl","","",0,[[],["sysresult",6]]],[11,"sys_uname","","",0,[[["useroutptr",6]],["sysresult",6]]],[11,"sys_futex","","",0,[[["timespec",3],["userinptr",6]]]],[11,"sys_fork","","Fork the current process. Return the child's PID.",0,[[]]],[11,"sys_vfork","","",0,[[]]],[11,"sys_clone","","Create a new thread in the current process. The new…",0,[[["useroutptr",6]],["sysresult",6]]],[11,"sys_wait4","","Wait for a child process exited.",0,[[["useroutptr",6]]]],[11,"sys_execve","","Replaces the current ** process ** with a new process image",0,[[["userinptr",6],["userinptr",6]],["sysresult",6]]],[11,"sys_gettid","","Get the current thread ID.",0,[[],["sysresult",6]]],[11,"sys_getpid","","Get the current process ID.",0,[[],["sysresult",6]]],[11,"sys_getppid","","Get the parent process ID.",0,[[],["sysresult",6]]],[11,"sys_exit","","Exit the current thread",0,[[],["sysresult",6]]],[11,"sys_exit_group","","Exit the current thread group (i.e. process)",0,[[],["sysresult",6]]],[11,"sys_set_tid_address","","",0,[[["useroutptr",6]],["sysresult",6]]],[11,"sys_clock_gettime","","",0,[[["timespec",3],["useroutptr",6]],["sysresult",6]]],[11,"sys_mmap","","",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_mprotect","","",0,[[],["sysresult",6]]],[11,"sys_munmap","","",0,[[],["sysresult",6]]],[11,"syscall","","",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",0,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",0,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]]],"p":[[3,"Syscall"]]};
searchIndex["zircon_loader"] = {"doc":"","i":[[3,"Images","zircon_loader","Program images to run.",null,null],[12,"userboot","","",0,null],[12,"vdso","","",0,null],[12,"decompressor","","",0,null],[12,"zbi","","",0,null],[5,"run_userboot","","",null,[[["images",3]],[["arc",3],["process",3]]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",0,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",0,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"vzip","","",0,[[]]]],"p":[[3,"Images"]]};
searchIndex["zircon_object"] = {"doc":"Zircon kernel objects","i":[[4,"ZxError","zircon_object","Zircon statuses are signed 32 bit integers. The space of…",null,null],[13,"OK","","",0,null],[13,"INTERNAL","","The system encountered an otherwise unspecified error…",0,null],[13,"NOT_SUPPORTED","","The operation is not implemented, supported, or enabled.",0,null],[13,"NO_RESOURCES","","The system was not able to allocate some resource needed…",0,null],[13,"NO_MEMORY","","The system was not able to allocate memory needed for the…",0,null],[13,"INTERNAL_INTR_RETRY","","The system call was interrupted, but should be retried.…",0,null],[13,"INVALID_ARGS","","an argument is invalid, ex. null pointer",0,null],[13,"BAD_HANDLE","","A specified handle value does not refer to a handle.",0,null],[13,"WRONG_TYPE","","The subject of the operation is the wrong type to perform…",0,null],[13,"BAD_SYSCALL","","The specified syscall number is invalid.",0,null],[13,"OUT_OF_RANGE","","An argument is outside the valid range for this operation.",0,null],[13,"BUFFER_TOO_SMALL","","A caller provided buffer is too small for this operation.",0,null],[13,"BAD_STATE","","operation failed because the current state of the object…",0,null],[13,"TIMED_OUT","","The time limit for the operation elapsed before the…",0,null],[13,"SHOULD_WAIT","","The operation cannot be performed currently but…",0,null],[13,"CANCELED","","The in-progress operation (e.g. a wait) has been canceled.",0,null],[13,"PEER_CLOSED","","The operation failed because the remote end of the subject…",0,null],[13,"NOT_FOUND","","The requested entity is not found.",0,null],[13,"ALREADY_EXISTS","","An object with the specified identifier already exists.…",0,null],[13,"ALREADY_BOUND","","The operation failed because the named entity is already…",0,null],[13,"UNAVAILABLE","","The subject of the operation is currently unable to…",0,null],[13,"ACCESS_DENIED","","The caller did not have permission to perform the…",0,null],[13,"IO","","Otherwise unspecified error occurred during I/O.",0,null],[13,"IO_REFUSED","","The entity the I/O operation is being performed on…",0,null],[13,"IO_DATA_INTEGRITY","","The data in the operation failed an integrity check and is…",0,null],[13,"IO_DATA_LOSS","","The data in the operation is currently unavailable and may…",0,null],[13,"IO_NOT_PRESENT","","The device is no longer available (has been unplugged from…",0,null],[13,"IO_OVERRUN","","More data was received from the device than expected.…",0,null],[13,"IO_MISSED_DEADLINE","","An operation did not complete within the required…",0,null],[13,"IO_INVALID","","The data in the operation is invalid parameter or is out…",0,null],[13,"BAD_PATH","","Path name is too long.",0,null],[13,"NOT_DIR","","Object is not a directory or does not support directory…",0,null],[13,"NOT_FILE","","Object is not a regular file.",0,null],[13,"FILE_BIG","","This operation would cause a file to exceed a…",0,null],[13,"NO_SPACE","","Filesystem or device space is exhausted.",0,null],[13,"NOT_EMPTY","","Directory is not empty.",0,null],[13,"STOP","","Do not call again. Example: A notification callback will…",0,null],[13,"NEXT","","Advance to the next item. Example: A notification callback…",0,null],[13,"ASYNC","","Ownership of the item has moved to an asynchronous worker.",0,null],[13,"PROTOCOL_NOT_SUPPORTED","","Specified protocol is not supported.",0,null],[13,"ADDRESS_UNREACHABLE","","Host is unreachable.",0,null],[13,"ADDRESS_IN_USE","","Address is being used by someone else.",0,null],[13,"NOT_CONNECTED","","Socket is not connected.",0,null],[13,"CONNECTION_REFUSED","","Remote peer rejected the connection.",0,null],[13,"CONNECTION_RESET","","Connection was reset.",0,null],[13,"CONNECTION_ABORTED","","Connection was aborted.",0,null],[0,"debuglog","","",null,null],[3,"DebugLog","zircon_object::debuglog","",null,null],[11,"create","","",1,[[],["arc",3]]],[11,"write","","",1,[[],["zxresult",6]]],[0,"dev","zircon_object","",null,null],[3,"BusTransactionInitiator","zircon_object::dev","Bus Transaction Initiator.",null,null],[3,"BtiInfo","","",null,null],[3,"Interrupt","","",null,null],[3,"InterruptFlags","","",null,null],[3,"InterruptOptions","","",null,null],[3,"Iommu","","Iommu refers to DummyIommu in zircon.",null,null],[3,"IommuPerms","","",null,null],[3,"PCIeBusDriver","","",null,null],[3,"MmioPcieAddressProvider","","",null,null],[3,"PioPcieAddressProvider","","",null,null],[3,"PcieDeviceInfo","","",null,null],[12,"vendor_id","","",2,null],[12,"device_id","","",2,null],[12,"base_class","","",2,null],[12,"sub_class","","",2,null],[12,"program_interface","","",2,null],[12,"revision_id","","",2,null],[12,"bus_id","","",2,null],[12,"dev_id","","",2,null],[12,"func_id","","",2,null],[3,"PcieDeviceKObject","","",null,null],[12,"device","","",3,null],[12,"irqs_avail_cnt","","",3,null],[12,"irqs_maskable","","",3,null],[3,"PcieUpstream","","",null,null],[12,"managed_bus_id","","",4,null],[12,"inner","","",4,null],[3,"PcieUpstreamInner","","",null,null],[12,"weak_super","","",5,null],[12,"downstream","","",5,null],[3,"PcieBarInfo","","",null,null],[12,"is_mmio","","",6,null],[12,"is_64bit","","",6,null],[12,"is_prefetchable","","",6,null],[12,"first_bar_reg","","",6,null],[12,"size","","",6,null],[12,"bus_addr","","",6,null],[3,"SharedLegacyIrqHandler","","",null,null],[12,"irq_id","","",7,null],[3,"PcieIrqHandle","","",null,null],[3,"PcieLegacyIrqState","","",null,null],[12,"pin","","",8,null],[12,"id","","",8,null],[12,"shared_handler","","",8,null],[12,"handlers","","",8,null],[12,"mode","","",8,null],[12,"msi","","",8,null],[12,"pcie","","",8,null],[3,"PcieIrqState","","",null,null],[12,"legacy","","",9,null],[12,"mode","","",9,null],[12,"handlers","","",9,null],[12,"registered_handler_count","","",9,null],[3,"PcieIrqHandlerState","","",null,null],[3,"PcieDevice","","",null,null],[12,"bus_id","","",10,null],[12,"dev_id","","",10,null],[12,"func_id","","",10,null],[12,"bar_count","","",10,null],[12,"vendor_id","","",10,null],[12,"device_id","","",10,null],[12,"class_id","","",10,null],[12,"subclass_id","","",10,null],[12,"prog_if","","",10,null],[12,"rev_id","","",10,null],[12,"inner","","",10,null],[3,"PcieDeviceInner","","",null,null],[12,"irq","","",11,null],[12,"bars","","",11,null],[12,"caps","","",11,null],[12,"plugged_in","","",11,null],[12,"upstream","","",11,null],[12,"weak_super","","",11,null],[12,"disabled","","",11,null],[3,"PciRoot","","",null,null],[12,"base_upstream","","",12,null],[3,"PciDeviceNode","","",null,null],[3,"PciBridge","","",null,null],[3,"PcieIrqModeCaps","","",null,null],[12,"max_irqs","","The maximum number of IRQ supported by the selected mode",13,null],[12,"per_vector_masking_supported","","For MSI or MSI-X, indicates whether or not…",13,null],[3,"PciInitArgsAddrWindows","","",null,null],[12,"base","","",14,null],[12,"size","","",14,null],[12,"bus_start","","",14,null],[12,"bus_end","","",14,null],[12,"cfg_space_type","","",14,null],[12,"has_ecam","","",14,null],[12,"padding1","","",14,null],[3,"PciInitArgsIrqs","","",null,null],[12,"global_irq","","",15,null],[12,"level_triggered","","",15,null],[12,"active_high","","",15,null],[12,"padding1","","",15,null],[3,"PciIrqSwizzleLut","","",null,null],[3,"PciInitArgsHeader","","",null,null],[12,"dev_pin_to_global_irq","","",16,null],[12,"num_irqs","","",16,null],[12,"irqs","","",16,null],[12,"addr_window_count","","",16,null],[3,"PciEcamRegion","","",null,null],[12,"phys_base","","",17,null],[12,"size","","",17,null],[12,"bus_start","","",17,null],[12,"bus_end","","",17,null],[3,"MappedEcamRegion","","",null,null],[12,"ecam","","",18,null],[12,"vaddr","","",18,null],[3,"PinnedMemoryToken","","Pinned Memory Token.",null,null],[3,"ResourceFlags","","",null,null],[3,"Resource","","Address space rights and accounting.",null,null],[3,"ResourceInfo","","",null,null],[4,"PcieDeviceType","","",null,null],[13,"Unknown","","",19,null],[13,"PcieEndpoint","","",19,null],[13,"LegacyPcieEndpoint","","",19,null],[13,"RcIntegratedEndpoint","","",19,null],[13,"RcEventCollector","","",19,null],[13,"RcRootPort","","",19,null],[13,"SwitchUpstreamPort","","",19,null],[13,"SwitchDownstreamPort","","",19,null],[13,"PcieToPciBridge","","",19,null],[13,"PciToPcieBridge","","",19,null],[4,"PcieIrqMode","","",null,null],[13,"Disabled","","",20,null],[13,"Legacy","","",20,null],[13,"Msi","","",20,null],[13,"MsiX","","",20,null],[13,"Count","","",20,null],[4,"PciNodeType","","",null,null],[13,"Root","","",21,null],[13,"Bridge","","",21,null],[13,"Device","","",21,null],[4,"PciAddrSpace","","",null,null],[13,"MMIO","","",22,null],[13,"PIO","","",22,null],[4,"ResourceKind","","ResourceKind definition from…",null,null],[13,"MMIO","","",23,null],[13,"IRQ","","",23,null],[13,"IOPORT","","",23,null],[13,"HYPERVISOR","","",23,null],[13,"ROOT","","",23,null],[13,"VMEX","","",23,null],[13,"SMC","","",23,null],[13,"COUNT","","",23,null],[5,"pci_bdf_raw_addr","","",null,[[]]],[5,"pio_config_read","","",null,[[],["zxresult",6]]],[5,"pio_config_read_addr","","",null,[[],["zxresult",6]]],[5,"pio_config_write","","",null,[[],["zxresult",6]]],[5,"pio_config_write_addr","","",null,[[],["zxresult",6]]],[5,"pci_configure_interrupt","","",null,[[["pciinitargsheader",3]],["zxresult",6]]],[11,"create","","Create a new bus transaction initiator.",24,[[["arc",3],["iommu",3]],["arc",3]]],[11,"get_info","","Get information of BTI.",24,[[],["btiinfo",3]]],[11,"pin","","Pin memory and grant access to it to the BTI.",24,[[["vmobject",3],["arc",3],["iommuperms",3],["arc",3]],[["zxresult",6],["arc",3]]]],[11,"release_quarantine","","Releases all quarantined PMTs.",24,[[]]],[11,"new_virtual","","Create a new virtual interrupt.",25,[[],["arc",3]]],[11,"new_physical","","Create a new physical interrupt.",25,[[["interruptoptions",3]],[["arc",3],["zxresult",6]]]],[11,"new_pci","","",25,[[["ipcinode",8],["arc",3]],[["arc",3],["zxresult",6]]]],[11,"bind","","Bind the interrupt object to a port.",25,[[["arc",3]],["zxresult",6]]],[11,"unbind","","Unbind the interrupt object from a port.",25,[[["arc",3]],["zxresult",6]]],[11,"trigger","","Triggers a virtual interrupt object.",25,[[],["zxresult",6]]],[11,"ack","","",25,[[],["zxresult",6]]],[11,"destroy","","",25,[[],["zxresult",6]]],[11,"wait","","",25,[[["arc",3]]]],[18,"VIRTUAL","","",26,null],[18,"UNMASK_PREWAIT","","",26,null],[18,"UNMASK_PREWAIT_UNLOCKED","","",26,null],[18,"MASK_POSTWAIT","","",26,null],[11,"empty","","Returns an empty set of flags",26,[[],["interruptflags",3]]],[11,"all","","Returns the set containing all flags.",26,[[],["interruptflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",26,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",26,[[],[["option",4],["interruptflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",26,[[],["interruptflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",26,[[],["interruptflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",26,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",26,[[["interruptflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",26,[[["interruptflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",26,[[["interruptflags",3]]]],[11,"remove","","Removes the specified flags in-place.",26,[[["interruptflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",26,[[["interruptflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",26,[[["interruptflags",3]]]],[18,"REMAP_IRQ","","",27,null],[18,"MODE_DEFAULT","","",27,null],[18,"MODE_EDGE_LOW","","",27,null],[18,"MODE_EDGE_HIGH","","",27,null],[18,"MODE_LEVEL_LOW","","",27,null],[18,"MODE_LEVEL_HIGH","","",27,null],[18,"MODE_EDGE_BOTH","","",27,null],[18,"VIRTUAL","","",27,null],[11,"empty","","Returns an empty set of flags",27,[[],["interruptoptions",3]]],[11,"all","","Returns the set containing all flags.",27,[[],["interruptoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",27,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",27,[[],[["option",4],["interruptoptions",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",27,[[],["interruptoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",27,[[],["interruptoptions",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",27,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",27,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",27,[[["interruptoptions",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",27,[[["interruptoptions",3]]]],[11,"insert","","Inserts the specified flags in-place.",27,[[["interruptoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",27,[[["interruptoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",27,[[["interruptoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",27,[[["interruptoptions",3]]]],[11,"to_mode","","",27,[[]]],[11,"create","","Create a new `IOMMU`.",28,[[],["arc",3]]],[11,"is_valid_bus_txn_id","","",28,[[]]],[11,"minimum_contiguity","","",28,[[]]],[11,"aspace_size","","",28,[[]]],[11,"map","","",28,[[["vmobject",3],["iommuperms",3],["arc",3]],["zxresult",6]]],[11,"map_contiguous","","",28,[[["vmobject",3],["iommuperms",3],["arc",3]],["zxresult",6]]],[18,"PERM_READ","","",29,null],[18,"PERM_WRITE","","",29,null],[18,"PERM_EXECUTE","","",29,null],[11,"empty","","Returns an empty set of flags",29,[[],["iommuperms",3]]],[11,"all","","Returns the set containing all flags.",29,[[],["iommuperms",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",29,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",29,[[],[["option",4],["iommuperms",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",29,[[],["iommuperms",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",29,[[],["iommuperms",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",29,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",29,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",29,[[["iommuperms",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",29,[[["iommuperms",3]]]],[11,"insert","","Inserts the specified flags in-place.",29,[[["iommuperms",3]]]],[11,"remove","","Removes the specified flags in-place.",29,[[["iommuperms",3]]]],[11,"toggle","","Toggles the specified flags in-place.",29,[[["iommuperms",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",29,[[["iommuperms",3]]]],[11,"add_bus_region","","",30,[[["pciaddrspace",4]],["zxresult",6]]],[11,"sub_bus_region","","",30,[[["pciaddrspace",4]],["zxresult",6]]],[11,"set_address_translation_provider","","",30,[[["arc",3],["pcieaddressprovider",8]],["zxresult",6]]],[11,"add_root","","",30,[[["pciirqswizzlelut",3]],["zxresult",6]]],[11,"start_bus_driver","","",30,[[],["zxresult",6]]],[11,"get_nth_device","","",30,[[],["zxresult",6]]],[11,"add_bus_region_inner","","",30,[[["pciaddrspace",4]],["zxresult",6]]],[11,"sub_bus_region_inner","","",30,[[["pciaddrspace",4]],["zxresult",6]]],[11,"set_address_translation_provider_inner","","",30,[[["arc",3],["pcieaddressprovider",8]],["zxresult",6]]],[11,"add_root_inner","","",30,[[["arc",3],["pciroot",3]],["zxresult",6]]],[11,"start_bus_driver_inner","","",30,[[],["zxresult",6]]],[11,"get_config","","",30,[[],["option",4]]],[11,"link_device_to_upstream","","",30,[[["ipcinode",8],["weak",3],["arc",3]]]],[11,"find_legacy_irq_handler","","",30,[[],[["arc",3],["zxresult",6]]]],[11,"get_nth_device_inner","","",30,[[],[["arc",3],["option",4]]]],[11,"add_ecam","","",31,[[["pciecamregion",3]],["zxresult",6]]],[11,"new","","",3,[[["ipcinode",8],["arc",3]],["pciedevicekobject",3]]],[11,"get_bar","","",3,[[],[["pciebarinfo",3],["zxresult",6]]]],[11,"map_interrupt","","",3,[[],[["arc",3],["zxresult",6]]]],[11,"create","","",4,[[],["arc",3]]],[11,"scan_downstream","","",4,[[["pciebusdriver",3]]]],[11,"allocate_downstream_bars","","",4,[[]]],[11,"get_downstream","","",4,[[],[["arc",3],["option",4]]]],[11,"set_downstream","","",4,[[["option",4],["arc",3]]]],[11,"set_super","","",4,[[["ipcinode",8],["weak",3]]]],[11,"create","","",7,[[],[["arc",3],["option",4]]]],[11,"handle","","",7,[[]]],[11,"add_device","","",7,[[["arc",3],["pciedevice",3]]]],[11,"remove_device","","",7,[[["arc",3],["pciedevice",3]]]],[11,"set_masked","","",32,[[]]],[11,"get_masked","","",32,[[]]],[11,"set_handler","","",32,[[["box",3],["option",4]]]],[11,"has_handler","","",32,[[]]],[11,"enable","","",32,[[]]],[11,"arc_self","","",11,[[],[["arc",3],["option",4]]]],[11,"msi","","",11,[[],["option",4]]],[11,"pcie","","",11,[[],["option",4]]],[11,"create","","",10,[[["ipcinode",8],["weak",3],["pciebusdriver",3]],[["option",4],["arc",3]]]],[11,"allocate_bars","","",10,[[],["zxresult",6]]],[11,"upstream","","",10,[[],[["ipcinode",8],["weak",3]]]],[11,"dev_id","","",10,[[]]],[11,"func_id","","",10,[[]]],[11,"set_upstream","","",10,[[["ipcinode",8],["weak",3]]]],[11,"set_super","","",10,[[["ipcinode",8],["weak",3]]]],[11,"config","","",10,[[],[["option",4],["arc",3]]]],[11,"enable_mmio","","",10,[[],["zxresult",6]]],[11,"enable_pio","","",10,[[],["zxresult",6]]],[11,"enable_master","","",10,[[],["zxresult",6]]],[11,"enable_irq","","",10,[[]]],[11,"register_irq_handle","","",10,[[["fn",8],["box",3]]]],[11,"unregister_irq_handle","","",10,[[]]],[11,"get_bar","","",10,[[],[["option",4],["pciebarinfo",3]]]],[11,"get_irq_mode_capabilities","","",10,[[],[["zxresult",6],["pcieirqmodecaps",3]]]],[11,"set_irq_mode","","",10,[[],["zxresult",6]]],[11,"config_read","","",10,[[],["zxresult",6]]],[11,"config_write","","",10,[[],["zxresult",6]]],[11,"new","","",12,[[["pciirqswizzlelut",3],["pciebusdriver",3]],["arc",3]]],[11,"swizzle","","",12,[[],["zxresult",6]]],[11,"managed_bus_id","","",12,[[]]],[11,"new","","",33,[[["ipcinode",8],["weak",3],["pciebusdriver",3]],[["option",4],["arc",3]]]],[11,"new","","",34,[[["ipcinode",8],["weak",3],["pciebusdriver",3]],[["option",4],["arc",3]]]],[11,"encode_addrs","","",35,[[],[["zxresult",6],["vec",3]]]],[11,"unpin","","Unpin pages and revoke device access to them.",35,[[]]],[18,"EXCLUSIVE","","",36,null],[11,"empty","","Returns an empty set of flags",36,[[],["resourceflags",3]]],[11,"all","","Returns the set containing all flags.",36,[[],["resourceflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",36,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",36,[[],[["option",4],["resourceflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",36,[[],["resourceflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",36,[[],["resourceflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",36,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",36,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",36,[[["resourceflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",36,[[["resourceflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",36,[[["resourceflags",3]]]],[11,"remove","","Removes the specified flags in-place.",36,[[["resourceflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",36,[[["resourceflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",36,[[["resourceflags",3]]]],[11,"create","","Create a new `Resource`.",37,[[["resourceflags",3],["resourcekind",4]],["arc",3]]],[11,"validate","","",37,[[["resourcekind",4]],["zxresult",6]]],[11,"validate_ranged_resource","","",37,[[["resourcekind",4]],["zxresult",6]]],[11,"check_exclusive","","",37,[[["resourceflags",3]],["zxresult",6]]],[11,"get_info","","",37,[[],["resourceinfo",3]]],[17,"PCI_MAX_DEVICES_PER_BUS","","",null,null],[17,"PCI_MAX_FUNCTIONS_PER_DEVICE","","",null,null],[17,"PCI_MAX_LEGACY_IRQ_PINS","","",null,null],[17,"PCI_MAX_FUNCTIONS_PER_BUS","","",null,null],[17,"PCI_MAX_IRQS","","",null,null],[17,"PCI_INIT_ARG_MAX_ECAM_WINDOWS","","",null,null],[17,"PCI_INIT_ARG_MAX_SIZE","","",null,null],[17,"PCI_NO_IRQ_MAPPING","","",null,null],[17,"PCIE_PIO_ADDR_SPACE_MASK","","",null,null],[17,"PCIE_MAX_BUSSES","","",null,null],[17,"PCIE_ECAM_BYTES_PER_BUS","","",null,null],[17,"PCIE_INVALID_VENDOR_ID","","",null,null],[17,"PCI_CFG_SPACE_TYPE_PIO","","",null,null],[17,"PCI_CFG_SPACE_TYPE_MMIO","","",null,null],[17,"PCIE_IRQRET_MASK","","",null,null],[17,"PCIE_MAX_MSI_IRQS","","",null,null],[8,"PCIeAddressProvider","","",null,null],[10,"create_config","","",38,[[],[["pciconfig",3],["arc",3]]]],[10,"translate","","Accepts a PCI BDF triple and returns ZX_OK if it is able…",38,[[],["zxresult",6]]],[8,"IPciNode","","",null,null],[10,"node_type","","",39,[[],["pcinodetype",4]]],[10,"device","","",39,[[],[["arc",3],["option",4]]]],[10,"as_upstream","","",39,[[],[["arc",3],["option",4]]]],[10,"to_root","","",39,[[],[["option",4],["pciroot",3]]]],[10,"to_device","","",39,[[],[["pcidevicenode",3],["option",4]]]],[10,"to_bridge","","",39,[[],[["option",4],["pcibridge",3]]]],[11,"allocate_bars","","",39,[[],["zxresult",6]]],[11,"disable","","",39,[[]]],[11,"pf_mmio_regions","","",39,[[],[["mutex",3],["arc",3]]]],[11,"mmio_lo_regions","","",39,[[],[["mutex",3],["arc",3]]]],[11,"mmio_hi_regions","","",39,[[],[["mutex",3],["arc",3]]]],[11,"pio_regions","","",39,[[],[["mutex",3],["arc",3]]]],[11,"enable_bus_master","","",39,[[],["zxresult",6]]],[11,"enable_irq","","",39,[[]]],[11,"disable_irq","","",39,[[]]],[11,"register_irq_handle","","",39,[[["fn",8],["box",3]]]],[11,"unregister_irq_handle","","",39,[[]]],[0,"ipc","zircon_object","Objects for IPC.",null,null],[3,"Channel","zircon_object::ipc","Bidirectional interprocess communication",null,null],[3,"MessagePacket","","",null,null],[12,"data","","",40,null],[12,"handles","","",40,null],[3,"Fifo","","First-In First-Out inter-process queue.",null,null],[3,"Socket","","Bidirectional streaming IPC transport.",null,null],[3,"SocketFlags","","Signals that waitable kernel objects expose to applications.",null,null],[3,"SocketInfo","","",null,null],[11,"create","","Create a channel and return a pair of its endpoints",41,[[]]],[11,"check_and_read","","Read a packet from the channel if check is ok, otherwise…",41,[[],[["zxresult",6],["messagepacket",3]]]],[11,"read","","Read a packet from the channel",41,[[],[["zxresult",6],["messagepacket",3]]]],[11,"write","","Write a packet to the channel",41,[[["messagepacket",3]],["zxresult",6]]],[11,"call","","Send a message to a channel and await a reply.",41,[[["messagepacket",3],["arc",3]]]],[11,"create","","Create a FIFO.",42,[[]]],[11,"write","","Write data to the FIFO.",42,[[],["zxresult",6]]],[11,"read","","Read data from the FIFO.",42,[[],["zxresult",6]]],[18,"SHUTDOWN_WRITE","","",43,null],[18,"SHUTDOWN_READ","","",43,null],[18,"SHUTDOWN_MASK","","",43,null],[18,"DATAGRAM","","",43,null],[18,"HAS_CONTROL","","",43,null],[18,"HAS_ACCEPT","","",43,null],[18,"CREATE_MASK","","",43,null],[18,"SOCKET_CONTROL","","",43,null],[18,"SOCKET_PEEK","","",43,null],[11,"empty","","Returns an empty set of flags",43,[[],["socketflags",3]]],[11,"all","","Returns the set containing all flags.",43,[[],["socketflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",43,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",43,[[],[["socketflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",43,[[],["socketflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",43,[[],["socketflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",43,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",43,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",43,[[["socketflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",43,[[["socketflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",43,[[["socketflags",3]]]],[11,"remove","","Removes the specified flags in-place.",43,[[["socketflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",43,[[["socketflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",43,[[["socketflags",3]]]],[11,"create","","Create a socket.",44,[[],["zxresult",6]]],[11,"write","","Write data to the socket.",44,[[["socketflags",3]],["zxresult",6]]],[11,"read","","Read data from the socket.",44,[[["socketflags",3]],["zxresult",6]]],[11,"get_info","","Get information of the socket.",44,[[],["socketinfo",3]]],[11,"shutdown","","Prevent reading or writing.",44,[[],["zxresult",6]]],[11,"set_read_threshold","","",44,[[],["zxresult",6]]],[11,"set_write_threshold","","",44,[[],["zxresult",6]]],[11,"get_rx_tx_threshold","","",44,[[]]],[0,"object","zircon_object","Kernel object basis.",null,null],[3,"Handle","zircon_object::object","A Handle is how a specific process refers to a specific…",null,null],[12,"object","","",45,null],[12,"rights","","",45,null],[3,"HandleBasicInfo","","",null,null],[3,"HandleInfo","","",null,null],[12,"handle","","",46,null],[3,"Rights","","Rights are associated with handles and convey privileges…",null,null],[3,"Signal","","Signals that waitable kernel objects expose to applications.",null,null],[3,"KObjectBase","","The base struct of a kernel object.",null,null],[12,"id","","",47,null],[3,"DummyObject","","Empty kernel object. Just for test.",null,null],[5,"obj_type","","",null,[[["arc",3]]]],[5,"wait_signal_many","","Asynchronous wait signal for multiple objects.",null,[[]]],[11,"new","","",45,[[["arc",3],["kernelobject",8],["rights",3]]]],[11,"get_info","","",45,[[],["handlebasicinfo",3]]],[11,"get_handle_info","","",45,[[],["handleinfo",3]]],[18,"DUPLICATE","","Allows handle duplication via `zx_handle_duplicate()`.",48,null],[18,"TRANSFER","","Allows handle transfer via `zx_channel_write()`.",48,null],[18,"READ","","Allows reading of data from containers (channels, sockets,…",48,null],[18,"WRITE","","Allows writing of data to containers (channels, sockets,…",48,null],[18,"EXECUTE","","Allows mapping as executable if `Rights::MAP` is also…",48,null],[18,"MAP","","Allows mapping of a VM object into an address space.",48,null],[18,"GET_PROPERTY","","Allows property inspection via `zx_object_get_property()`.",48,null],[18,"SET_PROPERTY","","Allows property modification via `zx_object_set_property()`.",48,null],[18,"ENUMERATE","","Allows enumerating child objects via…",48,null],[18,"DESTROY","","Allows termination of task objects via `zx_task_kill()`.",48,null],[18,"SET_POLICY","","Allows policy modification via `zx_job_set_policy()`.",48,null],[18,"GET_POLICY","","Allows policy inspection via `zx_job_get_policy()`.",48,null],[18,"SIGNAL","","Allows use of `zx_object_signal()`.",48,null],[18,"SIGNAL_PEER","","Allows use of `zx_object_signal_peer()`.",48,null],[18,"WAIT","","Allows use of `zx_object_wait_one()`,…",48,null],[18,"INSPECT","","Allows inspection via `zx_object_get_info()`.",48,null],[18,"MANAGE_JOB","","Allows creation of processes, subjobs, etc.",48,null],[18,"MANAGE_PROCESS","","Allows creation of threads, etc.",48,null],[18,"MANAGE_THREAD","","Allows suspending/resuming threads, etc.",48,null],[18,"APPLY_PROFILE","","",48,null],[18,"SAME_RIGHTS","","",48,null],[18,"BASIC","","",48,null],[18,"IO","","",48,null],[18,"PROPERTY","","",48,null],[18,"POLICY","","",48,null],[18,"DEFAULT_CHANNEL","","",48,null],[18,"DEFAULT_PROCESS","","",48,null],[18,"DEFAULT_THREAD","","",48,null],[18,"DEFAULT_VMO","","",48,null],[18,"DEFAULT_VMAR","","",48,null],[18,"DEFAULT_JOB","","",48,null],[18,"DEFAULT_RESOURCE","","",48,null],[18,"DEFAULT_DEBUGLOG","","",48,null],[18,"DEFAULT_SUSPEND_TOKEN","","",48,null],[18,"DEFAULT_PORT","","",48,null],[18,"DEFAULT_TIMER","","",48,null],[18,"DEFAULT_EVENT","","",48,null],[18,"DEFAULT_EVENTPAIR","","",48,null],[18,"DEFAULT_FIFO","","",48,null],[18,"DEFAULT_SOCKET","","",48,null],[18,"DEFAULT_BTI","","",48,null],[18,"DEFAULT_INTERRUPT","","",48,null],[18,"DEFAULT_DEVICE","","",48,null],[18,"DEFAULT_PCI_INTERRUPT","","",48,null],[11,"empty","","Returns an empty set of flags",48,[[],["rights",3]]],[11,"all","","Returns the set containing all flags.",48,[[],["rights",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",48,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",48,[[],[["option",4],["rights",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",48,[[],["rights",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",48,[[],["rights",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",48,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",48,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",48,[[["rights",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",48,[[["rights",3]]]],[11,"insert","","Inserts the specified flags in-place.",48,[[["rights",3]]]],[11,"remove","","Removes the specified flags in-place.",48,[[["rights",3]]]],[11,"toggle","","Toggles the specified flags in-place.",48,[[["rights",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",48,[[["rights",3]]]],[18,"READABLE","","",49,null],[18,"WRITABLE","","",49,null],[18,"PEER_CLOSED","","",49,null],[18,"SIGNALED","","",49,null],[18,"HANDLE_CLOSED","","",49,null],[18,"KERNEL_ALL","","",49,null],[18,"USER_ALL","","",49,null],[18,"CLOCK_STARTED","","",49,null],[18,"SOCKET_PEER_WRITE_DISABLED","","",49,null],[18,"SOCKET_WRITE_DISABLED","","",49,null],[18,"SOCKET_CONTROL_READABLE","","",49,null],[18,"SOCKET_CONTROL_WRITABLE","","",49,null],[18,"SCOEKT_ACCEPT","","",49,null],[18,"SOCKET_SHARE","","",49,null],[18,"SOCKET_READ_THRESHOLD","","",49,null],[18,"SOCKET_WRITE_THRESHOLD","","",49,null],[18,"TASK_TERMINATED","","",49,null],[18,"JOB_TERMINATED","","",49,null],[18,"JOB_NO_JOBS","","",49,null],[18,"JOB_NO_PROCESSES","","",49,null],[18,"PROCESS_TERMINATED","","",49,null],[18,"THREAD_TERMINATED","","",49,null],[18,"THREAD_RUNNING","","",49,null],[18,"THREAD_SUSPENDED","","",49,null],[18,"VMO_ZERO_CHILDREN","","",49,null],[18,"INTERRUPT_SIGNAL","","",49,null],[18,"SIGCHLD","","",49,null],[18,"USER_SIGNAL_0","","",49,null],[18,"USER_SIGNAL_1","","",49,null],[18,"USER_SIGNAL_2","","",49,null],[18,"USER_SIGNAL_3","","",49,null],[18,"USER_SIGNAL_4","","",49,null],[18,"USER_SIGNAL_5","","",49,null],[18,"USER_SIGNAL_6","","",49,null],[18,"USER_SIGNAL_7","","",49,null],[11,"empty","","Returns an empty set of flags",49,[[],["signal",3]]],[11,"all","","Returns the set containing all flags.",49,[[],["signal",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",49,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",49,[[],[["signal",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",49,[[],["signal",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",49,[[],["signal",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",49,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",49,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",49,[[["signal",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",49,[[["signal",3]]]],[11,"insert","","Inserts the specified flags in-place.",49,[[["signal",3]]]],[11,"remove","","Removes the specified flags in-place.",49,[[["signal",3]]]],[11,"toggle","","Toggles the specified flags in-place.",49,[[["signal",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",49,[[["signal",3]]]],[11,"verify_user_signal","","",49,[[["signal",3]],[["signal",3],["zxresult",6]]]],[6,"HandleValue","","The value refers to a Handle in user space.",null,null],[6,"KoID","","The type of kernel object ID.",null,null],[6,"SignalHandler","","The type of kernel object signal handler.",null,null],[17,"INVALID_HANDLE","","Invalid handle value.",null,null],[8,"KernelObject","","Common interface of a kernel object.",null,null],[10,"id","","",50,[[],["koid",6]]],[10,"type_name","","",50,[[]]],[10,"name","","",50,[[],["string",3]]],[10,"set_name","","",50,[[]]],[10,"signal","","",50,[[],["signal",3]]],[10,"signal_set","","",50,[[["signal",3]]]],[10,"signal_change","","",50,[[["signal",3]]]],[10,"add_signal_callback","","",50,[[["signalhandler",6]]]],[11,"get_child","","",50,[[["koid",6]],[["zxresult",6],["arc",3]]]],[11,"peer","","",50,[[],[["zxresult",6],["arc",3]]]],[11,"related_koid","","",50,[[],["koid",6]]],[11,"allowed_signals","","",50,[[],["signal",3]]],[11,"is","","Returns true if the trait object wraps an object of type…",50,[[]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the…",50,[[["box",3]],[["result",4],["box",3],["box",3]]]],[11,"downcast_rc","","Returns an `Rc`-ed object from an `Rc`-ed trait object if…",50,[[["rc",3]],[["rc",3],["rc",3],["result",4]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object…",50,[[],["option",4]]],[11,"downcast_mut","","Returns a mutable reference to the object within the trait…",50,[[],["option",4]]],[11,"downcast_arc","","Returns an `Arc`-ed object from an `Arc`-ed trait object…",50,[[["arc",3]],[["arc",3],["arc",3],["result",4]]]],[11,"new","","Create a new kernel object base.",47,[[]]],[11,"with_signal","","Create a kernel object base with initial `signal`.",47,[[["signal",3]]]],[11,"with_name","","Create a kernel object base with `name`.",47,[[]]],[11,"with","","Create a kernel object base with both signal and name",47,[[["signal",3]]]],[11,"name","","Get object's name.",47,[[],["string",3]]],[11,"set_name","","Set object's name.",47,[[]]],[11,"signal","","Get the signal status.",47,[[],["signal",3]]],[11,"signal_change","","Change signal status: first `clear` then `set` indicated…",47,[[["signal",3]]]],[11,"signal_set","","Assert `signal`.",47,[[["signal",3]]]],[11,"signal_clear","","Deassert `signal`.",47,[[["signal",3]]]],[11,"add_signal_callback","","Add `callback` for signal status changes.",47,[[["signalhandler",6]]]],[11,"wait_signal","","Asynchronous wait for one of `signal`.",50,[[["signal",3],["arc",3]]]],[11,"send_signal_to_port_async","","Once one of the `signal` asserted, push a packet with…",50,[[["arc",3],["signal",3],["arc",3]]]],[11,"new","","",51,[[],["arc",3]]],[0,"signal","zircon_object","Objects for signaling and waiting.",null,null],[3,"Event","zircon_object::signal","Signalable event for concurrent programming",null,null],[3,"EventPair","","Mutually signalable pair of events for concurrent…",null,null],[3,"Futex","","A primitive for creating userspace synchronization tools.",null,null],[3,"PortPacket","","A packet sent through a port.",null,null],[3,"PacketSignal","","",null,null],[12,"trigger","","",52,null],[12,"observed","","",52,null],[12,"count","","",52,null],[12,"timestamp","","",52,null],[3,"PacketException","","",null,null],[12,"pid","","",53,null],[12,"tid","","",53,null],[12,"num","","",53,null],[3,"PacketInterrupt","","",null,null],[12,"timestamp","","",54,null],[12,"reserved0","","",54,null],[12,"reserved1","","",54,null],[12,"reserved2","","",54,null],[3,"PortPacketRepr","","A high-level representation of a packet sent through a port.",null,null],[12,"key","","",55,null],[12,"status","","",55,null],[12,"data","","",55,null],[3,"Port","","Signaling and mailbox primitive",null,null],[3,"PortOptions","","",null,null],[3,"Timer","","An object that may be signaled at some point in the future",null,null],[4,"PacketType","","",null,null],[13,"User","","",56,null],[13,"SignalOne","","",56,null],[13,"SignalRep","","",56,null],[13,"GuestBell","","",56,null],[13,"GuestMem","","",56,null],[13,"GuestIo","","",56,null],[13,"GuestVcpu","","",56,null],[13,"Interrupt","","",56,null],[13,"Exception","","",56,null],[13,"PageRequest","","",56,null],[4,"PayloadRepr","","A high-level representation of a packet payload.",null,null],[13,"Signal","","",57,null],[13,"Exception","","",57,null],[13,"Interrupt","","",57,null],[13,"User","","",57,null],[4,"Slack","","",null,null],[13,"Center","","",58,null],[13,"Early","","",58,null],[13,"Late","","",58,null],[11,"new","","",59,[[],["arc",3]]],[11,"create","","Create a pair of event.",60,[[]]],[11,"peer","","Get the peer event.",60,[[],[["arc",3],["zxresult",6]]]],[11,"new","","Create a new Futex.",61,[[["atomici32",3]],["arc",3]]],[11,"wait","","Wait on a futex.",61,[[["arc",3]]]],[11,"wake","","Wake some number of threads waiting on a futex.",61,[[]]],[11,"owner","","Get the owner of the futex.",61,[[],[["option",4],["arc",3]]]],[11,"wait_with_owner","","Wait on a futex.",61,[[["arc",3],["arc",3],["option",4]]]],[11,"wake_single_owner","","Wake exactly one thread from the futex wait queue.",61,[[]]],[11,"requeue","","Requeuing is a generalization of waking.",61,[[["arc",3],["option",4],["arc",3]],["zxresult",6]]],[11,"new","","Create a new `Port`.",62,[[],["arc",3]]],[11,"push","","Push a `packet` into the port.",62,[[]]],[11,"wait","","Asynchronous wait until at least one packet is available,…",62,[[["arc",3]]]],[11,"can_bind_to_interrupt","","",62,[[]]],[18,"BIND_TO_INTERUPT","","",63,null],[11,"empty","","Returns an empty set of flags",63,[[],["portoptions",3]]],[11,"all","","Returns the set containing all flags.",63,[[],["portoptions",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",63,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",63,[[],[["option",4],["portoptions",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",63,[[],["portoptions",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",63,[[],["portoptions",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",63,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",63,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",63,[[["portoptions",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",63,[[["portoptions",3]]]],[11,"insert","","Inserts the specified flags in-place.",63,[[["portoptions",3]]]],[11,"remove","","Removes the specified flags in-place.",63,[[["portoptions",3]]]],[11,"toggle","","Toggles the specified flags in-place.",63,[[["portoptions",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",63,[[["portoptions",3]]]],[11,"new","","Create a new `Timer`.",64,[[],["arc",3]]],[11,"with_slack","","Create a new `Timer` with slack.",64,[[["slack",4]],["arc",3]]],[11,"one_shot","","Create a one-shot timer.",64,[[["duration",3]],["arc",3]]],[11,"set","","Starts a one-shot timer that will fire when `deadline`…",64,[[["duration",3],["arc",3]]]],[11,"cancel","","Cancel the pending timer started by `set`.",64,[[]]],[0,"task","zircon_object","Objects for Task Management.",null,null],[3,"Job","zircon_object::task","Control a group of processes",null,null],[3,"JobInfo","","",null,null],[3,"JobPolicy","","",null,null],[3,"BasicPolicy","","",null,null],[12,"condition","","",65,null],[12,"action","","",65,null],[3,"TimerSlackPolicy","","",null,null],[3,"TimerSlack","","",null,null],[3,"Process","","Process abstraction",null,null],[3,"ProcessInfo","","",null,null],[12,"return_code","","",66,null],[12,"started","","",66,null],[12,"has_exited","","",66,null],[12,"debugger_attached","","",66,null],[12,"padding1","","",66,null],[3,"SuspendToken","","",null,null],[3,"Thread","","Runnable / computation entity",null,null],[3,"ThreadInfo","","",null,null],[4,"SetPolicyOptions","","",null,null],[13,"Absolute","","Policy is applied for all conditions in policy or the call…",67,null],[13,"Relative","","Policy is applied for the conditions not specifically…",67,null],[4,"PolicyCondition","","",null,null],[13,"BadHandle","","A process under this job is attempting to issue a syscall…",68,null],[13,"WrongObject","","A process under this job is attempting to issue a syscall…",68,null],[13,"VmarWx","","A process under this job is attempting to map an address…",68,null],[13,"NewAny","","A special condition that stands for all of the above…",68,null],[13,"NewVMO","","A process under this job is attempting to create a new vm…",68,null],[13,"NewChannel","","A process under this job is attempting to create a new…",68,null],[13,"NewEvent","","A process under this job is attempting to create a new…",68,null],[13,"NewEventPair","","A process under this job is attempting to create a new…",68,null],[13,"NewPort","","A process under this job is attempting to create a new port.",68,null],[13,"NewSocket","","A process under this job is attempting to create a new…",68,null],[13,"NewFIFO","","A process under this job is attempting to create a new fifo.",68,null],[13,"NewTimer","","A process under this job is attempting to create a new…",68,null],[13,"NewProcess","","A process under this job is attempting to create a new…",68,null],[13,"NewProfile","","A process under this job is attempting to create a new…",68,null],[13,"AmbientMarkVMOExec","","A process under this job is attempting to use…",68,null],[4,"PolicyAction","","",null,null],[13,"Allow","","Allow condition.",69,null],[13,"Deny","","Prevent condition.",69,null],[13,"AllowException","","Generate an exception via the debug port. An exception…",69,null],[13,"DenyException","","Just like `AllowException`, but after resuming condition…",69,null],[13,"Kill","","Terminate the process.",69,null],[4,"TimerSlackDefaultMode","","",null,null],[13,"Center","","",70,null],[13,"Early","","",70,null],[13,"Late","","",70,null],[4,"Status","","",null,null],[13,"Init","","",71,null],[13,"Running","","",71,null],[13,"Exited","","",71,null],[4,"ThreadStateKind","","",null,null],[13,"General","","",72,null],[13,"FloatPoint","","",72,null],[13,"Vector","","",72,null],[13,"Debug","","",72,null],[13,"SingleStep","","",72,null],[13,"FS","","",72,null],[13,"GS","","",72,null],[4,"ThreadState","","The thread state.",null,null],[13,"New","","The thread has been created but it has not started running…",73,null],[13,"Running","","The thread is running user code normally.",73,null],[13,"Suspended","","Stopped due to `zx_task_suspend()`.",73,null],[13,"Blocked","","In a syscall or handling an exception.",73,null],[13,"Dying","","The thread is in the process of being terminated, but it…",73,null],[13,"Dead","","The thread has stopped running.",73,null],[13,"BlockedException","","The thread is stopped in an exception.",73,null],[13,"BlockedSleeping","","The thread is stopped in `zx_nanosleep()`.",73,null],[13,"BlockedFutex","","The thread is stopped in `zx_futex_wait()`.",73,null],[13,"BlockedPort","","The thread is stopped in `zx_port_wait()`.",73,null],[13,"BlockedChannel","","The thread is stopped in `zx_channel_call()`.",73,null],[13,"BlockedWaitOne","","The thread is stopped in `zx_object_wait_one()`.",73,null],[13,"BlockedWaitMany","","The thread is stopped in `zx_object_wait_many()`.",73,null],[13,"BlockedInterrupt","","The thread is stopped in `zx_interrupt_wait()`.",73,null],[13,"BlockedPager","","",73,null],[5,"check_timer_policy","","",null,[[["timerslackpolicy",3]],["zxresult",6]]],[11,"root","","Create the root job.",74,[[],["arc",3]]],[11,"create_child","","Create a new child job object.",74,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"policy","","Get the policy of the job.",74,[[],["jobpolicy",3]]],[11,"set_policy_basic","","Sets one or more security and/or resource policies to an…",74,[[["setpolicyoptions",4]],["zxresult",6]]],[11,"set_policy_timer_slack","","",74,[[["timerslackpolicy",3]],["zxresult",6]]],[11,"set_critical","","Set a process as critical to the job.",74,[[["arc",3]],["zxresult",6]]],[11,"get_info","","",74,[[],["jobinfo",3]]],[11,"check_root_job","","",74,[[],["zxresult",6]]],[11,"get_exceptionate","","",74,[[],[["arc",3],["exceptionate",3]]]],[11,"process_ids","","Get KoIDs of Processes.",74,[[],[["koid",6],["vec",3]]]],[11,"children_ids","","Get KoIDs of children Jobs.",74,[[],[["koid",6],["vec",3]]]],[11,"get_action","","Get the action of a policy `condition`.",75,[[["policycondition",4]],[["option",4],["policyaction",4]]]],[11,"apply","","Apply a basic policy.",75,[[["basicpolicy",3]]]],[11,"merge","","Merge the policy with `parent`'s.",75,[[]]],[11,"generate_new","","",76,[[["timerslackpolicy",3]],["timerslack",3]]],[11,"create","","Create a new process in the `job`.",77,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"create_with_ext","","Create a new process with extension info.",77,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"start","","Start the first `thread` in the process.",77,[[["option",4],["arc",3],["handle",3]],["zxresult",6]]],[11,"exit","","Exit current process with `retcode`.",77,[[]]],[11,"check_policy","","Check whether `condition` is allowed in the parent job's…",77,[[["policycondition",4]],["zxresult",6]]],[11,"status","","Get process status.",77,[[],["status",4]]],[11,"ext","","Get the extension.",77,[[],["box",3]]],[11,"vmar","","Get the `VmAddressRegion` of the process.",77,[[],[["vmaddressregion",3],["arc",3]]]],[11,"job","","Get the job of the process.",77,[[],[["arc",3],["job",3]]]],[11,"add_handle","","Add a handle to the process",77,[[["handle",3]],["handlevalue",6]]],[11,"add_handles","","Add all handles to the process",77,[[["vec",3],["handle",3]],[["vec",3],["handlevalue",6]]]],[11,"remove_handle","","Remove a handle from the process",77,[[["handlevalue",6]],[["handle",3],["zxresult",6]]]],[11,"remove_handles","","Remove all handles from the process.",77,[[],[["zxresult",6],["vec",3]]]],[11,"remove_object","","",77,[[["handlevalue",6]],[["arc",3],["zxresult",6]]]],[11,"get_futex","","Get a futex from the process",77,[[["atomici32",3]],[["arc",3],["futex",3]]]],[11,"dup_handle_operating_rights","","Duplicate a handle with new `rights`, return the new…",77,[[["handlevalue",6]],[["zxresult",6],["handlevalue",6]]]],[11,"get_object_with_rights","","Get the kernel object corresponding to this…",77,[[["rights",3],["handlevalue",6]],[["arc",3],["zxresult",6]]]],[11,"get_object_and_rights","","",77,[[["handlevalue",6]],["zxresult",6]]],[11,"get_dyn_object_with_rights","","",77,[[["rights",3],["handlevalue",6]],[["zxresult",6],["arc",3]]]],[11,"get_dyn_object_and_rights","","",77,[[["handlevalue",6]],["zxresult",6]]],[11,"get_object","","Get the kernel object corresponding to this `handle_value`",77,[[["handlevalue",6]],[["arc",3],["zxresult",6]]]],[11,"get_handle_info","","",77,[[["handlevalue",6]],[["zxresult",6],["handlebasicinfo",3]]]],[11,"get_info","","",77,[[],["processinfo",3]]],[11,"set_debug_addr","","",77,[[]]],[11,"get_debug_addr","","",77,[[]]],[11,"set_dyn_break_on_load","","",77,[[]]],[11,"get_dyn_break_on_load","","",77,[[]]],[11,"get_cancel_token","","",77,[[["handlevalue",6]],[["receiver",3],["zxresult",6]]]],[11,"get_exceptionate","","",77,[[],[["arc",3],["exceptionate",3]]]],[11,"thread_ids","","Get KoIDs of Threads.",77,[[],[["koid",6],["vec",3]]]],[11,"create","","",78,[[["arc",3]],["arc",3]]],[11,"create","","Create a new thread.",79,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"create_with_ext","","Create a new thread with extension info.",79,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"proc","","Get the process.",79,[[],["arc",3]]],[11,"ext","","Get the extension.",79,[[],["box",3]]],[11,"start","","Start execution on the thread.",79,[[["arc",3]],["zxresult",6]]],[11,"start_with_regs","","Start execution with given registers.",79,[[["generalregs",3],["arc",3]],["zxresult",6]]],[11,"exit","","Terminate the current running thread. TODO: move to…",79,[[]]],[11,"read_state","","Read one aspect of thread state.",79,[[["threadstatekind",4]],["zxresult",6]]],[11,"write_state","","Write one aspect of thread state.",79,[[["threadstatekind",4]],["zxresult",6]]],[11,"wait_for_run","","",79,[[["arc",3]]]],[11,"end_running","","",79,[[["usercontext",3],["box",3]]]],[11,"get_thread_info","","",79,[[],["threadinfo",3]]],[11,"blocking_run","","Run async future and change state while blocking.",79,[[["duration",3],["threadstate",4]]]],[11,"cancelable_blocking_run","","Run a cancelable async future and change state while…",79,[[["receiver",3],["duration",3],["threadstate",4]]]],[11,"state","","",79,[[],["threadstate",4]]],[11,"get_exceptionate","","",79,[[],[["arc",3],["exceptionate",3]]]],[11,"time_add","","",79,[[]]],[11,"get_time","","",79,[[]]],[8,"ContextExt","","",null,null],[10,"read_state","","",80,[[["threadstatekind",4]],["zxresult",6]]],[10,"write_state","","",80,[[["threadstatekind",4]],["zxresult",6]]],[8,"IntoResult","","",null,null],[10,"into_result","","",81,[[],["zxresult",6]]],[8,"Task","","Task (Thread, Process, or Job)",null,null],[10,"kill","","Kill the task.",82,[[],["zxresult",6]]],[10,"suspend","","Suspend the task. Currently only thread or process handles…",82,[[],["zxresult",6]]],[10,"create_exception_channel","","Create an exception channel on the task.",82,[[],[["zxresult",6],["channel",3]]]],[10,"resume_from_exception","","Resume the task from a previously caught exception.",82,[[["port",3]],["zxresult",6]]],[0,"util","zircon_object","",null,null],[0,"block_range","zircon_object::util","",null,null],[3,"BlockIter","zircon_object::util::block_range","Given a range and iterate sub-range for each block",null,null],[12,"begin","","",83,null],[12,"end","","",83,null],[12,"block_size_log2","","",83,null],[3,"BlockRange","","",null,null],[12,"block","","",84,null],[12,"begin","","",84,null],[12,"end","","",84,null],[12,"block_size_log2","","",84,null],[11,"len","","",84,[[]]],[11,"is_full","","",84,[[]]],[11,"is_empty","","",84,[[]]],[11,"origin_begin","","",84,[[]]],[11,"origin_end","","",84,[[]]],[0,"elf_loader","zircon_object::util","",null,null],[8,"VmarExt","zircon_object::util::elf_loader","",null,null],[10,"load_from_elf","","",85,[[["elffile",3]],[["zxresult",6],["arc",3]]]],[10,"map_from_elf","","",85,[[["vmobject",3],["elffile",3],["arc",3]],["zxresult",6]]],[8,"ElfExt","","",null,null],[10,"load_segment_size","","",86,[[]]],[10,"get_symbol_address","","",86,[[],["option",4]]],[10,"get_interpreter","","",86,[[],["result",4]]],[10,"dynsym","","",86,[[],["result",4]]],[10,"relocate","","",86,[[],["result",4]]],[0,"kcounter","zircon_object::util","",null,null],[3,"KCounter","zircon_object::util::kcounter","Kernel counter.",null,null],[3,"KCounterDescriptor","","",null,null],[12,"counter","","",87,null],[12,"name","","",87,null],[3,"KCounterDescriptorArray","","",null,null],[12,"0","","",88,null],[11,"new","","Create a new KCounter.",89,[[]]],[11,"add","","Add a value to the counter.",89,[[]]],[11,"get","","Get the value of counter.",89,[[]]],[11,"get","","Get kcounter descriptor array from symbols.",88,[[]]],[0,"vm","zircon_object","Objects for Virtual Memory Management.",null,null],[4,"CachePolicy","zircon_object::vm","",null,null],[13,"Cached","","",90,null],[13,"Uncached","","",90,null],[13,"UncachedDevice","","",90,null],[13,"WriteCombining","","",90,null],[3,"MMUFlags","","",null,null],[3,"VmarFlags","","",null,null],[3,"VmAddressRegion","","Virtual Memory Address Regions",null,null],[3,"VmarInfo","","",null,null],[3,"VmMapping","","Virtual Memory Mapping",null,null],[3,"TaskStatsInfo","","",null,null],[3,"VmObject","","",null,null],[3,"VmoInfo","","Describes a VMO.",null,null],[12,"flags","","Flags.",91,null],[12,"rights","","If `flags & ZX_INFO_VMO_VIA_HANDLE`, the handle rights.…",91,null],[3,"VmoInfoFlags","","",null,null],[3,"KERNEL_ASPACE","","",null,null],[4,"RangeChangeOp","","",null,null],[13,"Unmap","","",92,null],[13,"RemoveWrite","","",92,null],[5,"vmo_page_bytes","","",null,[[]]],[5,"page_aligned","","",null,[[]]],[5,"check_aligned","","",null,[[]]],[5,"pages","","How many pages the `size` needs. To avoid overflow and…",null,[[]]],[5,"ceil","","",null,[[]]],[5,"roundup_pages","","",null,[[]]],[5,"round_down_pages","","",null,[[]]],[5,"kernel_allocate_physical","","",null,[[["physaddr",6],["mmuflags",3],["cachepolicy",4]],[["zxresult",6],["virtaddr",6]]]],[18,"COMPACT","","",93,null],[18,"SPECIFIC","","",93,null],[18,"SPECIFIC_OVERWRITE","","",93,null],[18,"CAN_MAP_SPECIFIC","","",93,null],[18,"CAN_MAP_READ","","",93,null],[18,"CAN_MAP_WRITE","","",93,null],[18,"CAN_MAP_EXECUTE","","",93,null],[18,"REQUIRE_NON_RESIZABLE","","",93,null],[18,"ALLOW_FAULTS","","",93,null],[18,"CAN_MAP_RXW","","",93,null],[18,"ROOT_FLAGS","","",93,null],[11,"empty","","Returns an empty set of flags",93,[[],["vmarflags",3]]],[11,"all","","Returns the set containing all flags.",93,[[],["vmarflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",93,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",93,[[],[["option",4],["vmarflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",93,[[],["vmarflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",93,[[],["vmarflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",93,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",93,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",93,[[["vmarflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",93,[[["vmarflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",93,[[["vmarflags",3]]]],[11,"remove","","Removes the specified flags in-place.",93,[[["vmarflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",93,[[["vmarflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",93,[[["vmarflags",3]]]],[11,"new_root","","Create a new root VMAR.",94,[[],["arc",3]]],[11,"new_kernel","","Create a kernel root VMAR.",94,[[],["arc",3]]],[11,"allocate_at","","Create a child VMAR at the `offset`.",94,[[["vmarflags",3],["arc",3]],[["arc",3],["zxresult",6]]]],[11,"allocate","","Create a child VMAR with optional `offset`.",94,[[["vmarflags",3],["option",4],["arc",3]],[["arc",3],["zxresult",6]]]],[11,"map_at","","",94,[[["mmuflags",3],["vmobject",3],["arc",3]],[["zxresult",6],["virtaddr",6]]]],[11,"map_at_ext","","Map the `vmo` into this VMAR at given `offset`.",94,[[["mmuflags",3],["vmobject",3],["arc",3]],[["zxresult",6],["virtaddr",6]]]],[11,"map","","",94,[[["vmobject",3],["option",4],["arc",3],["mmuflags",3]],[["zxresult",6],["virtaddr",6]]]],[11,"map_ext","","Map the `vmo` into this VMAR.",94,[[["vmobject",3],["option",4],["arc",3],["mmuflags",3]],[["zxresult",6],["virtaddr",6]]]],[11,"unmap","","Unmaps all VMO mappings and destroys all sub-regions…",94,[[["virtaddr",6]],["zxresult",6]]],[11,"protect","","",94,[[["mmuflags",3]],["zxresult",6]]],[11,"destroy","","Unmap all mappings within the VMAR, and destroy all…",94,[[["arc",3]],["zxresult",6]]],[11,"clear","","Unmap all mappings and destroy all sub-regions of VMAR.",94,[[],["zxresult",6]]],[11,"table_phys","","Get physical address of the underlying page table.",94,[[],["physaddr",6]]],[11,"addr","","Get start address of this VMAR.",94,[[]]],[11,"is_dead","","",94,[[]]],[11,"is_alive","","",94,[[]]],[11,"get_info","","",94,[[],["vmarinfo",3]]],[11,"get_flags","","",94,[[],["vmarflags",3]]],[11,"dump","","Dump all mappings recursively.",94,[[]]],[11,"vdso_base_addr","","",94,[[],["option",4]]],[11,"handle_page_fault","","Handle page fault happened on this VMAR.",94,[[["mmuflags",3],["virtaddr",6]],["zxresult",6]]],[11,"get_task_stats","","",94,[[],["taskstatsinfo",3]]],[11,"new_paged","","Create a new VMO backing on physical memory allocated in…",95,[[],["arc",3]]],[11,"new_paged_with_resizable","","",95,[[],["arc",3]]],[11,"new_physical","","Create a new VMO representing a piece of contiguous…",95,[[["physaddr",6]],["arc",3]]],[11,"new_contiguous","","",95,[[],[["arc",3],["zxresult",6]]]],[11,"create_child","","Create a child VMO.",95,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"create_slice","","Create a child slice as an VMO",95,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"set_len","","Set the length of this VMO if resizable.",95,[[],["zxresult",6]]],[11,"get_info","","Get information of this VMO.",95,[[],["vmoinfo",3]]],[11,"set_cache_policy","","",95,[[["cachepolicy",4]],["zxresult",6]]],[11,"is_resizable","","",95,[[]]],[11,"is_contiguous","","",95,[[]]],[18,"TYPE_PHYSICAL","","",96,null],[18,"TYPE_PAGED","","",96,null],[18,"RESIZABLE","","",96,null],[18,"IS_COW_CLONE","","",96,null],[18,"VIA_HANDLE","","",96,null],[18,"VIA_MAPPING","","",96,null],[18,"PAGER_BACKED","","",96,null],[18,"CONTIGUOUS","","",96,null],[11,"empty","","Returns an empty set of flags",96,[[],["vmoinfoflags",3]]],[11,"all","","Returns the set containing all flags.",96,[[],["vmoinfoflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",96,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",96,[[],[["option",4],["vmoinfoflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",96,[[],["vmoinfoflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",96,[[],["vmoinfoflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",96,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",96,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",96,[[["vmoinfoflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",96,[[["vmoinfoflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",96,[[["vmoinfoflags",3]]]],[11,"remove","","Removes the specified flags in-place.",96,[[["vmoinfoflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",96,[[["vmoinfoflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",96,[[["vmoinfoflags",3]]]],[6,"PhysAddr","","Physical Address",null,null],[6,"VirtAddr","","Virtual Address",null,null],[6,"DevVAddr","","Device Address",null,null],[17,"PAGE_SIZE","","Size of a page",null,null],[17,"PAGE_SIZE_LOG2","","",null,null],[8,"VMObjectTrait","","Virtual Memory Object Trait",null,null],[10,"read","","Read memory to `buf` from VMO at `offset`.",97,[[],["zxresult",6]]],[10,"write","","Write memory from `buf` to VMO at `offset`.",97,[[],["zxresult",6]]],[10,"len","","Get the length of VMO.",97,[[]]],[10,"set_len","","Set the length of VMO.",97,[[],["zxresult",6]]],[11,"unmap_from","","Unmap physical memory from `page_table`.",97,[[["pagetable",3],["virtaddr",6]]]],[10,"commit_page","","Commit a page.",97,[[["mmuflags",3]],[["physaddr",6],["zxresult",6]]]],[10,"commit_pages_with","","Commit pages with an external function f. the vmo is…",97,[[["fnmut",8]],["zxresult",6]]],[10,"commit","","Commit allocating physical memory.",97,[[],["zxresult",6]]],[10,"decommit","","Decommit allocated physical memory.",97,[[],["zxresult",6]]],[10,"create_child","","Create a child VMO.",97,[[["koid",6]],[["arc",3],["zxresult",6]]]],[10,"append_mapping","","",97,[[["weak",3],["vmmapping",3]]]],[10,"remove_mapping","","",97,[[["weak",3],["vmmapping",3]]]],[10,"complete_info","","",97,[[["vmoinfo",3]]]],[10,"cache_policy","","",97,[[],["cachepolicy",4]]],[10,"set_cache_policy","","",97,[[["cachepolicy",4]],["zxresult",6]]],[10,"share_count","","",97,[[]]],[10,"committed_pages_in_range","","",97,[[]]],[11,"pin","","",97,[[],["zxresult",6]]],[11,"unpin","","",97,[[],["zxresult",6]]],[11,"is_contiguous","","",97,[[]]],[11,"is_paged","","",97,[[]]],[10,"zero","","",97,[[],["zxresult",6]]],[6,"ZxResult","zircon_object","The type returned by kernel objects methods.",null,null],[14,"impl_kobject","","Macro to auto implement `KernelObject` trait.",null,null],[14,"define_count_helper","","Define a pair of kcounter (create, destroy), and a helper…",null,null],[14,"kcounter","","Define a new KCounter.",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"into_any","","",0,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","zircon_object::debuglog","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_any","","",1,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","zircon_object::dev","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_any","","",24,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",24,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"into_any_arc","","",24,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",98,[[]]],[11,"borrow","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"into","","",98,[[]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"into_any","","",98,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",98,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",98,[[],["any",8]]],[11,"as_any_mut","","",98,[[],["any",8]]],[11,"into_any_arc","","",98,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_any","","",25,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"into_any_arc","","",25,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"into_any","","",26,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",26,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"into_any_arc","","",26,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"into_any","","",27,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",27,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",27,[[],["any",8]]],[11,"as_any_mut","","",27,[[],["any",8]]],[11,"into_any_arc","","",27,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"into_any","","",28,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",28,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",28,[[],["any",8]]],[11,"as_any_mut","","",28,[[],["any",8]]],[11,"into_any_arc","","",28,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"into_any","","",29,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",29,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",29,[[],["any",8]]],[11,"as_any_mut","","",29,[[],["any",8]]],[11,"into_any_arc","","",29,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"into_any","","",30,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",30,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",30,[[],["any",8]]],[11,"as_any_mut","","",30,[[],["any",8]]],[11,"into_any_arc","","",30,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"into_any","","",31,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",31,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",31,[[],["any",8]]],[11,"as_any_mut","","",31,[[],["any",8]]],[11,"into_any_arc","","",31,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"into","","",99,[[]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"into_any","","",99,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",99,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",99,[[],["any",8]]],[11,"as_any_mut","","",99,[[],["any",8]]],[11,"into_any_arc","","",99,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"into_any","","",2,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_any","","",3,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any_arc","","",3,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_any","","",4,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"into_any_arc","","",4,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_any","","",5,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any_arc","","",5,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"into_any","","",6,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"into_any_arc","","",6,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_any","","",7,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"into_any_arc","","",7,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"into","","",100,[[]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"into_any","","",100,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",100,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",100,[[],["any",8]]],[11,"as_any_mut","","",100,[[],["any",8]]],[11,"into_any_arc","","",100,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_any","","",8,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"into_any_arc","","",8,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_any","","",9,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any_arc","","",9,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"into_any","","",32,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",32,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",32,[[],["any",8]]],[11,"as_any_mut","","",32,[[],["any",8]]],[11,"into_any_arc","","",32,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_any","","",10,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"into_any_arc","","",10,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_any","","",11,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"into_any_arc","","",11,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_any","","",12,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"into_any_arc","","",12,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"into_any","","",33,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",33,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",33,[[],["any",8]]],[11,"as_any_mut","","",33,[[],["any",8]]],[11,"into_any_arc","","",33,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"into_any","","",34,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",34,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",34,[[],["any",8]]],[11,"as_any_mut","","",34,[[],["any",8]]],[11,"into_any_arc","","",34,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_any","","",13,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"into_any_arc","","",13,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_any","","",14,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any_arc","","",14,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_any","","",15,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",15,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"into_any_arc","","",15,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"into","","",101,[[]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"into_any","","",101,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",101,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",101,[[],["any",8]]],[11,"as_any_mut","","",101,[[],["any",8]]],[11,"into_any_arc","","",101,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_any","","",16,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"into_any_arc","","",16,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"into_any","","",17,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",17,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"into_any_arc","","",17,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"into_any","","",18,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"into_any_arc","","",18,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_any","","",35,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",35,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",35,[[],["any",8]]],[11,"as_any_mut","","",35,[[],["any",8]]],[11,"into_any_arc","","",35,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"into_any","","",36,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",36,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"into_any_arc","","",36,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"into_any","","",37,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",37,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",37,[[],["any",8]]],[11,"as_any_mut","","",37,[[],["any",8]]],[11,"into_any_arc","","",37,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",102,[[]]],[11,"borrow","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"into","","",102,[[]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"into_any","","",102,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",102,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",102,[[],["any",8]]],[11,"as_any_mut","","",102,[[],["any",8]]],[11,"into_any_arc","","",102,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"into_any","","",19,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"into_any_arc","","",19,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"into_any","","",20,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"into_any_arc","","",20,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_any","","",21,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",21,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"into_any_arc","","",21,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"into_any","","",22,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",22,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"into_any_arc","","",22,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"into_any","","",23,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",23,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"into_any_arc","","",23,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","zircon_object::ipc","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"into","","",41,[[]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_any","","",41,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",41,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",41,[[],["any",8]]],[11,"as_any_mut","","",41,[[],["any",8]]],[11,"into_any_arc","","",41,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"into_any","","",40,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",40,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",40,[[],["any",8]]],[11,"as_any_mut","","",40,[[],["any",8]]],[11,"into_any_arc","","",40,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"into","","",42,[[]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"into_any","","",42,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",42,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",42,[[],["any",8]]],[11,"as_any_mut","","",42,[[],["any",8]]],[11,"into_any_arc","","",42,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"into_any","","",44,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",44,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",44,[[],["any",8]]],[11,"as_any_mut","","",44,[[],["any",8]]],[11,"into_any_arc","","",44,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"into","","",43,[[]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"into_any","","",43,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",43,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",43,[[],["any",8]]],[11,"as_any_mut","","",43,[[],["any",8]]],[11,"into_any_arc","","",43,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",103,[[]]],[11,"borrow","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"into","","",103,[[]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"into_any","","",103,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",103,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",103,[[],["any",8]]],[11,"as_any_mut","","",103,[[],["any",8]]],[11,"into_any_arc","","",103,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","zircon_object::object","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"into_any","","",45,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",45,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",45,[[],["any",8]]],[11,"as_any_mut","","",45,[[],["any",8]]],[11,"into_any_arc","","",45,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",104,[[]]],[11,"borrow","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"into","","",104,[[]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"into_any","","",104,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",104,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",104,[[],["any",8]]],[11,"as_any_mut","","",104,[[],["any",8]]],[11,"into_any_arc","","",104,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_any","","",46,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",46,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",46,[[],["any",8]]],[11,"as_any_mut","","",46,[[],["any",8]]],[11,"into_any_arc","","",46,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"into_any","","",48,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",48,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",48,[[],["any",8]]],[11,"as_any_mut","","",48,[[],["any",8]]],[11,"into_any_arc","","",48,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"into_any","","",49,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",49,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",49,[[],["any",8]]],[11,"as_any_mut","","",49,[[],["any",8]]],[11,"into_any_arc","","",49,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"into_any","","",47,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",47,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",47,[[],["any",8]]],[11,"as_any_mut","","",47,[[],["any",8]]],[11,"into_any_arc","","",47,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_any","","",51,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",51,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",51,[[],["any",8]]],[11,"as_any_mut","","",51,[[],["any",8]]],[11,"into_any_arc","","",51,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","zircon_object::signal","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"into","","",59,[[]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_any","","",59,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",59,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",59,[[],["any",8]]],[11,"as_any_mut","","",59,[[],["any",8]]],[11,"into_any_arc","","",59,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",60,[[]]],[11,"borrow","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"into","","",60,[[]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"into_any","","",60,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",60,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",60,[[],["any",8]]],[11,"as_any_mut","","",60,[[],["any",8]]],[11,"into_any_arc","","",60,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"into","","",61,[[]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"into_any","","",61,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",61,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",61,[[],["any",8]]],[11,"as_any_mut","","",61,[[],["any",8]]],[11,"into_any_arc","","",61,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",105,[[]]],[11,"borrow","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"into","","",105,[[]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"into_any","","",105,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",105,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",105,[[],["any",8]]],[11,"as_any_mut","","",105,[[],["any",8]]],[11,"into_any_arc","","",105,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"into_any","","",52,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",52,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",52,[[],["any",8]]],[11,"as_any_mut","","",52,[[],["any",8]]],[11,"into_any_arc","","",52,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"into_any","","",53,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",53,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",53,[[],["any",8]]],[11,"as_any_mut","","",53,[[],["any",8]]],[11,"into_any_arc","","",53,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"into_any","","",54,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",54,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",54,[[],["any",8]]],[11,"as_any_mut","","",54,[[],["any",8]]],[11,"into_any_arc","","",54,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"into_any","","",55,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",55,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"into_any_arc","","",55,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",62,[[]]],[11,"borrow","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"into","","",62,[[]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"into_any","","",62,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",62,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",62,[[],["any",8]]],[11,"as_any_mut","","",62,[[],["any",8]]],[11,"into_any_arc","","",62,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",63,[[]]],[11,"borrow","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"into","","",63,[[]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"into_any","","",63,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",63,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",63,[[],["any",8]]],[11,"as_any_mut","","",63,[[],["any",8]]],[11,"into_any_arc","","",63,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_any","","",64,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",64,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",64,[[],["any",8]]],[11,"as_any_mut","","",64,[[],["any",8]]],[11,"into_any_arc","","",64,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"into","","",56,[[]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"into_any","","",56,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",56,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",56,[[],["any",8]]],[11,"as_any_mut","","",56,[[],["any",8]]],[11,"into_any_arc","","",56,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"into","","",57,[[]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"into_any","","",57,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",57,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",57,[[],["any",8]]],[11,"as_any_mut","","",57,[[],["any",8]]],[11,"into_any_arc","","",57,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"into","","",58,[[]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"into_any","","",58,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",58,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",58,[[],["any",8]]],[11,"as_any_mut","","",58,[[],["any",8]]],[11,"into_any_arc","","",58,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","zircon_object::task","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"into_any","","",74,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",74,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",74,[[],["any",8]]],[11,"as_any_mut","","",74,[[],["any",8]]],[11,"into_any_arc","","",74,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",106,[[]]],[11,"borrow","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"into","","",106,[[]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"into_any","","",106,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",106,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",106,[[],["any",8]]],[11,"as_any_mut","","",106,[[],["any",8]]],[11,"into_any_arc","","",106,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"into_any","","",75,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",75,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",75,[[],["any",8]]],[11,"as_any_mut","","",75,[[],["any",8]]],[11,"into_any_arc","","",75,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"into","","",65,[[]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"into_any","","",65,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",65,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",65,[[],["any",8]]],[11,"as_any_mut","","",65,[[],["any",8]]],[11,"into_any_arc","","",65,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",107,[[]]],[11,"borrow","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"into","","",107,[[]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"into_any","","",107,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",107,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",107,[[],["any",8]]],[11,"as_any_mut","","",107,[[],["any",8]]],[11,"into_any_arc","","",107,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"into_any","","",76,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",76,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",76,[[],["any",8]]],[11,"as_any_mut","","",76,[[],["any",8]]],[11,"into_any_arc","","",76,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"into_any","","",77,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",77,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",77,[[],["any",8]]],[11,"as_any_mut","","",77,[[],["any",8]]],[11,"into_any_arc","","",77,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"into_any","","",66,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",66,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",66,[[],["any",8]]],[11,"as_any_mut","","",66,[[],["any",8]]],[11,"into_any_arc","","",66,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"into_any","","",78,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",78,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",78,[[],["any",8]]],[11,"as_any_mut","","",78,[[],["any",8]]],[11,"into_any_arc","","",78,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"into_any","","",79,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",79,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",79,[[],["any",8]]],[11,"as_any_mut","","",79,[[],["any",8]]],[11,"into_any_arc","","",79,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"into","","",108,[[]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"into_any","","",108,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",108,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",108,[[],["any",8]]],[11,"as_any_mut","","",108,[[],["any",8]]],[11,"into_any_arc","","",108,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",67,[[]]],[11,"borrow","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"into","","",67,[[]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"into_any","","",67,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",67,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",67,[[],["any",8]]],[11,"as_any_mut","","",67,[[],["any",8]]],[11,"into_any_arc","","",67,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"into_any","","",68,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",68,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",68,[[],["any",8]]],[11,"as_any_mut","","",68,[[],["any",8]]],[11,"into_any_arc","","",68,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",69,[[]]],[11,"borrow","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"into","","",69,[[]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"into_any","","",69,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",69,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",69,[[],["any",8]]],[11,"as_any_mut","","",69,[[],["any",8]]],[11,"into_any_arc","","",69,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"into","","",70,[[]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"into_any","","",70,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",70,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",70,[[],["any",8]]],[11,"as_any_mut","","",70,[[],["any",8]]],[11,"into_any_arc","","",70,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"into","","",71,[[]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"into_any","","",71,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",71,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",71,[[],["any",8]]],[11,"as_any_mut","","",71,[[],["any",8]]],[11,"into_any_arc","","",71,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"into","","",72,[[]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"into_any","","",72,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",72,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",72,[[],["any",8]]],[11,"as_any_mut","","",72,[[],["any",8]]],[11,"into_any_arc","","",72,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"into","","",73,[[]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"into_any","","",73,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",73,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",73,[[],["any",8]]],[11,"as_any_mut","","",73,[[],["any",8]]],[11,"into_any_arc","","",73,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","zircon_object::util::block_range","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"into_iter","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"into_any","","",83,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",83,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",83,[[],["any",8]]],[11,"as_any_mut","","",83,[[],["any",8]]],[11,"into_any_arc","","",83,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"into_any","","",84,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",84,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",84,[[],["any",8]]],[11,"as_any_mut","","",84,[[],["any",8]]],[11,"into_any_arc","","",84,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","zircon_object::util::kcounter","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"into","","",89,[[]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"into_any","","",89,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",89,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",89,[[],["any",8]]],[11,"as_any_mut","","",89,[[],["any",8]]],[11,"into_any_arc","","",89,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"into","","",87,[[]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"into_any","","",87,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",87,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",87,[[],["any",8]]],[11,"as_any_mut","","",87,[[],["any",8]]],[11,"into_any_arc","","",87,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"into","","",88,[[]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"into_any","","",88,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",88,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",88,[[],["any",8]]],[11,"as_any_mut","","",88,[[],["any",8]]],[11,"into_any_arc","","",88,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","zircon_object::vm","",90,[[]]],[11,"borrow","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"into","","",90,[[]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"into_any","","",90,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",90,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",90,[[],["any",8]]],[11,"as_any_mut","","",90,[[],["any",8]]],[11,"into_any_arc","","",90,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"into","","",109,[[]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"into_any","","",109,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",109,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",109,[[],["any",8]]],[11,"as_any_mut","","",109,[[],["any",8]]],[11,"into_any_arc","","",109,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",93,[[]]],[11,"borrow","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"into","","",93,[[]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"into_any","","",93,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",93,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",93,[[],["any",8]]],[11,"as_any_mut","","",93,[[],["any",8]]],[11,"into_any_arc","","",93,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",94,[[]]],[11,"borrow","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"into","","",94,[[]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"into_any","","",94,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",94,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",94,[[],["any",8]]],[11,"as_any_mut","","",94,[[],["any",8]]],[11,"into_any_arc","","",94,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"into","","",110,[[]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"into_any","","",110,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",110,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",110,[[],["any",8]]],[11,"as_any_mut","","",110,[[],["any",8]]],[11,"into_any_arc","","",110,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"into","","",111,[[]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"into_any","","",111,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",111,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",111,[[],["any",8]]],[11,"as_any_mut","","",111,[[],["any",8]]],[11,"into_any_arc","","",111,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"into","","",112,[[]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"into_any","","",112,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",112,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",112,[[],["any",8]]],[11,"as_any_mut","","",112,[[],["any",8]]],[11,"into_any_arc","","",112,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"into","","",95,[[]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"into_any","","",95,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",95,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",95,[[],["any",8]]],[11,"as_any_mut","","",95,[[],["any",8]]],[11,"into_any_arc","","",95,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"into","","",91,[[]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"into_any","","",91,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",91,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",91,[[],["any",8]]],[11,"as_any_mut","","",91,[[],["any",8]]],[11,"into_any_arc","","",91,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"into","","",96,[[]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"into_any","","",96,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",96,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",96,[[],["any",8]]],[11,"as_any_mut","","",96,[[],["any",8]]],[11,"into_any_arc","","",96,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"into","","",113,[[]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"into_any","","",113,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",113,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",113,[[],["any",8]]],[11,"as_any_mut","","",113,[[],["any",8]]],[11,"into_any_arc","","",113,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"into","","",92,[[]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"into_any","","",92,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",92,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",92,[[],["any",8]]],[11,"as_any_mut","","",92,[[],["any",8]]],[11,"into_any_arc","","",92,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from_iter","","",109,[[],["mmuflags",3]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","","",109,[[["mmuflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",109,[[["mmuflags",3]]]],[11,"le","","",109,[[["mmuflags",3]]]],[11,"gt","","",109,[[["mmuflags",3]]]],[11,"ge","","",109,[[["mmuflags",3]]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitor_assign","","Adds the set of flags.",109,[[["mmuflags",3]]]],[11,"hash","","",109,[[]]],[11,"cmp","","",109,[[["mmuflags",3]],["ordering",4]]],[11,"fmt","","",90,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","","Returns the set difference of the two sets of flags.",109,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",109,[[["mmuflags",3]],["mmuflags",3]]],[11,"not","","Returns the complement of this set of flags.",109,[[],["mmuflags",3]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitxor_assign","","Toggles the set of flags.",109,[[["mmuflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",109,[[["mmuflags",3]]]],[11,"extend","","",109,[[]]],[11,"try_from","","",90,[[],[["result",4],["cachepolicy",4]]]],[11,"bitor","","Returns the union of the two sets of flags.",109,[[["mmuflags",3]],["mmuflags",3]]],[11,"eq","","",90,[[["cachepolicy",4]]]],[11,"eq","","",109,[[["mmuflags",3]]]],[11,"ne","","",109,[[["mmuflags",3]]]],[11,"clone","","",90,[[],["cachepolicy",4]]],[11,"clone","","",109,[[],["mmuflags",3]]],[11,"fmt","","",109,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub_assign","","Disables all flags enabled in the set.",109,[[["mmuflags",3]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",109,[[["mmuflags",3]],["mmuflags",3]]],[11,"create_config","zircon_object::dev","",31,[[],[["pciconfig",3],["arc",3]]]],[11,"translate","","",31,[[],["zxresult",6]]],[11,"create_config","","",99,[[],[["pciconfig",3],["arc",3]]]],[11,"translate","","",99,[[],["zxresult",6]]],[11,"node_type","","",12,[[],["pcinodetype",4]]],[11,"device","","",12,[[],[["arc",3],["option",4]]]],[11,"as_upstream","","",12,[[],[["arc",3],["option",4]]]],[11,"to_root","","",12,[[],[["option",4],["pciroot",3]]]],[11,"to_device","","",12,[[],[["pcidevicenode",3],["option",4]]]],[11,"to_bridge","","",12,[[],[["option",4],["pcibridge",3]]]],[11,"allocate_bars","","",12,[[],["zxresult",6]]],[11,"mmio_lo_regions","","",12,[[],[["mutex",3],["arc",3]]]],[11,"mmio_hi_regions","","",12,[[],[["mutex",3],["arc",3]]]],[11,"pio_regions","","",12,[[],[["mutex",3],["arc",3]]]],[11,"enable_bus_master","","",12,[[],["zxresult",6]]],[11,"node_type","","",33,[[],["pcinodetype",4]]],[11,"device","","",33,[[],[["arc",3],["option",4]]]],[11,"as_upstream","","",33,[[],[["arc",3],["option",4]]]],[11,"to_root","","",33,[[],[["option",4],["pciroot",3]]]],[11,"to_device","","",33,[[],[["pcidevicenode",3],["option",4]]]],[11,"to_bridge","","",33,[[],[["option",4],["pcibridge",3]]]],[11,"allocate_bars","","",33,[[],["zxresult",6]]],[11,"enable_bus_master","","",33,[[],["zxresult",6]]],[11,"node_type","","",34,[[],["pcinodetype",4]]],[11,"device","","",34,[[],[["arc",3],["option",4]]]],[11,"as_upstream","","",34,[[],[["arc",3],["option",4]]]],[11,"to_root","","",34,[[],[["option",4],["pciroot",3]]]],[11,"to_device","","",34,[[],[["pcidevicenode",3],["option",4]]]],[11,"to_bridge","","",34,[[],[["option",4],["pcibridge",3]]]],[11,"pf_mmio_regions","","",34,[[],[["mutex",3],["arc",3]]]],[11,"mmio_lo_regions","","",34,[[],[["mutex",3],["arc",3]]]],[11,"mmio_hi_regions","","",34,[[],[["mutex",3],["arc",3]]]],[11,"pio_regions","","",34,[[],[["mutex",3],["arc",3]]]],[11,"allocate_bars","","",34,[[],["zxresult",6]]],[11,"enable_bus_master","","",34,[[],["zxresult",6]]],[11,"id","zircon_object::debuglog","",1,[[],["koid",6]]],[11,"type_name","","",1,[[]]],[11,"name","","",1,[[],["string",3]]],[11,"set_name","","",1,[[]]],[11,"signal","","",1,[[],["signal",3]]],[11,"signal_set","","",1,[[["signal",3]]]],[11,"signal_change","","",1,[[["signal",3]]]],[11,"add_signal_callback","","",1,[[["signalhandler",6]]]],[11,"id","zircon_object::dev","",24,[[],["koid",6]]],[11,"type_name","","",24,[[]]],[11,"name","","",24,[[],["string",3]]],[11,"set_name","","",24,[[]]],[11,"signal","","",24,[[],["signal",3]]],[11,"signal_set","","",24,[[["signal",3]]]],[11,"signal_change","","",24,[[["signal",3]]]],[11,"add_signal_callback","","",24,[[["signalhandler",6]]]],[11,"id","","",25,[[],["koid",6]]],[11,"type_name","","",25,[[]]],[11,"name","","",25,[[],["string",3]]],[11,"set_name","","",25,[[]]],[11,"signal","","",25,[[],["signal",3]]],[11,"signal_set","","",25,[[["signal",3]]]],[11,"signal_change","","",25,[[["signal",3]]]],[11,"add_signal_callback","","",25,[[["signalhandler",6]]]],[11,"id","","",28,[[],["koid",6]]],[11,"type_name","","",28,[[]]],[11,"name","","",28,[[],["string",3]]],[11,"set_name","","",28,[[]]],[11,"signal","","",28,[[],["signal",3]]],[11,"signal_set","","",28,[[["signal",3]]]],[11,"signal_change","","",28,[[["signal",3]]]],[11,"add_signal_callback","","",28,[[["signalhandler",6]]]],[11,"id","","",3,[[],["koid",6]]],[11,"type_name","","",3,[[]]],[11,"name","","",3,[[],["string",3]]],[11,"set_name","","",3,[[]]],[11,"signal","","",3,[[],["signal",3]]],[11,"signal_set","","",3,[[["signal",3]]]],[11,"signal_change","","",3,[[["signal",3]]]],[11,"add_signal_callback","","",3,[[["signalhandler",6]]]],[11,"id","","",35,[[],["koid",6]]],[11,"type_name","","",35,[[]]],[11,"name","","",35,[[],["string",3]]],[11,"set_name","","",35,[[]]],[11,"signal","","",35,[[],["signal",3]]],[11,"signal_set","","",35,[[["signal",3]]]],[11,"signal_change","","",35,[[["signal",3]]]],[11,"add_signal_callback","","",35,[[["signalhandler",6]]]],[11,"id","","",37,[[],["koid",6]]],[11,"type_name","","",37,[[]]],[11,"name","","",37,[[],["string",3]]],[11,"set_name","","",37,[[]]],[11,"signal","","",37,[[],["signal",3]]],[11,"signal_set","","",37,[[["signal",3]]]],[11,"signal_change","","",37,[[["signal",3]]]],[11,"add_signal_callback","","",37,[[["signalhandler",6]]]],[11,"id","zircon_object::ipc","",41,[[],["koid",6]]],[11,"type_name","","",41,[[]]],[11,"name","","",41,[[],["string",3]]],[11,"set_name","","",41,[[]]],[11,"signal","","",41,[[],["signal",3]]],[11,"signal_set","","",41,[[["signal",3]]]],[11,"signal_change","","",41,[[["signal",3]]]],[11,"add_signal_callback","","",41,[[["signalhandler",6]]]],[11,"peer","","",41,[[],[["zxresult",6],["arc",3]]]],[11,"related_koid","","",41,[[],["koid",6]]],[11,"id","","",42,[[],["koid",6]]],[11,"type_name","","",42,[[]]],[11,"name","","",42,[[],["string",3]]],[11,"set_name","","",42,[[]]],[11,"signal","","",42,[[],["signal",3]]],[11,"signal_set","","",42,[[["signal",3]]]],[11,"signal_change","","",42,[[["signal",3]]]],[11,"add_signal_callback","","",42,[[["signalhandler",6]]]],[11,"peer","","",42,[[],[["zxresult",6],["arc",3]]]],[11,"related_koid","","",42,[[],["koid",6]]],[11,"id","","",44,[[],["koid",6]]],[11,"type_name","","",44,[[]]],[11,"name","","",44,[[],["string",3]]],[11,"set_name","","",44,[[]]],[11,"signal","","",44,[[],["signal",3]]],[11,"signal_set","","",44,[[["signal",3]]]],[11,"signal_change","","",44,[[["signal",3]]]],[11,"add_signal_callback","","",44,[[["signalhandler",6]]]],[11,"peer","","",44,[[],[["zxresult",6],["arc",3]]]],[11,"related_koid","","",44,[[],["koid",6]]],[11,"id","zircon_object::object","",51,[[],["koid",6]]],[11,"type_name","","",51,[[]]],[11,"name","","",51,[[],["string",3]]],[11,"set_name","","",51,[[]]],[11,"signal","","",51,[[],["signal",3]]],[11,"signal_set","","",51,[[["signal",3]]]],[11,"signal_change","","",51,[[["signal",3]]]],[11,"add_signal_callback","","",51,[[["signalhandler",6]]]],[11,"id","zircon_object::signal","",59,[[],["koid",6]]],[11,"type_name","","",59,[[]]],[11,"name","","",59,[[],["string",3]]],[11,"set_name","","",59,[[]]],[11,"signal","","",59,[[],["signal",3]]],[11,"signal_set","","",59,[[["signal",3]]]],[11,"signal_change","","",59,[[["signal",3]]]],[11,"add_signal_callback","","",59,[[["signalhandler",6]]]],[11,"allowed_signals","","",59,[[],["signal",3]]],[11,"id","","",60,[[],["koid",6]]],[11,"type_name","","",60,[[]]],[11,"name","","",60,[[],["string",3]]],[11,"set_name","","",60,[[]]],[11,"signal","","",60,[[],["signal",3]]],[11,"signal_set","","",60,[[["signal",3]]]],[11,"signal_change","","",60,[[["signal",3]]]],[11,"add_signal_callback","","",60,[[["signalhandler",6]]]],[11,"allowed_signals","","",60,[[],["signal",3]]],[11,"peer","","",60,[[],[["zxresult",6],["arc",3]]]],[11,"related_koid","","",60,[[],["koid",6]]],[11,"id","","",61,[[],["koid",6]]],[11,"type_name","","",61,[[]]],[11,"name","","",61,[[],["string",3]]],[11,"set_name","","",61,[[]]],[11,"signal","","",61,[[],["signal",3]]],[11,"signal_set","","",61,[[["signal",3]]]],[11,"signal_change","","",61,[[["signal",3]]]],[11,"add_signal_callback","","",61,[[["signalhandler",6]]]],[11,"id","","",62,[[],["koid",6]]],[11,"type_name","","",62,[[]]],[11,"name","","",62,[[],["string",3]]],[11,"set_name","","",62,[[]]],[11,"signal","","",62,[[],["signal",3]]],[11,"signal_set","","",62,[[["signal",3]]]],[11,"signal_change","","",62,[[["signal",3]]]],[11,"add_signal_callback","","",62,[[["signalhandler",6]]]],[11,"id","","",64,[[],["koid",6]]],[11,"type_name","","",64,[[]]],[11,"name","","",64,[[],["string",3]]],[11,"set_name","","",64,[[]]],[11,"signal","","",64,[[],["signal",3]]],[11,"signal_set","","",64,[[["signal",3]]]],[11,"signal_change","","",64,[[["signal",3]]]],[11,"add_signal_callback","","",64,[[["signalhandler",6]]]],[11,"id","zircon_object::task","",74,[[],["koid",6]]],[11,"type_name","","",74,[[]]],[11,"name","","",74,[[],["string",3]]],[11,"set_name","","",74,[[]]],[11,"signal","","",74,[[],["signal",3]]],[11,"signal_set","","",74,[[["signal",3]]]],[11,"signal_change","","",74,[[["signal",3]]]],[11,"add_signal_callback","","",74,[[["signalhandler",6]]]],[11,"get_child","","",74,[[["koid",6]],[["zxresult",6],["arc",3]]]],[11,"related_koid","","",74,[[],["koid",6]]],[11,"id","","",77,[[],["koid",6]]],[11,"type_name","","",77,[[]]],[11,"name","","",77,[[],["string",3]]],[11,"set_name","","",77,[[]]],[11,"signal","","",77,[[],["signal",3]]],[11,"signal_set","","",77,[[["signal",3]]]],[11,"signal_change","","",77,[[["signal",3]]]],[11,"add_signal_callback","","",77,[[["signalhandler",6]]]],[11,"get_child","","",77,[[["koid",6]],[["zxresult",6],["arc",3]]]],[11,"related_koid","","",77,[[],["koid",6]]],[11,"id","","",78,[[],["koid",6]]],[11,"type_name","","",78,[[]]],[11,"name","","",78,[[],["string",3]]],[11,"set_name","","",78,[[]]],[11,"signal","","",78,[[],["signal",3]]],[11,"signal_set","","",78,[[["signal",3]]]],[11,"signal_change","","",78,[[["signal",3]]]],[11,"add_signal_callback","","",78,[[["signalhandler",6]]]],[11,"id","","",79,[[],["koid",6]]],[11,"type_name","","",79,[[]]],[11,"name","","",79,[[],["string",3]]],[11,"set_name","","",79,[[]]],[11,"signal","","",79,[[],["signal",3]]],[11,"signal_set","","",79,[[["signal",3]]]],[11,"signal_change","","",79,[[["signal",3]]]],[11,"add_signal_callback","","",79,[[["signalhandler",6]]]],[11,"related_koid","","",79,[[],["koid",6]]],[11,"id","zircon_object::vm","",94,[[],["koid",6]]],[11,"type_name","","",94,[[]]],[11,"name","","",94,[[],["string",3]]],[11,"set_name","","",94,[[]]],[11,"signal","","",94,[[],["signal",3]]],[11,"signal_set","","",94,[[["signal",3]]]],[11,"signal_change","","",94,[[["signal",3]]]],[11,"add_signal_callback","","",94,[[["signalhandler",6]]]],[11,"id","","",95,[[],["koid",6]]],[11,"type_name","","",95,[[]]],[11,"name","","",95,[[],["string",3]]],[11,"set_name","","",95,[[]]],[11,"signal","","",95,[[],["signal",3]]],[11,"signal_set","","",95,[[["signal",3]]]],[11,"signal_change","","",95,[[["signal",3]]]],[11,"add_signal_callback","","",95,[[["signalhandler",6]]]],[11,"into_result","zircon_object","",114,[[],["zxresult",6]]],[11,"load_from_elf","zircon_object::vm","Create `VMObject` from all LOAD segments of `elf` and map…",94,[[["elffile",3]],[["zxresult",6],["arc",3]]]],[11,"map_from_elf","","",94,[[["vmobject",3],["elffile",3],["arc",3]],["zxresult",6]]],[11,"deref","","",95,[[]]],[11,"deref","","",113,[[],["arc",3]]],[11,"from","zircon_object","",0,[[["error",4]]]],[11,"from","zircon_object::signal","",105,[[["portpacketrepr",3]]]],[11,"from","","",55,[[["portpacket",3]]]],[11,"fmt","zircon_object::debuglog","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","zircon_object::dev","",24,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",25,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","zircon_object","",0,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::ipc","",41,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",42,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",44,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","zircon_object::signal","",59,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",60,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",61,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::task","",74,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::util::block_range","",84,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::util::kcounter","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","zircon_object::vm","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"sub","zircon_object::dev","Returns the set difference of the two sets of flags.",26,[[["interruptflags",3]],["interruptflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",27,[[["interruptoptions",3]],["interruptoptions",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",29,[[["iommuperms",3]],["iommuperms",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",36,[[["resourceflags",3]],["resourceflags",3]]],[11,"sub","zircon_object::ipc","Returns the set difference of the two sets of flags.",43,[[["socketflags",3]],["socketflags",3]]],[11,"sub","zircon_object::object","Returns the set difference of the two sets of flags.",48,[[["rights",3]],["rights",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",49,[[["signal",3]],["signal",3]]],[11,"sub","zircon_object::signal","Returns the set difference of the two sets of flags.",63,[[["portoptions",3]],["portoptions",3]]],[11,"sub","zircon_object::vm","Returns the set difference of the two sets of flags.",93,[[["vmarflags",3]],["vmarflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",96,[[["vmoinfoflags",3]],["vmoinfoflags",3]]],[11,"eq","zircon_object::dev","",26,[[["interruptflags",3]]]],[11,"ne","","",26,[[["interruptflags",3]]]],[11,"eq","","",27,[[["interruptoptions",3]]]],[11,"ne","","",27,[[["interruptoptions",3]]]],[11,"eq","","",29,[[["iommuperms",3]]]],[11,"ne","","",29,[[["iommuperms",3]]]],[11,"eq","","",19,[[["pciedevicetype",4]]]],[11,"eq","","",20,[[["pcieirqmode",4]]]],[11,"eq","","",21,[[["pcinodetype",4]]]],[11,"eq","","",22,[[["pciaddrspace",4]]]],[11,"eq","","",23,[[["resourcekind",4]]]],[11,"eq","","",36,[[["resourceflags",3]]]],[11,"ne","","",36,[[["resourceflags",3]]]],[11,"eq","zircon_object","",0,[[["zxerror",4]]]],[11,"eq","zircon_object::ipc","",43,[[["socketflags",3]]]],[11,"ne","","",43,[[["socketflags",3]]]],[11,"eq","zircon_object::object","",48,[[["rights",3]]]],[11,"ne","","",48,[[["rights",3]]]],[11,"eq","","",49,[[["signal",3]]]],[11,"ne","","",49,[[["signal",3]]]],[11,"eq","zircon_object::signal","",56,[[["packettype",4]]]],[11,"eq","","",52,[[["packetsignal",3]]]],[11,"ne","","",52,[[["packetsignal",3]]]],[11,"eq","","",53,[[["packetexception",3]]]],[11,"ne","","",53,[[["packetexception",3]]]],[11,"eq","","",54,[[["packetinterrupt",3]]]],[11,"ne","","",54,[[["packetinterrupt",3]]]],[11,"eq","","",55,[[["portpacketrepr",3]]]],[11,"ne","","",55,[[["portpacketrepr",3]]]],[11,"eq","","",57,[[["payloadrepr",4]]]],[11,"ne","","",57,[[["payloadrepr",4]]]],[11,"eq","","",63,[[["portoptions",3]]]],[11,"ne","","",63,[[["portoptions",3]]]],[11,"eq","zircon_object::task","",69,[[["policyaction",4]]]],[11,"eq","","",71,[[["status",4]]]],[11,"ne","","",71,[[["status",4]]]],[11,"eq","","",73,[[["threadstate",4]]]],[11,"eq","zircon_object::util::block_range","",84,[[["blockrange",3]]]],[11,"ne","","",84,[[["blockrange",3]]]],[11,"eq","zircon_object::vm","",93,[[["vmarflags",3]]]],[11,"ne","","",93,[[["vmarflags",3]]]],[11,"eq","","",96,[[["vmoinfoflags",3]]]],[11,"ne","","",96,[[["vmoinfoflags",3]]]],[11,"eq","","",92,[[["rangechangeop",4]]]],[11,"cmp","zircon_object::dev","",26,[[["interruptflags",3]],["ordering",4]]],[11,"cmp","","",27,[[["interruptoptions",3]],["ordering",4]]],[11,"cmp","","",29,[[["iommuperms",3]],["ordering",4]]],[11,"cmp","","",36,[[["resourceflags",3]],["ordering",4]]],[11,"cmp","zircon_object::ipc","",43,[[["socketflags",3]],["ordering",4]]],[11,"cmp","zircon_object::object","",48,[[["rights",3]],["ordering",4]]],[11,"cmp","","",49,[[["signal",3]],["ordering",4]]],[11,"cmp","zircon_object::signal","",63,[[["portoptions",3]],["ordering",4]]],[11,"cmp","zircon_object::vm","",93,[[["vmarflags",3]],["ordering",4]]],[11,"cmp","","",96,[[["vmoinfoflags",3]],["ordering",4]]],[11,"partial_cmp","zircon_object::dev","",26,[[["interruptflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",26,[[["interruptflags",3]]]],[11,"le","","",26,[[["interruptflags",3]]]],[11,"gt","","",26,[[["interruptflags",3]]]],[11,"ge","","",26,[[["interruptflags",3]]]],[11,"partial_cmp","","",27,[[["interruptoptions",3]],[["ordering",4],["option",4]]]],[11,"lt","","",27,[[["interruptoptions",3]]]],[11,"le","","",27,[[["interruptoptions",3]]]],[11,"gt","","",27,[[["interruptoptions",3]]]],[11,"ge","","",27,[[["interruptoptions",3]]]],[11,"partial_cmp","","",29,[[["iommuperms",3]],[["ordering",4],["option",4]]]],[11,"lt","","",29,[[["iommuperms",3]]]],[11,"le","","",29,[[["iommuperms",3]]]],[11,"gt","","",29,[[["iommuperms",3]]]],[11,"ge","","",29,[[["iommuperms",3]]]],[11,"partial_cmp","","",36,[[["resourceflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",36,[[["resourceflags",3]]]],[11,"le","","",36,[[["resourceflags",3]]]],[11,"gt","","",36,[[["resourceflags",3]]]],[11,"ge","","",36,[[["resourceflags",3]]]],[11,"partial_cmp","zircon_object::ipc","",43,[[["socketflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",43,[[["socketflags",3]]]],[11,"le","","",43,[[["socketflags",3]]]],[11,"gt","","",43,[[["socketflags",3]]]],[11,"ge","","",43,[[["socketflags",3]]]],[11,"partial_cmp","zircon_object::object","",48,[[["rights",3]],[["ordering",4],["option",4]]]],[11,"lt","","",48,[[["rights",3]]]],[11,"le","","",48,[[["rights",3]]]],[11,"gt","","",48,[[["rights",3]]]],[11,"ge","","",48,[[["rights",3]]]],[11,"partial_cmp","","",49,[[["signal",3]],[["ordering",4],["option",4]]]],[11,"lt","","",49,[[["signal",3]]]],[11,"le","","",49,[[["signal",3]]]],[11,"gt","","",49,[[["signal",3]]]],[11,"ge","","",49,[[["signal",3]]]],[11,"partial_cmp","zircon_object::signal","",63,[[["portoptions",3]],[["ordering",4],["option",4]]]],[11,"lt","","",63,[[["portoptions",3]]]],[11,"le","","",63,[[["portoptions",3]]]],[11,"gt","","",63,[[["portoptions",3]]]],[11,"ge","","",63,[[["portoptions",3]]]],[11,"partial_cmp","zircon_object::vm","",93,[[["vmarflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",93,[[["vmarflags",3]]]],[11,"le","","",93,[[["vmarflags",3]]]],[11,"gt","","",93,[[["vmarflags",3]]]],[11,"ge","","",93,[[["vmarflags",3]]]],[11,"partial_cmp","","",96,[[["vmoinfoflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",96,[[["vmoinfoflags",3]]]],[11,"le","","",96,[[["vmoinfoflags",3]]]],[11,"gt","","",96,[[["vmoinfoflags",3]]]],[11,"ge","","",96,[[["vmoinfoflags",3]]]],[11,"sub_assign","zircon_object::dev","Disables all flags enabled in the set.",26,[[["interruptflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",27,[[["interruptoptions",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",29,[[["iommuperms",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",36,[[["resourceflags",3]]]],[11,"sub_assign","zircon_object::ipc","Disables all flags enabled in the set.",43,[[["socketflags",3]]]],[11,"sub_assign","zircon_object::object","Disables all flags enabled in the set.",48,[[["rights",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",49,[[["signal",3]]]],[11,"sub_assign","zircon_object::signal","Disables all flags enabled in the set.",63,[[["portoptions",3]]]],[11,"sub_assign","zircon_object::vm","Disables all flags enabled in the set.",93,[[["vmarflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",96,[[["vmoinfoflags",3]]]],[11,"not","zircon_object::dev","Returns the complement of this set of flags.",26,[[],["interruptflags",3]]],[11,"not","","Returns the complement of this set of flags.",27,[[],["interruptoptions",3]]],[11,"not","","Returns the complement of this set of flags.",29,[[],["iommuperms",3]]],[11,"not","","Returns the complement of this set of flags.",36,[[],["resourceflags",3]]],[11,"not","zircon_object::ipc","Returns the complement of this set of flags.",43,[[],["socketflags",3]]],[11,"not","zircon_object::object","Returns the complement of this set of flags.",48,[[],["rights",3]]],[11,"not","","Returns the complement of this set of flags.",49,[[],["signal",3]]],[11,"not","zircon_object::signal","Returns the complement of this set of flags.",63,[[],["portoptions",3]]],[11,"not","zircon_object::vm","Returns the complement of this set of flags.",93,[[],["vmarflags",3]]],[11,"not","","Returns the complement of this set of flags.",96,[[],["vmoinfoflags",3]]],[11,"bitand","zircon_object::dev","Returns the intersection between the two sets of flags.",26,[[["interruptflags",3]],["interruptflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",27,[[["interruptoptions",3]],["interruptoptions",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",29,[[["iommuperms",3]],["iommuperms",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",36,[[["resourceflags",3]],["resourceflags",3]]],[11,"bitand","zircon_object::ipc","Returns the intersection between the two sets of flags.",43,[[["socketflags",3]],["socketflags",3]]],[11,"bitand","zircon_object::object","Returns the intersection between the two sets of flags.",48,[[["rights",3]],["rights",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",49,[[["signal",3]],["signal",3]]],[11,"bitand","zircon_object::signal","Returns the intersection between the two sets of flags.",63,[[["portoptions",3]],["portoptions",3]]],[11,"bitand","zircon_object::vm","Returns the intersection between the two sets of flags.",93,[[["vmarflags",3]],["vmarflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",96,[[["vmoinfoflags",3]],["vmoinfoflags",3]]],[11,"bitor","zircon_object::dev","Returns the union of the two sets of flags.",26,[[["interruptflags",3]],["interruptflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",27,[[["interruptoptions",3]],["interruptoptions",3]]],[11,"bitor","","Returns the union of the two sets of flags.",29,[[["iommuperms",3]],["iommuperms",3]]],[11,"bitor","","Returns the union of the two sets of flags.",36,[[["resourceflags",3]],["resourceflags",3]]],[11,"bitor","zircon_object::ipc","Returns the union of the two sets of flags.",43,[[["socketflags",3]],["socketflags",3]]],[11,"bitor","zircon_object::object","Returns the union of the two sets of flags.",48,[[["rights",3]],["rights",3]]],[11,"bitor","","Returns the union of the two sets of flags.",49,[[["signal",3]],["signal",3]]],[11,"bitor","zircon_object::signal","Returns the union of the two sets of flags.",63,[[["portoptions",3]],["portoptions",3]]],[11,"bitor","zircon_object::vm","Returns the union of the two sets of flags.",93,[[["vmarflags",3]],["vmarflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",96,[[["vmoinfoflags",3]],["vmoinfoflags",3]]],[11,"bitxor","zircon_object::dev","Returns the left flags, but with all the right flags…",26,[[["interruptflags",3]],["interruptflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",27,[[["interruptoptions",3]],["interruptoptions",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",29,[[["iommuperms",3]],["iommuperms",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",36,[[["resourceflags",3]],["resourceflags",3]]],[11,"bitxor","zircon_object::ipc","Returns the left flags, but with all the right flags…",43,[[["socketflags",3]],["socketflags",3]]],[11,"bitxor","zircon_object::object","Returns the left flags, but with all the right flags…",48,[[["rights",3]],["rights",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",49,[[["signal",3]],["signal",3]]],[11,"bitxor","zircon_object::signal","Returns the left flags, but with all the right flags…",63,[[["portoptions",3]],["portoptions",3]]],[11,"bitxor","zircon_object::vm","Returns the left flags, but with all the right flags…",93,[[["vmarflags",3]],["vmarflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",96,[[["vmoinfoflags",3]],["vmoinfoflags",3]]],[11,"bitand_assign","zircon_object::dev","Disables all flags disabled in the set.",26,[[["interruptflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",27,[[["interruptoptions",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",29,[[["iommuperms",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",36,[[["resourceflags",3]]]],[11,"bitand_assign","zircon_object::ipc","Disables all flags disabled in the set.",43,[[["socketflags",3]]]],[11,"bitand_assign","zircon_object::object","Disables all flags disabled in the set.",48,[[["rights",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",49,[[["signal",3]]]],[11,"bitand_assign","zircon_object::signal","Disables all flags disabled in the set.",63,[[["portoptions",3]]]],[11,"bitand_assign","zircon_object::vm","Disables all flags disabled in the set.",93,[[["vmarflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",96,[[["vmoinfoflags",3]]]],[11,"bitor_assign","zircon_object::dev","Adds the set of flags.",26,[[["interruptflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",27,[[["interruptoptions",3]]]],[11,"bitor_assign","","Adds the set of flags.",29,[[["iommuperms",3]]]],[11,"bitor_assign","","Adds the set of flags.",36,[[["resourceflags",3]]]],[11,"bitor_assign","zircon_object::ipc","Adds the set of flags.",43,[[["socketflags",3]]]],[11,"bitor_assign","zircon_object::object","Adds the set of flags.",48,[[["rights",3]]]],[11,"bitor_assign","","Adds the set of flags.",49,[[["signal",3]]]],[11,"bitor_assign","zircon_object::signal","Adds the set of flags.",63,[[["portoptions",3]]]],[11,"bitor_assign","zircon_object::vm","Adds the set of flags.",93,[[["vmarflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",96,[[["vmoinfoflags",3]]]],[11,"bitxor_assign","zircon_object::dev","Toggles the set of flags.",26,[[["interruptflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",27,[[["interruptoptions",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",29,[[["iommuperms",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",36,[[["resourceflags",3]]]],[11,"bitxor_assign","zircon_object::ipc","Toggles the set of flags.",43,[[["socketflags",3]]]],[11,"bitxor_assign","zircon_object::object","Toggles the set of flags.",48,[[["rights",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",49,[[["signal",3]]]],[11,"bitxor_assign","zircon_object::signal","Toggles the set of flags.",63,[[["portoptions",3]]]],[11,"bitxor_assign","zircon_object::vm","Toggles the set of flags.",93,[[["vmarflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",96,[[["vmoinfoflags",3]]]],[11,"drop","zircon_object::dev","",25,[[]]],[11,"drop","","",35,[[]]],[11,"drop","zircon_object::ipc","",41,[[]]],[11,"drop","","",42,[[]]],[11,"drop","","",44,[[]]],[11,"drop","zircon_object::signal","",60,[[]]],[11,"drop","zircon_object::task","",78,[[]]],[11,"drop","zircon_object::vm","",111,[[]]],[11,"drop","","",95,[[]]],[11,"hash","zircon_object::dev","",26,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",36,[[]]],[11,"hash","zircon_object::ipc","",43,[[]]],[11,"hash","zircon_object::object","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","zircon_object::signal","",63,[[]]],[11,"hash","zircon_object::vm","",93,[[]]],[11,"hash","","",96,[[]]],[11,"next","zircon_object::util::block_range","",83,[[],["option",4]]],[11,"extend","zircon_object::dev","",26,[[["intoiterator",8]]]],[11,"extend","","",27,[[["intoiterator",8]]]],[11,"extend","","",29,[[["intoiterator",8]]]],[11,"extend","","",36,[[["intoiterator",8]]]],[11,"extend","zircon_object::ipc","",43,[[["intoiterator",8]]]],[11,"extend","zircon_object::object","",48,[[["intoiterator",8]]]],[11,"extend","","",49,[[["intoiterator",8]]]],[11,"extend","zircon_object::signal","",63,[[["intoiterator",8]]]],[11,"extend","zircon_object::vm","",93,[[["intoiterator",8]]]],[11,"extend","","",96,[[["intoiterator",8]]]],[11,"from_iter","zircon_object::dev","",26,[[["intoiterator",8]],["interruptflags",3]]],[11,"from_iter","","",27,[[["intoiterator",8]],["interruptoptions",3]]],[11,"from_iter","","",29,[[["intoiterator",8]],["iommuperms",3]]],[11,"from_iter","","",36,[[["intoiterator",8]],["resourceflags",3]]],[11,"from_iter","zircon_object::ipc","",43,[[["intoiterator",8]],["socketflags",3]]],[11,"from_iter","zircon_object::object","",48,[[["intoiterator",8]],["rights",3]]],[11,"from_iter","","",49,[[["intoiterator",8]],["signal",3]]],[11,"from_iter","zircon_object::signal","",63,[[["intoiterator",8]],["portoptions",3]]],[11,"from_iter","zircon_object::vm","",93,[[["intoiterator",8]],["vmarflags",3]]],[11,"from_iter","","",96,[[["intoiterator",8]],["vmoinfoflags",3]]],[11,"try_from","zircon_object::dev","",19,[[],["result",4]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_from","zircon_object::object","",48,[[],["zxresult",6]]],[11,"try_from","zircon_object::task","",72,[[],["result",4]]],[11,"fmt","zircon_object::dev","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::ipc","",43,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::signal","",63,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::ipc","",43,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::signal","",63,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::ipc","",43,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::signal","",63,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::dev","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::ipc","",43,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::signal","",63,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"clone","zircon_object::dev","",26,[[],["interruptflags",3]]],[11,"clone","","",27,[[],["interruptoptions",3]]],[11,"clone","","",29,[[],["iommuperms",3]]],[11,"clone","","",2,[[],["pciedeviceinfo",3]]],[11,"clone","","",19,[[],["pciedevicetype",4]]],[11,"clone","","",6,[[],["pciebarinfo",3]]],[11,"clone","","",20,[[],["pcieirqmode",4]]],[11,"clone","","",101,[[],["pciirqswizzlelut",3]]],[11,"clone","","",23,[[],["resourcekind",4]]],[11,"clone","","",36,[[],["resourceflags",3]]],[11,"clone","zircon_object","",0,[[],["zxerror",4]]],[11,"clone","zircon_object::ipc","",43,[[],["socketflags",3]]],[11,"clone","zircon_object::object","",45,[[],["handle",3]]],[11,"clone","","",48,[[],["rights",3]]],[11,"clone","","",49,[[],["signal",3]]],[11,"clone","zircon_object::signal","",56,[[],["packettype",4]]],[11,"clone","","",52,[[],["packetsignal",3]]],[11,"clone","","",53,[[],["packetexception",3]]],[11,"clone","","",54,[[],["packetinterrupt",3]]],[11,"clone","","",55,[[],["portpacketrepr",3]]],[11,"clone","","",57,[[],["payloadrepr",4]]],[11,"clone","","",63,[[],["portoptions",3]]],[11,"clone","zircon_object::task","",75,[[],["jobpolicy",3]]],[11,"clone","","",67,[[],["setpolicyoptions",4]]],[11,"clone","","",65,[[],["basicpolicy",3]]],[11,"clone","","",68,[[],["policycondition",4]]],[11,"clone","","",69,[[],["policyaction",4]]],[11,"clone","","",107,[[],["timerslackpolicy",3]]],[11,"clone","","",70,[[],["timerslackdefaultmode",4]]],[11,"clone","","",71,[[],["status",4]]],[11,"clone","","",72,[[],["threadstatekind",4]]],[11,"clone","","",73,[[],["threadstate",4]]],[11,"clone","zircon_object::vm","",93,[[],["vmarflags",3]]],[11,"clone","","",96,[[],["vmoinfoflags",3]]],[11,"clone","","",92,[[],["rangechangeop",4]]],[11,"default","zircon_object::dev","",98,[[],["btiinfo",3]]],[11,"default","","",31,[[],["mmiopcieaddressprovider",3]]],[11,"default","","",99,[[],["piopcieaddressprovider",3]]],[11,"default","","",6,[[],["pciebarinfo",3]]],[11,"default","","",7,[[],["sharedlegacyirqhandler",3]]],[11,"default","","",20,[[]]],[11,"default","","",8,[[],["pcielegacyirqstate",3]]],[11,"default","","",9,[[]]],[11,"default","","",32,[[],["pcieirqhandlerstate",3]]],[11,"default","","",11,[[]]],[11,"default","","",13,[[],["pcieirqmodecaps",3]]],[11,"default","","",102,[[],["resourceinfo",3]]],[11,"default","zircon_object::ipc","",40,[[],["messagepacket",3]]],[11,"default","","",43,[[],["socketflags",3]]],[11,"default","","",103,[[],["socketinfo",3]]],[11,"default","zircon_object::object","",104,[[],["handlebasicinfo",3]]],[11,"default","","",46,[[],["handleinfo",3]]],[11,"default","","",48,[[],["rights",3]]],[11,"default","","",49,[[],["signal",3]]],[11,"default","","",47,[[]]],[11,"default","zircon_object::task","",106,[[],["jobinfo",3]]],[11,"default","","",75,[[],["jobpolicy",3]]],[11,"default","","",76,[[]]],[11,"default","","",71,[[]]],[11,"default","","",66,[[],["processinfo",3]]],[11,"default","","",73,[[]]],[11,"default","zircon_object::vm","",112,[[],["taskstatsinfo",3]]],[11,"default","","",91,[[],["vmoinfo",3]]],[11,"default","","",96,[[],["vmoinfoflags",3]]],[11,"initialize","","",113,[[]]],[11,"allocate_bars","zircon_object::dev","",39,[[],["zxresult",6]]],[11,"disable","","",39,[[]]],[11,"pf_mmio_regions","","",39,[[],[["mutex",3],["arc",3]]]],[11,"mmio_lo_regions","","",39,[[],[["mutex",3],["arc",3]]]],[11,"mmio_hi_regions","","",39,[[],[["mutex",3],["arc",3]]]],[11,"pio_regions","","",39,[[],[["mutex",3],["arc",3]]]],[11,"enable_bus_master","","",39,[[],["zxresult",6]]],[11,"enable_irq","","",39,[[]]],[11,"disable_irq","","",39,[[]]],[11,"register_irq_handle","","",39,[[["fn",8],["box",3]]]],[11,"unregister_irq_handle","","",39,[[]]],[18,"CACHE_1","zircon_object::vm","",109,null],[18,"CACHE_2","","",109,null],[18,"READ","","",109,null],[18,"WRITE","","",109,null],[18,"EXECUTE","","",109,null],[18,"USER","","",109,null],[11,"empty","","Returns an empty set of flags",109,[[],["mmuflags",3]]],[11,"all","","Returns the set containing all flags.",109,[[],["mmuflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",109,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",109,[[],[["mmuflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",109,[[],["mmuflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",109,[[],["mmuflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",109,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",109,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",109,[[["mmuflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",109,[[["mmuflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",109,[[["mmuflags",3]]]],[11,"remove","","Removes the specified flags in-place.",109,[[["mmuflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",109,[[["mmuflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",109,[[["mmuflags",3]]]],[11,"unmap_from","","Unmap physical memory from `page_table`.",97,[[["pagetable",3],["virtaddr",6]]]],[11,"pin","","",97,[[],["zxresult",6]]],[11,"unpin","","",97,[[],["zxresult",6]]],[11,"is_contiguous","","",97,[[]]],[11,"is_paged","","",97,[[]]]],"p":[[4,"ZxError"],[3,"DebugLog"],[3,"PcieDeviceInfo"],[3,"PcieDeviceKObject"],[3,"PcieUpstream"],[3,"PcieUpstreamInner"],[3,"PcieBarInfo"],[3,"SharedLegacyIrqHandler"],[3,"PcieLegacyIrqState"],[3,"PcieIrqState"],[3,"PcieDevice"],[3,"PcieDeviceInner"],[3,"PciRoot"],[3,"PcieIrqModeCaps"],[3,"PciInitArgsAddrWindows"],[3,"PciInitArgsIrqs"],[3,"PciInitArgsHeader"],[3,"PciEcamRegion"],[3,"MappedEcamRegion"],[4,"PcieDeviceType"],[4,"PcieIrqMode"],[4,"PciNodeType"],[4,"PciAddrSpace"],[4,"ResourceKind"],[3,"BusTransactionInitiator"],[3,"Interrupt"],[3,"InterruptFlags"],[3,"InterruptOptions"],[3,"Iommu"],[3,"IommuPerms"],[3,"PCIeBusDriver"],[3,"MmioPcieAddressProvider"],[3,"PcieIrqHandlerState"],[3,"PciDeviceNode"],[3,"PciBridge"],[3,"PinnedMemoryToken"],[3,"ResourceFlags"],[3,"Resource"],[8,"PCIeAddressProvider"],[8,"IPciNode"],[3,"MessagePacket"],[3,"Channel"],[3,"Fifo"],[3,"SocketFlags"],[3,"Socket"],[3,"Handle"],[3,"HandleInfo"],[3,"KObjectBase"],[3,"Rights"],[3,"Signal"],[8,"KernelObject"],[3,"DummyObject"],[3,"PacketSignal"],[3,"PacketException"],[3,"PacketInterrupt"],[3,"PortPacketRepr"],[4,"PacketType"],[4,"PayloadRepr"],[4,"Slack"],[3,"Event"],[3,"EventPair"],[3,"Futex"],[3,"Port"],[3,"PortOptions"],[3,"Timer"],[3,"BasicPolicy"],[3,"ProcessInfo"],[4,"SetPolicyOptions"],[4,"PolicyCondition"],[4,"PolicyAction"],[4,"TimerSlackDefaultMode"],[4,"Status"],[4,"ThreadStateKind"],[4,"ThreadState"],[3,"Job"],[3,"JobPolicy"],[3,"TimerSlack"],[3,"Process"],[3,"SuspendToken"],[3,"Thread"],[8,"ContextExt"],[8,"IntoResult"],[8,"Task"],[3,"BlockIter"],[3,"BlockRange"],[8,"VmarExt"],[8,"ElfExt"],[3,"KCounterDescriptor"],[3,"KCounterDescriptorArray"],[3,"KCounter"],[4,"CachePolicy"],[3,"VmoInfo"],[4,"RangeChangeOp"],[3,"VmarFlags"],[3,"VmAddressRegion"],[3,"VmObject"],[3,"VmoInfoFlags"],[8,"VMObjectTrait"],[3,"BtiInfo"],[3,"PioPcieAddressProvider"],[3,"PcieIrqHandle"],[3,"PciIrqSwizzleLut"],[3,"ResourceInfo"],[3,"SocketInfo"],[3,"HandleBasicInfo"],[3,"PortPacket"],[3,"JobInfo"],[3,"TimerSlackPolicy"],[3,"ThreadInfo"],[3,"MMUFlags"],[3,"VmarInfo"],[3,"VmMapping"],[3,"TaskStatsInfo"],[3,"KERNEL_ASPACE"],[6,"ZxResult"]]};
searchIndex["zircon_syscall"] = {"doc":"Zircon syscall implementations","i":[[3,"Syscall","zircon_syscall","",null,null],[12,"regs","","",0,null],[12,"thread","","",0,null],[12,"spawn_fn","","",0,null],[12,"exit","","",0,null],[11,"sys_channel_read","","Read a message from a channel.",0,[[["useroutptr",6],["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_channel_write","","",0,[[["handlevalue",6],["userinptr",6],["userinptr",6]],["zxresult",6]]],[11,"sys_channel_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_channel_call_noretry","","",0,[[["userinptr",6],["useroutptr",6],["deadline",3],["handlevalue",6],["channelcallargs",3]]]],[11,"sys_channel_call_finish","","",0,[[["channelcallargs",3],["useroutptr",6],["deadline",3],["userinptr",6]],["zxresult",6]]],[11,"sys_channel_write_etc","","",0,[[["handledisposition",3],["handlevalue",6],["userinptr",6],["userinoutptr",6]],["zxresult",6]]],[11,"sys_cprng_draw_once","","",0,[[],["zxresult",6]]],[11,"sys_iommu_create","","",0,[[["handlevalue",6],["userinptr",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_bti_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_bti_pin","","",0,[[["useroutptr",6],["useroutptr",6],["handlevalue",6],["devvaddr",6]],["zxresult",6]]],[11,"sys_pmt_unpin","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_bti_release_quarantine","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_pc_firmware_tables","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_interrupt_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_interrupt_bind","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_interrupt_trigger","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_interrupt_ack","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_interrupt_destroy","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_interrupt_wait","","",0,[[["handlevalue",6],["useroutptr",6]]]],[11,"sys_debug_write","","",0,[[["userinptr",6]],["zxresult",6]]],[11,"sys_debug_read","","",0,[[["handlevalue",6],["useroutptr",6],["useroutptr",6]]]],[11,"sys_debuglog_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_debuglog_write","","",0,[[["handlevalue",6],["userinptr",6]],["zxresult",6]]],[11,"sys_create_exception_channel","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_fifo_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_fifo_write","","",0,[[["handlevalue",6],["userinptr",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_fifo_read","","",0,[[["handlevalue",6],["useroutptr",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_futex_wait","","",0,[[["atomici32",3],["userinptr",6],["deadline",3],["handlevalue",6]]]],[11,"sys_futex_requeue","","",0,[[["handlevalue",6],["atomici32",3],["userinptr",6]],["zxresult",6]]],[11,"sys_futex_wake","","",0,[[["atomici32",3],["userinptr",6]],["zxresult",6]]],[11,"sys_futex_wake_single_owner","","",0,[[["atomici32",3],["userinptr",6]],["zxresult",6]]],[11,"sys_handle_duplicate","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_handle_close","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_handle_close_many","","",0,[[["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_handle_replace","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_object_get_property","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_object_set_property","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_object_wait_one","","",0,[[["deadline",3],["useroutptr",6],["handlevalue",6],["signal",3]]]],[11,"sys_object_get_info","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_object_signal_peer","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_object_wait_async","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_object_signal","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_object_wait_many","","",0,[[["userwaititem",3],["userinoutptr",6],["deadline",3]]]],[11,"sys_object_get_child","","",0,[[["handlevalue",6],["koid",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_pci_add_subtract_io_range","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_cfg_pio_rw","","",0,[[["handlevalue",6],["userinoutptr",6]],["zxresult",6]]],[11,"sys_pci_init","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_map_interrupt","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_pci_get_nth_device","","",0,[[["useroutptr",6],["pciedeviceinfo",3],["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_pci_get_bar","","",0,[[["useroutptr",6],["pcibar",3],["useroutptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_enable_bus_master","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_query_irq_mode","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_pci_set_irq_mode","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_pci_config_read","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_pci_config_write","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_port_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_port_wait","","",0,[[["useroutptr",6],["deadline",3],["handlevalue",6],["portpacket",3]]]],[11,"sys_port_queue","","",0,[[["handlevalue",6],["portpacket",3],["userinptr",6]],["zxresult",6]]],[11,"sys_resource_create","","",0,[[["handlevalue",6],["userinptr",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_timer_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_event_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_eventpair_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_timer_set","","",0,[[["handlevalue",6],["deadline",3]],["zxresult",6]]],[11,"sys_timer_cancel","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_socket_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_socket_write","","",0,[[["handlevalue",6],["userinptr",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_socket_read","","",0,[[["handlevalue",6],["useroutptr",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_socket_shutdown","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_system_get_event","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_process_create","","",0,[[["useroutptr",6],["handlevalue",6],["userinptr",6]],["zxresult",6]]],[11,"sys_process_exit","","",0,[[],["zxresult",6]]],[11,"sys_thread_create","","",0,[[["handlevalue",6],["userinptr",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_process_start","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_thread_write_state","","",0,[[["handlevalue",6],["userinptr",6]],["zxresult",6]]],[11,"sys_job_set_critical","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_thread_start","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_thread_exit","","",0,[[],["zxresult",6]]],[11,"sys_task_suspend_token","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_job_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_job_set_policy","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_clock_get","","",0,[[["useroutptr",6]],["zxresult",6]]],[11,"sys_clock_read","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_clock_adjust","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_nanosleep","","",0,[[["deadline",3]]]],[11,"sys_vmar_allocate","","",0,[[["handlevalue",6],["useroutptr",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_vmar_map","","",0,[[["handlevalue",6],["virtaddr",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_vmar_destroy","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_vmar_protect","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_vmar_unmap","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_vmo_read","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_vmo_write","","",0,[[["handlevalue",6],["userinptr",6]],["zxresult",6]]],[11,"sys_vmo_replace_as_executable","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_vmo_get_size","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_vmo_create_child","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_vmo_create_physical","","",0,[[["handlevalue",6],["physaddr",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_vmo_create_contiguous","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_vmo_set_size","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_op_range","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_vmo_cache_policy","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"syscall","","",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",0,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",0,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]]],"p":[[3,"Syscall"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);
var searchIndex={};
searchIndex["kernel_hal"] = {"doc":"Hardware Abstraction Layer","i":[[3,"GeneralRegs","kernel_hal","General registers",null,null],[12,"rax","","",0,null],[12,"rbx","","",0,null],[12,"rcx","","",0,null],[12,"rdx","","",0,null],[12,"rsi","","",0,null],[12,"rdi","","",0,null],[12,"rbp","","",0,null],[12,"rsp","","",0,null],[12,"r8","","",0,null],[12,"r9","","",0,null],[12,"r10","","",0,null],[12,"r11","","",0,null],[12,"r12","","",0,null],[12,"r13","","",0,null],[12,"r14","","",0,null],[12,"r15","","",0,null],[12,"rip","","",0,null],[12,"rflags","","",0,null],[12,"fsbase","","",0,null],[12,"gsbase","","",0,null],[3,"UserContext","","User space context",null,null],[12,"vector","","",1,null],[12,"general","","",1,null],[12,"trap_num","","",1,null],[12,"error_code","","",1,null],[3,"VectorRegs","","Vector registers",null,null],[12,"fcw","","",2,null],[12,"fsw","","",2,null],[12,"ftw","","",2,null],[12,"_pad0","","",2,null],[12,"fop","","",2,null],[12,"fip","","",2,null],[12,"fcs","","",2,null],[12,"_pad1","","",2,null],[12,"fdp","","",2,null],[12,"fds","","",2,null],[12,"_pad2","","",2,null],[12,"mxcsr","","",2,null],[12,"mxcsr_mask","","",2,null],[12,"mm","","",2,null],[12,"xmm","","",2,null],[12,"reserved","","",2,null],[12,"available","","",2,null],[3,"Thread","","",null,null],[3,"PageTable","","Page Table",null,null],[3,"PhysFrame","","",null,null],[3,"SleepFuture","","",null,null],[5,"context_run","","",null,[[["usercontext",3]]]],[5,"pmem_read","","Read physical memory from `paddr` to `buf`.",null,[[["physaddr",6]]]],[5,"pmem_write","","Write physical memory to `paddr` from `buf`.",null,[[["physaddr",6]]]],[5,"frame_copy","","Copy content of `src` frame to `target` frame",null,[[["physaddr",6]]]],[5,"serial_write","","Output a char to console.",null,[[]]],[5,"timer_now","","Get current time.",null,[[],["duration",3]]],[5,"timer_set","","Set a new timer. After `deadline`, the `callback` will be…",null,[[["box",3],["duration",3],["fnonce",8]]]],[5,"timer_tick","","check timers, call when timer interrupt happend",null,[[]]],[5,"irq_ack","","",null,[[]]],[5,"vdso_constants","","",null,[[],["vdsoconstants",3]]],[5,"yield_now","","Yields execution back to the async runtime.",null,[[]]],[5,"sleep_until","","Sleeps until the specified of time.",null,[[["duration",3]]]],[0,"defs","","",null,null],[3,"MMUFlags","kernel_hal::defs","",null,null],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[17,"PAGE_SIZE","","",null,null],[18,"READ","","",3,null],[18,"WRITE","","",3,null],[18,"EXECUTE","","",3,null],[18,"USER","","",3,null],[11,"empty","","Returns an empty set of flags",3,[[],["mmuflags",3]]],[11,"all","","Returns the set containing all flags.",3,[[],["mmuflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",3,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",3,[[],[["option",4],["mmuflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",3,[[],["mmuflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",3,[[],["mmuflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",3,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",3,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",3,[[["mmuflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",3,[[["mmuflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",3,[[["mmuflags",3]]]],[11,"remove","","Removes the specified flags in-place.",3,[[["mmuflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",3,[[["mmuflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",3,[[["mmuflags",3]]]],[11,"spawn","kernel_hal","Spawn a new thread.",4,[[["box",3],["pin",3]]]],[11,"new","","Create a new `PageTable`.",5,[[]]],[11,"map","","Map the page of `vaddr` to the frame of `paddr` with…",5,[[["physaddr",6],["virtaddr",6],["mmuflags",3]],["result",4]]],[11,"unmap","","Unmap the page of `vaddr`.",5,[[["virtaddr",6]],["result",4]]],[11,"protect","","Change the `flags` of the page of `vaddr`.",5,[[["virtaddr",6],["mmuflags",3]],["result",4]]],[11,"query","","Query the physical address which the page of `vaddr` maps…",5,[[["virtaddr",6]],[["result",4],["physaddr",6]]]],[11,"table_phys","","Get the physical address of root page table.",5,[[],["physaddr",6]]],[11,"map_many","","",5,[[["virtaddr",6],["mmuflags",3]],["result",4]]],[11,"map_cont","","",5,[[["physaddr",6],["virtaddr",6],["mmuflags",3]],["result",4]]],[11,"unmap_cont","","",5,[[["virtaddr",6]],["result",4]]],[11,"alloc","","",6,[[],["option",4]]],[11,"addr","","",6,[[],["physaddr",6]]],[0,"user","","",null,null],[3,"UserPtr","kernel_hal::user","",null,null],[4,"In","","",null,null],[4,"Out","","",null,null],[4,"InOut","","",null,null],[4,"Error","","The error type which is returned from user pointer.",null,null],[13,"InvalidUtf8","","",7,null],[13,"InvalidPointer","","",7,null],[6,"UserInPtr","","",null,null],[6,"UserOutPtr","","",null,null],[6,"UserInOutPtr","","",null,null],[8,"Policy","","",null,null],[8,"Read","","",null,null],[8,"Write","","",null,null],[11,"is_null","","",8,[[]]],[11,"add","","",8,[[]]],[11,"as_ptr","","",8,[[]]],[11,"check","","",8,[[],[["result",4],["error",4]]]],[11,"as_ref","","",8,[[],[["error",4],["result",4]]]],[11,"read","","",8,[[],[["error",4],["result",4]]]],[11,"read_if_not_null","","",8,[[],[["result",4],["option",4],["error",4]]]],[11,"read_array","","",8,[[],[["result",4],["vec",3],["error",4]]]],[11,"read_string","","",8,[[],[["error",4],["result",4],["string",3]]]],[11,"read_cstring","","",8,[[],[["error",4],["result",4],["string",3]]]],[11,"read_cstring_array","","",8,[[],[["vec",3],["error",4],["result",4]]]],[11,"write","","",8,[[],[["result",4],["error",4]]]],[11,"write_if_not_null","","",8,[[],[["result",4],["error",4]]]],[11,"write_array","","",8,[[],[["result",4],["error",4]]]],[11,"write_cstring","","",8,[[],[["result",4],["error",4]]]],[0,"vdso","kernel_hal","",null,null],[3,"VdsoConstants","kernel_hal::vdso","This struct contains constants that are initialized by the…",null,null],[12,"max_num_cpus","","Maximum number of CPUs that might be online during the…",9,null],[12,"features","","Bit map indicating features.",9,null],[12,"dcache_line_size","","Number of bytes in a data cache line.",9,null],[12,"icache_line_size","","Number of bytes in an instruction cache line.",9,null],[12,"ticks_per_second","","Conversion factor for zx_ticks_get return values to seconds.",9,null],[12,"ticks_to_mono_numerator","","Ratio which relates ticks (zx_ticks_get) to clock monotonic.",9,null],[12,"ticks_to_mono_denominator","","",9,null],[12,"physmem","","Total amount of physical memory in the system, in bytes.",9,null],[12,"buildid","","A build id of the system. Currently a non-null terminated…",9,null],[3,"Features","","Bit map indicating features.",null,null],[12,"cpu","","",10,null],[12,"hw_breakpoint_count","","Total amount of debug registers available in the system.",10,null],[12,"hw_watchpoint_count","","",10,null],[3,"BuildID","","",null,null],[11,"from","kernel_hal","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","kernel_hal::defs","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","kernel_hal::user","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","kernel_hal::vdso","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"fmt","kernel_hal","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",0,[[],["generalregs",3]]],[11,"clone","","",1,[[],["usercontext",3]]],[11,"clone","","",2,[[],["vectorregs",3]]],[11,"default","","",2,[[],["vectorregs",3]]],[11,"default","","",1,[[],["usercontext",3]]],[11,"default","","",0,[[],["generalregs",3]]],[11,"from","kernel_hal::user","",8,[[]]],[11,"fmt","kernel_hal::defs","",3,[[["formatter",3]],["result",6]]],[11,"fmt","kernel_hal::user","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","kernel_hal::vdso","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],[["result",4],["error",3]]]],[11,"sub","kernel_hal::defs","Returns the set difference of the two sets of flags.",3,[[["mmuflags",3]],["mmuflags",3]]],[11,"eq","","",3,[[["mmuflags",3]]]],[11,"ne","","",3,[[["mmuflags",3]]]],[11,"eq","kernel_hal::user","",7,[[["error",4]]]],[11,"cmp","kernel_hal::defs","",3,[[["mmuflags",3]],["ordering",4]]],[11,"partial_cmp","","",3,[[["mmuflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["mmuflags",3]]]],[11,"le","","",3,[[["mmuflags",3]]]],[11,"gt","","",3,[[["mmuflags",3]]]],[11,"ge","","",3,[[["mmuflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",3,[[["mmuflags",3]]]],[11,"not","","Returns the complement of this set of flags.",3,[[],["mmuflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",3,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",3,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",3,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",3,[[["mmuflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",3,[[["mmuflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",3,[[["mmuflags",3]]]],[11,"drop","kernel_hal","",6,[[]]],[11,"hash","kernel_hal::defs","",3,[[]]],[11,"extend","","",3,[[["intoiterator",8]]]],[11,"from_iter","","",3,[[["intoiterator",8]],["mmuflags",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"clone","","",3,[[],["mmuflags",3]]],[11,"clone","kernel_hal::user","",7,[[],["error",4]]],[11,"default","kernel_hal::vdso","",15,[[]]],[11,"poll","kernel_hal","",11,[[["context",3],["pin",3]],["poll",4]]],[11,"run","","Go to user space with the context, and come back when a…",1,[[]]],[11,"set_lazy_restore","","Set lazy restore vector registers.",2,[[]]],[11,"lazy_restore","","Whether lazy restore vector registers.",2,[[]]]],"p":[[3,"GeneralRegs"],[3,"UserContext"],[3,"VectorRegs"],[3,"MMUFlags"],[3,"Thread"],[3,"PageTable"],[3,"PhysFrame"],[4,"Error"],[3,"UserPtr"],[3,"VdsoConstants"],[3,"Features"],[3,"SleepFuture"],[4,"In"],[4,"Out"],[4,"InOut"],[3,"BuildID"]]};
searchIndex["kernel_hal_bare"] = {"doc":"Zircon HAL implementation for bare metal environment.","i":[[3,"Thread","kernel_hal_bare","",null,null],[3,"Frame","","",null,null],[3,"NAIVE_TIMER","","",null,null],[5,"context_run","","",null,[[["usercontext",3]]]],[5,"map_kernel","","Map kernel for the new page table.",null,[[]]],[5,"pmem_read","","Read physical memory from `paddr` to `buf`.",null,[[["physaddr",6]]]],[5,"pmem_write","","Write physical memory to `paddr` from `buf`.",null,[[["physaddr",6]]]],[5,"frame_copy","","Copy content of `src` frame to `target` frame",null,[[["physaddr",6]]]],[5,"timer_set","","",null,[[["duration",3],["box",3],["fnonce",8]]]],[5,"timer_tick","","",null,[[]]],[5,"init","","Initialize the HAL.",null,[[]]],[0,"arch","","",null,null],[3,"PageTableImpl","kernel_hal_bare::arch","Page Table",null,null],[5,"set_page_table","","",null,[[]]],[5,"init_framebuffer","","Initialize console on framebuffer.",null,[[["physaddr",6]]]],[5,"putfmt","","",null,[[["arguments",3]]]],[5,"serial_write","","",null,[[]]],[5,"timer_now","","",null,[[],["duration",3]]],[5,"irq_ack","","",null,[[]]],[5,"init","","Initialize the HAL.",null,[[]]],[11,"new","","Create a new `PageTable`.",0,[[]]],[11,"map","","Map the page of `vaddr` to the frame of `paddr` with…",0,[[["mmuflags",3],["virtaddr",3],["physaddr",3]],["result",4]]],[11,"unmap","","Unmap the page of `vaddr`.",0,[[["virtaddr",3]],["result",4]]],[11,"protect","","Change the `flags` of the page of `vaddr`.",0,[[["mmuflags",3],["virtaddr",3]],["result",4]]],[11,"query","","Query the physical address which the page of `vaddr` maps…",0,[[["virtaddr",3]],[["result",4],["physaddr",3]]]],[11,"spawn","kernel_hal_bare","",1,[[["box",3],["pin",3]]]],[11,"alloc","","",2,[[],["option",4]]],[11,"dealloc","","",2,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","kernel_hal_bare::arch","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"deref","kernel_hal_bare","",3,[[],["mutex",3]]],[11,"initialize","","",3,[[]]]],"p":[[3,"PageTableImpl"],[3,"Thread"],[3,"Frame"],[3,"NAIVE_TIMER"]]};
searchIndex["kernel_hal_unix"] = {"doc":"","i":[[3,"MMUFlags","kernel_hal_unix","",null,null],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[17,"PAGE_SIZE","","",null,null],[0,"defs","","",null,null],[3,"MMUFlags","kernel_hal_unix::defs","",null,null],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[17,"PAGE_SIZE","","",null,null],[0,"user","kernel_hal_unix","",null,null],[3,"UserPtr","kernel_hal_unix::user","",null,null],[8,"Policy","","",null,null],[8,"Read","","",null,null],[8,"Write","","",null,null],[4,"In","","",null,null],[4,"Out","","",null,null],[4,"InOut","","",null,null],[6,"UserInPtr","","",null,null],[6,"UserOutPtr","","",null,null],[6,"UserInOutPtr","","",null,null],[4,"Error","","The error type which is returned from user pointer.",null,null],[13,"InvalidUtf8","","",0,null],[13,"InvalidPointer","","",0,null],[0,"vdso","kernel_hal_unix","",null,null],[3,"VdsoConstants","kernel_hal_unix::vdso","This struct contains constants that are initialized by the…",null,null],[12,"max_num_cpus","","Maximum number of CPUs that might be online during the…",1,null],[12,"features","","Bit map indicating features.",1,null],[12,"dcache_line_size","","Number of bytes in a data cache line.",1,null],[12,"icache_line_size","","Number of bytes in an instruction cache line.",1,null],[12,"ticks_per_second","","Conversion factor for zx_ticks_get return values to seconds.",1,null],[12,"ticks_to_mono_numerator","","Ratio which relates ticks (zx_ticks_get) to clock monotonic.",1,null],[12,"ticks_to_mono_denominator","","",1,null],[12,"physmem","","Total amount of physical memory in the system, in bytes.",1,null],[12,"buildid","","A build id of the system. Currently a non-null terminated…",1,null],[3,"Features","","Bit map indicating features.",null,null],[12,"cpu","","",2,null],[12,"hw_breakpoint_count","","Total amount of debug registers available in the system.",2,null],[12,"hw_watchpoint_count","","",2,null],[3,"BuildID","","",null,null],[3,"GeneralRegs","kernel_hal_unix","General registers",null,null],[12,"rax","","",3,null],[12,"rbx","","",3,null],[12,"rcx","","",3,null],[12,"rdx","","",3,null],[12,"rsi","","",3,null],[12,"rdi","","",3,null],[12,"rbp","","",3,null],[12,"rsp","","",3,null],[12,"r8","","",3,null],[12,"r9","","",3,null],[12,"r10","","",3,null],[12,"r11","","",3,null],[12,"r12","","",3,null],[12,"r13","","",3,null],[12,"r14","","",3,null],[12,"r15","","",3,null],[12,"rip","","",3,null],[12,"rflags","","",3,null],[12,"fsbase","","",3,null],[12,"gsbase","","",3,null],[3,"UserContext","","User space context",null,null],[12,"vector","","",4,null],[12,"general","","",4,null],[12,"trap_num","","",4,null],[12,"error_code","","",4,null],[3,"VectorRegs","","Vector registers",null,null],[12,"fcw","","",5,null],[12,"fsw","","",5,null],[12,"ftw","","",5,null],[12,"_pad0","","",5,null],[12,"fop","","",5,null],[12,"fip","","",5,null],[12,"fcs","","",5,null],[12,"_pad1","","",5,null],[12,"fdp","","",5,null],[12,"fds","","",5,null],[12,"_pad2","","",5,null],[12,"mxcsr","","",5,null],[12,"mxcsr_mask","","",5,null],[12,"mm","","",5,null],[12,"xmm","","",5,null],[12,"reserved","","",5,null],[12,"available","","",5,null],[5,"timer_now","","Get current time.",null,[[],["duration",3]]],[6,"PhysAddr","","",null,null],[6,"VirtAddr","","",null,null],[17,"PAGE_SIZE","","",null,null],[3,"Thread","","",null,null],[5,"context_run","","",null,[[["usercontext",3]]]],[3,"PageTable","","Page Table",null,null],[3,"PhysFrame","","",null,null],[5,"pmem_read","","Read physical memory from `paddr` to `buf`.",null,[[]]],[5,"pmem_write","","Write physical memory to `paddr` from `buf`.",null,[[]]],[5,"frame_copy","","Copy content of `src` frame to `target` frame",null,[[]]],[5,"serial_write","","Output a char to console.",null,[[]]],[5,"timer_set","","Set a new timer. After `deadline`, the `callback` will be…",null,[[["box",3],["fnonce",8],["duration",3]]]],[5,"timer_tick","","check timers, call when timer interrupt happend",null,[[]]],[5,"irq_ack","","",null,[[]]],[5,"vdso_constants","","",null,[[],["vdsoconstants",3]]],[5,"yield_now","","Yields execution back to the async runtime.",null,[[]]],[5,"sleep_until","","Sleeps until the specified of time.",null,[[["duration",3]]]],[3,"SleepFuture","","",null,null],[3,"MMUFlags","","",null,null],[3,"Thread","","",null,null],[3,"PageTable","","Page Table",null,null],[3,"PhysFrame","","",null,null],[5,"pmem_read","","Read physical memory from `paddr` to `buf`.",null,[[["physaddr",6]]]],[5,"pmem_write","","Write physical memory to `paddr` from `buf`.",null,[[["physaddr",6]]]],[5,"frame_copy","","Copy content of `src` frame to `target` frame",null,[[["physaddr",6]]]],[5,"serial_write","","Output a char to console.",null,[[]]],[5,"timer_now","","Get current time.",null,[[],["duration",3]]],[5,"timer_set","","Set a new timer.",null,[[["duration",3],["fnonce",8],["box",3]]]],[5,"vdso_constants","","",null,[[],["vdsoconstants",3]]],[5,"init","","Initialize the HAL.",null,[[]]],[5,"syscall_entry","","",null,null],[11,"spawn","","",6,[[["box",3],["pin",3]]]],[11,"new","","Create a new `PageTable`.",7,[[]]],[11,"map","","Map the page of `vaddr` to the frame of `paddr` with…",7,[[["virtaddr",6],["physaddr",6],["mmuflags",3]],["result",4]]],[11,"unmap","","Unmap the page of `vaddr`.",7,[[["virtaddr",6]],["result",4]]],[11,"protect","","Change the `flags` of the page of `vaddr`.",7,[[["virtaddr",6],["mmuflags",3]],["result",4]]],[11,"query","","Query the physical address which the page of `vaddr` maps…",7,[[["virtaddr",6]],[["physaddr",6],["result",4]]]],[11,"unmap_cont","","",7,[[["virtaddr",6]],["result",4]]],[11,"alloc","","",8,[[],["option",4]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","kernel_hal_unix::user","",10,[[]]],[11,"into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","kernel_hal_unix::vdso","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","kernel_hal_unix","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from_iter","","",9,[[],["mmuflags",3]]],[11,"from","kernel_hal_unix::user","",10,[[],["userptr",3]]],[11,"fmt","kernel_hal_unix","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",9,[[["mmuflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",9,[[["mmuflags",3]]]],[11,"le","","",9,[[["mmuflags",3]]]],[11,"gt","","",9,[[["mmuflags",3]]]],[11,"ge","","",9,[[["mmuflags",3]]]],[11,"fmt","","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"bitor_assign","","Adds the set of flags.",9,[[["mmuflags",3]]]],[11,"hash","","",9,[[]]],[11,"cmp","","",9,[[["mmuflags",3]],["ordering",4]]],[11,"fmt","kernel_hal_unix::vdso","",2,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",14,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix::user","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","kernel_hal_unix::user","",0,[[["formatter",3]],[["result",4],["error",3]]]],[11,"sub","kernel_hal_unix","Returns the set difference of the two sets of flags.",9,[[["mmuflags",3]],["mmuflags",3]]],[11,"drop","","",17,[[]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",9,[[["mmuflags",3]],["mmuflags",3]]],[11,"not","","Returns the complement of this set of flags.",9,[[],["mmuflags",3]]],[11,"fmt","","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",9,[[["mmuflags",3]]]],[11,"poll","","",18,[[["sleepfuture",3],["pin",3],["context",3]],["poll",4]]],[11,"bitand_assign","","Disables all flags disabled in the set.",9,[[["mmuflags",3]]]],[11,"extend","","",9,[[]]],[11,"default","kernel_hal_unix::vdso","",14,[[],["buildid",3]]],[11,"bitor","kernel_hal_unix","Returns the union of the two sets of flags.",9,[[["mmuflags",3]],["mmuflags",3]]],[11,"eq","","",9,[[["mmuflags",3]]]],[11,"ne","","",9,[[["mmuflags",3]]]],[11,"eq","kernel_hal_unix::user","",0,[[["error",4]]]],[11,"clone","kernel_hal_unix","",9,[[],["mmuflags",3]]],[11,"clone","kernel_hal_unix::user","",0,[[],["error",4]]],[11,"fmt","kernel_hal_unix","",9,[[["formatter",3]],[["result",4],["error",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",9,[[["mmuflags",3]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",9,[[["mmuflags",3]],["mmuflags",3]]],[11,"fmt","","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"clone","","",3,[[],["generalregs",3]]],[11,"clone","","",4,[[],["usercontext",3]]],[11,"clone","","",5,[[],["vectorregs",3]]],[11,"default","","",5,[[],["vectorregs",3]]],[11,"default","","",4,[[],["usercontext",3]]],[11,"default","","",3,[[],["generalregs",3]]],[11,"drop","","",8,[[]]],[11,"fmt","","",8,[[["formatter",3]],[["result",4],["error",3]]]],[18,"READ","","",9,null],[18,"WRITE","","",9,null],[18,"EXECUTE","","",9,null],[18,"USER","","",9,null],[11,"empty","","Returns an empty set of flags",9,[[],["mmuflags",3]]],[11,"all","","Returns the set containing all flags.",9,[[],["mmuflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",9,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",9,[[],[["option",4],["mmuflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",9,[[],["mmuflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",9,[[],["mmuflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",9,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",9,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",9,[[["mmuflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",9,[[["mmuflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",9,[[["mmuflags",3]]]],[11,"remove","","Removes the specified flags in-place.",9,[[["mmuflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",9,[[["mmuflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",9,[[["mmuflags",3]]]],[11,"is_null","kernel_hal_unix::user","",10,[[]]],[11,"add","","",10,[[],["userptr",3]]],[11,"as_ptr","","",10,[[]]],[11,"check","","",10,[[],[["error",4],["result",4]]]],[11,"as_ref","","",10,[[],[["error",4],["result",4]]]],[11,"read","","",10,[[],[["error",4],["result",4]]]],[11,"read_if_not_null","","",10,[[],[["result",4],["option",4],["error",4]]]],[11,"read_array","","",10,[[],[["error",4],["vec",3],["result",4]]]],[11,"read_string","","",10,[[],[["error",4],["string",3],["result",4]]]],[11,"read_cstring","","",10,[[],[["error",4],["string",3],["result",4]]]],[11,"read_cstring_array","","",10,[[],[["vec",3],["result",4],["error",4]]]],[11,"write","","",10,[[],[["error",4],["result",4]]]],[11,"write_if_not_null","","",10,[[],[["error",4],["result",4]]]],[11,"write_array","","",10,[[],[["error",4],["result",4]]]],[11,"write_cstring","","",10,[[],[["error",4],["result",4]]]],[11,"run","kernel_hal_unix","Go to user space with the context, and come back when a…",4,[[]]],[11,"set_lazy_restore","","Set lazy restore vector registers.",5,[[]]],[11,"lazy_restore","","Whether lazy restore vector registers.",5,[[]]],[11,"spawn","","Spawn a new thread.",15,[[["pin",3],["box",3]],["thread",3]]],[11,"new","","Create a new `PageTable`.",16,[[],["pagetable",3]]],[11,"map","","Map the page of `vaddr` to the frame of `paddr` with…",16,[[["mmuflags",3]],["result",4]]],[11,"unmap","","Unmap the page of `vaddr`.",16,[[],["result",4]]],[11,"protect","","Change the `flags` of the page of `vaddr`.",16,[[["mmuflags",3]],["result",4]]],[11,"query","","Query the physical address which the page of `vaddr` maps…",16,[[],["result",4]]],[11,"table_phys","","Get the physical address of root page table.",16,[[]]],[11,"map_many","","",16,[[["mmuflags",3]],["result",4]]],[11,"map_cont","","",16,[[["mmuflags",3]],["result",4]]],[11,"unmap_cont","","",16,[[],["result",4]]],[11,"alloc","","",17,[[],[["option",4],["physframe",3]]]],[11,"addr","","",17,[[]]]],"p":[[4,"Error"],[3,"VdsoConstants"],[3,"Features"],[3,"GeneralRegs"],[3,"UserContext"],[3,"VectorRegs"],[3,"Thread"],[3,"PageTable"],[3,"PhysFrame"],[3,"MMUFlags"],[3,"UserPtr"],[4,"In"],[4,"Out"],[4,"InOut"],[3,"BuildID"],[3,"Thread"],[3,"PageTable"],[3,"PhysFrame"],[3,"SleepFuture"]]};
searchIndex["linux_loader"] = {"doc":"","i":[[5,"run","linux_loader","",null,[[["filesystem",8],["string",3],["arc",3],["vec",3]],[["arc",3],["process",3]]]],[5,"run_task","","",null,[[["thread",3],["arc",3]]]]],"p":[]};
searchIndex["linux_object"] = {"doc":"Linux kernel objects","i":[[0,"error","linux_object","",null,null],[4,"LxError","linux_object::error","",null,null],[13,"EUNDEF","","",0,null],[13,"EPERM","","",0,null],[13,"ENOENT","","",0,null],[13,"ESRCH","","",0,null],[13,"EINTR","","",0,null],[13,"EIO","","",0,null],[13,"ENXIO","","",0,null],[13,"E2BIG","","",0,null],[13,"ENOEXEC","","",0,null],[13,"EBADF","","",0,null],[13,"ECHILD","","",0,null],[13,"EAGAIN","","",0,null],[13,"ENOMEM","","",0,null],[13,"EACCES","","",0,null],[13,"EFAULT","","",0,null],[13,"ENOTBLK","","",0,null],[13,"EBUSY","","",0,null],[13,"EEXIST","","",0,null],[13,"EXDEV","","",0,null],[13,"ENODEV","","",0,null],[13,"ENOTDIR","","",0,null],[13,"EISDIR","","",0,null],[13,"EINVAL","","",0,null],[13,"ENFILE","","",0,null],[13,"EMFILE","","",0,null],[13,"ENOTTY","","",0,null],[13,"ETXTBSY","","",0,null],[13,"EFBIG","","",0,null],[13,"ENOSPC","","",0,null],[13,"ESPIPE","","",0,null],[13,"EROFS","","",0,null],[13,"EMLINK","","",0,null],[13,"EPIPE","","",0,null],[13,"EDOM","","",0,null],[13,"ERANGE","","",0,null],[13,"EDEADLK","","",0,null],[13,"ENAMETOOLONG","","",0,null],[13,"ENOLCK","","",0,null],[13,"ENOSYS","","",0,null],[13,"ENOTEMPTY","","",0,null],[13,"ELOOP","","",0,null],[13,"ENOTSOCK","","",0,null],[13,"ENOPROTOOPT","","",0,null],[13,"EPFNOSUPPORT","","",0,null],[13,"EAFNOSUPPORT","","",0,null],[13,"ENOBUFS","","",0,null],[13,"EISCONN","","",0,null],[13,"ENOTCONN","","",0,null],[13,"ECONNREFUSED","","",0,null],[6,"LxResult","","",null,null],[6,"SysResult","","",null,null],[0,"fs","linux_object","",null,null],[0,"vfs","linux_object::fs","",null,null],[8,"INode","linux_object::fs::vfs","Abstract file system object such as file or directory.",null,null],[10,"read_at","","Read bytes at `offset` into `buf`, return the number of…",1,[[],[["fserror",4],["result",4]]]],[10,"write_at","","Write bytes at `offset` from `buf`, return the number of…",1,[[],[["fserror",4],["result",4]]]],[10,"poll","","Poll the events, return a bitmap of events.",1,[[],[["fserror",4],["pollstatus",3],["result",4]]]],[11,"metadata","","Get metadata of the INode",1,[[],[["result",4],["fserror",4],["metadata",3]]]],[11,"set_metadata","","Set metadata of the INode",1,[[["metadata",3]],[["fserror",4],["result",4]]]],[11,"sync_all","","Sync all data and metadata",1,[[],[["fserror",4],["result",4]]]],[11,"sync_data","","Sync data (not include metadata)",1,[[],[["fserror",4],["result",4]]]],[11,"resize","","Resize the file",1,[[],[["fserror",4],["result",4]]]],[11,"create","","Create a new INode in the directory",1,[[["filetype",4]],[["result",4],["arc",3],["fserror",4]]]],[11,"create2","","Create a new INode in the directory, with a data field for…",1,[[["filetype",4]],[["result",4],["arc",3],["fserror",4]]]],[11,"link","","Create a hard link `name` to `other`",1,[[["arc",3]],[["fserror",4],["result",4]]]],[11,"unlink","","Delete a hard link `name`",1,[[],[["fserror",4],["result",4]]]],[11,"move_","","Move INode `self/old_name` to `target/new_name`. If…",1,[[["arc",3]],[["fserror",4],["result",4]]]],[11,"find","","Find the INode `name` in the directory",1,[[],[["result",4],["arc",3],["fserror",4]]]],[11,"get_entry","","Get the name of directory entry",1,[[],[["fserror",4],["result",4],["string",3]]]],[11,"io_control","","Control device",1,[[],[["fserror",4],["result",4]]]],[11,"fs","","Get the file system of the INode",1,[[],[["arc",3],["filesystem",8]]]],[10,"as_any_ref","","This is used to implement dynamics cast. Simply return…",1,[[],["any",8]]],[4,"IOCTLError","","",null,null],[13,"NotValidFD","","",2,null],[13,"NotValidMemory","","",2,null],[13,"NotValidParam","","",2,null],[13,"NotCharDevice","","",2,null],[3,"PollStatus","","",null,null],[12,"read","","",3,null],[12,"write","","",3,null],[12,"error","","",3,null],[3,"Metadata","","Metadata of INode",null,null],[12,"dev","","Device ID",4,null],[12,"inode","","Inode number",4,null],[12,"size","","Size in bytes",4,null],[12,"blk_size","","A file system-specific preferred I/O block size for this…",4,null],[12,"blocks","","Size in blocks",4,null],[12,"atime","","Time of last access",4,null],[12,"mtime","","Time of last modification",4,null],[12,"ctime","","Time of last change",4,null],[12,"type_","","Type of file",4,null],[12,"mode","","Permission",4,null],[12,"nlinks","","Number of hard links",4,null],[12,"uid","","User ID",4,null],[12,"gid","","Group ID",4,null],[12,"rdev","","Raw device id e.g. /dev/null: makedev(0x1, 0x3)",4,null],[3,"Timespec","","",null,null],[12,"sec","","",5,null],[12,"nsec","","",5,null],[4,"FileType","","",null,null],[13,"File","","",6,null],[13,"Dir","","",6,null],[13,"SymLink","","",6,null],[13,"CharDevice","","",6,null],[13,"BlockDevice","","",6,null],[13,"NamedPipe","","",6,null],[13,"Socket","","",6,null],[3,"FsInfo","","Metadata of FileSystem",null,null],[12,"bsize","","File system block size",7,null],[12,"frsize","","Fundamental file system block size",7,null],[12,"blocks","","Total number of blocks on file system in units of `frsize`",7,null],[12,"bfree","","Total number of free blocks",7,null],[12,"bavail","","Number of free blocks available to non-privileged process",7,null],[12,"files","","Total number of file serial numbers",7,null],[12,"ffree","","Total number of free file serial numbers",7,null],[12,"namemax","","Maximum filename length",7,null],[4,"FsError","","",null,null],[13,"NotSupported","","",8,null],[13,"NotFile","","",8,null],[13,"IsDir","","",8,null],[13,"NotDir","","",8,null],[13,"EntryNotFound","","",8,null],[13,"EntryExist","","",8,null],[13,"NotSameFs","","",8,null],[13,"InvalidParam","","",8,null],[13,"NoDeviceSpace","","",8,null],[13,"DirRemoved","","",8,null],[13,"DirNotEmpty","","",8,null],[13,"WrongFs","","",8,null],[13,"DeviceError","","",8,null],[13,"IOCTLError","","",8,null],[13,"NoDevice","","",8,null],[13,"Again","","",8,null],[13,"SymLoop","","",8,null],[13,"Busy","","",8,null],[6,"Result","","",null,null],[8,"FileSystem","","Abstract file system",null,null],[10,"sync","","Sync all data to the storage",9,[[],[["fserror",4],["result",4]]]],[10,"root_inode","","Get the root INode of the file system",9,[[],[["arc",3],["inode",8]]]],[10,"info","","Get the file system information",9,[[],["fsinfo",3]]],[5,"make_rdev","","",null,[[]]],[3,"File","linux_object::fs","",null,null],[12,"path","","",10,null],[3,"OpenOptions","","",null,null],[12,"read","","",11,null],[12,"write","","",11,null],[12,"append","","Before each write, the file offset is positioned at the…",11,null],[12,"nonblock","","",11,null],[3,"Pseudo","","",null,null],[3,"RandomINodeData","","",null,null],[3,"RandomINode","","",null,null],[3,"Stdout","","",null,null],[3,"FileDesc","","",null,null],[4,"SeekFrom","","",null,null],[13,"Start","","",12,null],[13,"End","","",12,null],[13,"Current","","",12,null],[5,"create_root_fs","","",null,[[["filesystem",8],["arc",3]],[["arc",3],["inode",8]]]],[5,"split_path","","Split a `path` str to `(base_path, file_name)`",null,[[]]],[11,"new","","",10,[[["arc",3],["inode",8],["openoptions",3],["string",3]],["arc",3]]],[11,"read","","",10,[[],["lxresult",6]]],[11,"read_at","","",10,[[],["lxresult",6]]],[11,"write","","",10,[[],["lxresult",6]]],[11,"write_at","","",10,[[],["lxresult",6]]],[11,"seek","","",10,[[["seekfrom",4]],["lxresult",6]]],[11,"set_len","","",10,[[],["lxresult",6]]],[11,"sync_all","","",10,[[],["lxresult",6]]],[11,"sync_data","","",10,[[],["lxresult",6]]],[11,"metadata","","",10,[[],[["metadata",3],["lxresult",6]]]],[11,"lookup_follow","","",10,[[],[["lxresult",6],["arc",3]]]],[11,"read_entry","","",10,[[],[["lxresult",6],["string",3]]]],[11,"poll","","",10,[[],[["lxresult",6],["pollstatus",3]]]],[11,"io_control","","",10,[[],["lxresult",6]]],[11,"inode","","",10,[[],[["arc",3],["inode",8]]]],[11,"fcntl","","",10,[[],["lxresult",6]]],[11,"new","","",13,[[["filetype",4]]]],[11,"new","","",14,[[],["randominode",3]]],[8,"FileLike","","Generic file interface",null,null],[10,"read","","",15,[[],["lxresult",6]]],[10,"write","","",15,[[],["lxresult",6]]],[10,"read_at","","",15,[[],["lxresult",6]]],[10,"write_at","","",15,[[],["lxresult",6]]],[10,"poll","","",15,[[],[["lxresult",6],["pollstatus",3]]]],[10,"ioctl","","",15,[[],["lxresult",6]]],[10,"fcntl","","",15,[[],["lxresult",6]]],[8,"INodeExt","","",null,null],[10,"read_as_vec","","",16,[[],[["vec",3],["result",6]]]],[11,"is","","Returns true if the trait object wraps an object of type…",15,[[]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the…",15,[[["box",3]],[["result",4],["box",3],["box",3]]]],[11,"downcast_rc","","Returns an `Rc`-ed object from an `Rc`-ed trait object if…",15,[[["rc",3]],[["rc",3],["rc",3],["result",4]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object…",15,[[],["option",4]]],[11,"downcast_mut","","Returns a mutable reference to the object within the trait…",15,[[],["option",4]]],[11,"downcast_arc","","Returns an `Arc`-ed object from an `Arc`-ed trait object…",15,[[["arc",3]],[["arc",3],["arc",3],["result",4]]]],[18,"CWD","","Pathname is interpreted relative to the current working…",17,null],[0,"loader","linux_object","",null,null],[3,"LinuxElfLoader","linux_object::loader","Linux ELF Program Loader.",null,null],[12,"syscall_entry","","",18,null],[12,"stack_pages","","",18,null],[12,"root_inode","","",18,null],[11,"load","","",18,[[["arc",3],["string",3],["vec",3]],["lxresult",6]]],[0,"process","linux_object","Linux Process",null,null],[3,"LinuxProcess","linux_object::process","Linux specific process information.",null,null],[12,"cwd","","Current Working Directory",19,null],[12,"exec_path","","Execute path",19,null],[5,"wait_child","","Wait for state changes in a child of the calling process,…",null,[[["arc",3],["koid",6]]]],[5,"wait_child_any","","Wait for state changes in a child of the calling process.",null,[[["arc",3]]]],[6,"ExitCode","","",null,null],[8,"ProcessExt","","",null,null],[10,"create_linux","","",20,[[["arc",3],["filesystem",8],["arc",3]],[["zxresult",6],["arc",3]]]],[10,"lock_linux","","",20,[[],[["linuxprocess",3],["mutexguard",3]]]],[10,"vfork_from","","",20,[[["arc",3]],[["zxresult",6],["arc",3]]]],[11,"new","","Create a new process.",19,[[["filesystem",8],["arc",3]]]],[11,"get_futex","","Get futex object.",19,[[["virtaddr",6]],[["futex",3],["arc",3]]]],[11,"add_file","","Add a file to the file descriptor table.",19,[[["arc",3],["filelike",8]],[["lxresult",6],["filedesc",3]]]],[11,"add_file_at","","Add a file to the file descriptor table at given `fd`.",19,[[["arc",3],["filelike",8],["filedesc",3]]]],[11,"get_file","","Get the `File` with given `fd`.",19,[[["filedesc",3]],[["lxresult",6],["arc",3]]]],[11,"get_file_like","","Get the `FileLike` with given `fd`.",19,[[["filedesc",3]],[["arc",3],["lxresult",6]]]],[11,"close_file","","Close file descriptor `fd`.",19,[[["filedesc",3]],["lxresult",6]]],[11,"root_inode","","Get root INode of the process.",19,[[],["arc",3]]],[11,"parent","","Get parent process.",19,[[],[["arc",3],["option",4]]]],[0,"thread","linux_object","Linux Thread",null,null],[3,"LinuxThread","linux_object::thread","Linux specific thread information.",null,null],[8,"ThreadExt","","",null,null],[10,"create_linux","","",21,[[["arc",3]],[["zxresult",6],["arc",3]]]],[10,"lock_linux","","",21,[[],[["linuxthread",3],["mutexguard",3]]]],[10,"set_tid_address","","",21,[[["useroutptr",6]]]],[10,"exit_linux","","",21,[[]]],[11,"from","linux_object::error","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",0,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",0,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"from","linux_object::fs::vfs","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_any_arc","","",2,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",2,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",2,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_any_arc","","",3,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",3,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",3,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"into_any_arc","","",4,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",4,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",4,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"into_any_arc","","",5,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",5,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",5,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"into_any_arc","","",6,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",6,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",6,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_any_arc","","",7,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",7,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",7,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_string","","",8,[[],["string",3]]],[11,"into_any_arc","","",8,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",8,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",8,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"from","linux_object::fs","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_any_arc","","",10,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",10,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",10,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_any_arc","","",11,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",11,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",11,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_any_arc","","",13,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",13,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",13,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"into_any_arc","","",22,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",22,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",22,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",22,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"into_any_arc","","",14,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",14,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",14,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"into_any_arc","","",23,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",23,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",23,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",23,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"into_any_arc","","",17,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",17,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",17,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",17,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_any_arc","","",12,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",12,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",12,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"from","linux_object::loader","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"into_any_arc","","",18,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",18,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",18,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"from","linux_object::process","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_any_arc","","",19,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",19,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",19,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"from","linux_object::thread","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_any_arc","","",24,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",24,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",24,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",24,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"clone","linux_object::fs::vfs","",4,[[],["metadata",3]]],[11,"clone","","",6,[[],["filetype",4]]],[11,"clone","","",5,[[],["timespec",3]]],[11,"eq","","",6,[[["filetype",4]]]],[11,"eq","","",8,[[["fserror",4]]]],[11,"eq","","",4,[[["metadata",3]]]],[11,"ne","","",4,[[["metadata",3]]]],[11,"eq","","",5,[[["timespec",3]]]],[11,"ne","","",5,[[["timespec",3]]]],[11,"cmp","","",5,[[["timespec",3]],["ordering",4]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",8,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",5,[[]]],[11,"default","","",3,[[],["pollstatus",3]]],[11,"partial_cmp","","",5,[[["timespec",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["timespec",3]]]],[11,"le","","",5,[[["timespec",3]]]],[11,"gt","","",5,[[["timespec",3]]]],[11,"ge","","",5,[[["timespec",3]]]],[11,"from","","",8,[[["error",3]],["fserror",4]]],[11,"from","","",8,[[["deverror",3]],["fserror",4]]],[11,"from","","",4,[[["metadata",3]],["metadata",3]]],[11,"from","","",6,[[["filetype",4]],["filetype",4]]],[11,"read","linux_object::fs","",10,[[],["lxresult",6]]],[11,"write","","",10,[[],["lxresult",6]]],[11,"read_at","","",10,[[],["lxresult",6]]],[11,"write_at","","",10,[[],["lxresult",6]]],[11,"poll","","",10,[[],[["lxresult",6],["pollstatus",3]]]],[11,"ioctl","","",10,[[],["lxresult",6]]],[11,"fcntl","","",10,[[],["lxresult",6]]],[11,"read_as_vec","linux_object::fs::vfs","",1,[[],[["vec",3],["result",6]]]],[11,"from","linux_object::error","",0,[[["zxerror",4]]]],[11,"from","","",0,[[["fserror",4]]]],[11,"from","","",0,[[["error",4]]]],[11,"from","linux_object::fs","",17,[[]]],[11,"fmt","linux_object::error","",0,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::fs","",10,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","linux_object::error","",0,[[["formatter",3]],["result",6]]],[11,"eq","linux_object::fs","",17,[[["filedesc",3]]]],[11,"ne","","",17,[[["filedesc",3]]]],[11,"cmp","","",17,[[["filedesc",3]],["ordering",4]]],[11,"partial_cmp","","",17,[[["filedesc",3]],[["ordering",4],["option",4]]]],[11,"lt","","",17,[[["filedesc",3]]]],[11,"le","","",17,[[["filedesc",3]]]],[11,"gt","","",17,[[["filedesc",3]]]],[11,"ge","","",17,[[["filedesc",3]]]],[11,"try_from","","",17,[[],["lxresult",6]]],[11,"into","","",17,[[]]],[11,"clone","","",14,[[],["randominode",3]]],[11,"clone","","",17,[[],["filedesc",3]]],[11,"default","","",23,[[],["stdout",3]]],[11,"read_at","","",13,[[],["result",6]]],[11,"write_at","","",13,[[],["result",6]]],[11,"poll","","",13,[[],[["result",6],["pollstatus",3]]]],[11,"metadata","","",13,[[],[["result",6],["metadata",3]]]],[11,"as_any_ref","","",13,[[],["any",8]]],[11,"read_at","","",14,[[],["result",6]]],[11,"write_at","","",14,[[],["result",6]]],[11,"poll","","",14,[[],[["result",6],["pollstatus",3]]]],[11,"metadata","","",14,[[],[["result",6],["metadata",3]]]],[11,"as_any_ref","","",14,[[],["any",8]]],[11,"read_at","","",23,[[],["result",6]]],[11,"write_at","","",23,[[],["result",6]]],[11,"poll","","",23,[[],[["result",6],["pollstatus",3]]]],[11,"io_control","","",23,[[],["result",6]]],[11,"as_any_ref","","",23,[[],["any",8]]],[11,"id","","",10,[[],["koid",6]]],[11,"type_name","","",10,[[]]],[11,"name","","",10,[[],["string",3]]],[11,"set_name","","",10,[[]]],[11,"signal","","",10,[[],["signal",3]]],[11,"signal_set","","",10,[[["signal",3]]]],[11,"signal_change","","",10,[[["signal",3]]]],[11,"add_signal_callback","","",10,[[["signalhandler",6]]]],[11,"downcast_ref","linux_object::fs::vfs","Downcast the INode to specific struct",1,[[],["option",4]]],[11,"list","","Get all directory entries as a Vec",1,[[],[["vec",3],["result",4],["fserror",4]]]],[11,"lookup","","Lookup path from current INode, and do not follow symlinks",1,[[],[["result",4],["arc",3],["fserror",4]]]],[11,"lookup_follow","","Lookup path from current INode, and follow symlinks at…",1,[[],[["result",4],["arc",3],["fserror",4]]]],[11,"lookup_inode_at","linux_object::process","Lookup INode from the process.",19,[[["filedesc",3]],[["lxresult",6],["arc",3]]]],[11,"lookup_inode","","",19,[[],[["lxresult",6],["arc",3]]]]],"p":[[4,"LxError"],[8,"INode"],[4,"IOCTLError"],[3,"PollStatus"],[3,"Metadata"],[3,"Timespec"],[4,"FileType"],[3,"FsInfo"],[4,"FsError"],[8,"FileSystem"],[3,"File"],[3,"OpenOptions"],[4,"SeekFrom"],[3,"Pseudo"],[3,"RandomINode"],[8,"FileLike"],[8,"INodeExt"],[3,"FileDesc"],[3,"LinuxElfLoader"],[3,"LinuxProcess"],[8,"ProcessExt"],[8,"ThreadExt"],[3,"RandomINodeData"],[3,"Stdout"],[3,"LinuxThread"]]};
searchIndex["linux_syscall"] = {"doc":"Linux syscall implementations","i":[[3,"Syscall","linux_syscall","",null,null],[12,"thread","","",0,null],[12,"syscall_entry","","",0,null],[12,"regs","","",0,null],[12,"exit","","Set `true` to exit current task.",0,null],[11,"sys_getcwd","","",0,[[["useroutptr",6]],["sysresult",6]]],[11,"sys_chdir","","",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_mkdir","","",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_mkdirat","","",0,[[["filedesc",3],["userinptr",6]],["sysresult",6]]],[11,"sys_rmdir","","",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_getdents64","","",0,[[["filedesc",3],["useroutptr",6]],["sysresult",6]]],[11,"sys_link","","",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_linkat","","",0,[[["filedesc",3],["userinptr",6]],["sysresult",6]]],[11,"sys_unlink","","",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_unlinkat","","",0,[[["filedesc",3],["userinptr",6]],["sysresult",6]]],[11,"sys_rename","","",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_renameat","","",0,[[["filedesc",3],["userinptr",6]],["sysresult",6]]],[11,"sys_readlink","","",0,[[["useroutptr",6],["userinptr",6]],["sysresult",6]]],[11,"sys_readlinkat","","",0,[[["filedesc",3],["useroutptr",6],["userinptr",6]],["sysresult",6]]],[11,"sys_open","","",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_openat","","",0,[[["filedesc",3],["userinptr",6]],["sysresult",6]]],[11,"sys_close","","",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_dup2","","",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_read","","",0,[[["filedesc",3],["useroutptr",6]],["sysresult",6]]],[11,"sys_write","","",0,[[["filedesc",3],["userinptr",6]],["sysresult",6]]],[11,"sys_pread","","",0,[[["filedesc",3],["useroutptr",6]],["sysresult",6]]],[11,"sys_pwrite","","",0,[[["filedesc",3],["userinptr",6]],["sysresult",6]]],[11,"sys_readv","","",0,[[["filedesc",3],["userinptr",6],["iovec",3]],["sysresult",6]]],[11,"sys_writev","","",0,[[["filedesc",3],["userinptr",6],["iovec",3]],["sysresult",6]]],[11,"sys_lseek","","",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_truncate","","",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_ftruncate","","",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_sendfile","","",0,[[["filedesc",3],["userinoutptr",6]],["sysresult",6]]],[11,"sys_copy_file_range","","",0,[[["filedesc",3],["userinoutptr",6]],["sysresult",6]]],[11,"sys_sync","","",0,[[],["sysresult",6]]],[11,"sys_fsync","","",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_fdatasync","","",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_ioctl","","",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_fcntl","","",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_access","","",0,[[["userinptr",6]],["sysresult",6]]],[11,"sys_faccessat","","",0,[[["filedesc",3],["userinptr",6]],["sysresult",6]]],[11,"sys_lstat","","",0,[[["stat",3],["useroutptr",6],["userinptr",6]],["sysresult",6]]],[11,"sys_fstat","","",0,[[["filedesc",3],["stat",3],["useroutptr",6]],["sysresult",6]]],[11,"sys_fstatat","","",0,[[["stat",3],["userinptr",6],["filedesc",3],["useroutptr",6]],["sysresult",6]]],[11,"sys_stat","","",0,[[["stat",3],["useroutptr",6],["userinptr",6]],["sysresult",6]]],[11,"sys_arch_prctl","","",0,[[],["sysresult",6]]],[11,"sys_uname","","",0,[[["useroutptr",6]],["sysresult",6]]],[11,"sys_futex","","",0,[[["userinptr",6],["timespec",3]]]],[11,"sys_fork","","Fork the current process. Return the child's PID.",0,[[]]],[11,"sys_vfork","","",0,[[]]],[11,"sys_clone","","Create a new thread in the current process. The new…",0,[[["useroutptr",6]],["sysresult",6]]],[11,"sys_wait4","","Wait for a child process exited.",0,[[["useroutptr",6]]]],[11,"sys_execve","","Replaces the current ** process ** with a new process image",0,[[["userinptr",6],["userinptr",6]],["sysresult",6]]],[11,"sys_gettid","","Get the current thread ID.",0,[[],["sysresult",6]]],[11,"sys_getpid","","Get the current process ID.",0,[[],["sysresult",6]]],[11,"sys_getppid","","Get the parent process ID.",0,[[],["sysresult",6]]],[11,"sys_exit","","Exit the current thread",0,[[],["sysresult",6]]],[11,"sys_exit_group","","Exit the current thread group (i.e. process)",0,[[],["sysresult",6]]],[11,"sys_set_tid_address","","",0,[[["useroutptr",6]],["sysresult",6]]],[11,"sys_mmap","","",0,[[["filedesc",3]],["sysresult",6]]],[11,"sys_mprotect","","",0,[[],["sysresult",6]]],[11,"sys_munmap","","",0,[[],["sysresult",6]]],[11,"syscall","","",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",0,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",0,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]]],"p":[[3,"Syscall"]]};
searchIndex["zircon_loader"] = {"doc":"","i":[[3,"Images","zircon_loader","Program images to run.",null,null],[12,"userboot","","",0,null],[12,"vdso","","",0,null],[12,"decompressor","","",0,null],[12,"zbi","","",0,null],[5,"run_userboot","","",null,[[["images",3]],[["arc",3],["process",3]]]],[5,"run_task","","",null,[[["thread",3],["arc",3]]]],[8,"ElfExt","","",null,null],[10,"load_segment_size","","",1,[[]]],[10,"get_symbol_address","","",1,[[],["option",4]]],[8,"VmarExt","","",null,null],[10,"load_from_elf","","",2,[[["elffile",3]],["zxresult",6]]],[10,"map_from_elf","","",2,[[["arc",3],["vmobject",3],["elffile",3]],["zxresult",6]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",0,[[],[["zxerror",4],["result",4]]]],[11,"into_any","","",0,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"vzip","","",0,[[]]]],"p":[[3,"Images"],[8,"ElfExt"],[8,"VmarExt"]]};
searchIndex["zircon_object"] = {"doc":"Zircon kernel objects","i":[[4,"ZxError","zircon_object","Zircon statuses are signed 32 bit integers. The space of…",null,null],[13,"OK","","",0,null],[13,"INTERNAL","","The system encountered an otherwise unspecified error…",0,null],[13,"NOT_SUPPORTED","","The operation is not implemented, supported, or enabled.",0,null],[13,"NO_RESOURCES","","The system was not able to allocate some resource needed…",0,null],[13,"NO_MEMORY","","The system was not able to allocate memory needed for the…",0,null],[13,"INTERNAL_INTR_RETRY","","The system call was interrupted, but should be retried.…",0,null],[13,"INVALID_ARGS","","an argument is invalid, ex. null pointer",0,null],[13,"BAD_HANDLE","","A specified handle value does not refer to a handle.",0,null],[13,"WRONG_TYPE","","The subject of the operation is the wrong type to perform…",0,null],[13,"BAD_SYSCALL","","The specified syscall number is invalid.",0,null],[13,"OUT_OF_RANGE","","An argument is outside the valid range for this operation.",0,null],[13,"BUFFER_TOO_SMALL","","A caller provided buffer is too small for this operation.",0,null],[13,"BAD_STATE","","operation failed because the current state of the object…",0,null],[13,"TIMED_OUT","","The time limit for the operation elapsed before the…",0,null],[13,"SHOULD_WAIT","","The operation cannot be performed currently but…",0,null],[13,"CANCELED","","The in-progress operation (e.g. a wait) has been canceled.",0,null],[13,"PEER_CLOSED","","The operation failed because the remote end of the subject…",0,null],[13,"NOT_FOUND","","The requested entity is not found.",0,null],[13,"ALREADY_EXISTS","","An object with the specified identifier already exists.…",0,null],[13,"ALREADY_BOUND","","The operation failed because the named entity is already…",0,null],[13,"UNAVAILABLE","","The subject of the operation is currently unable to…",0,null],[13,"ACCESS_DENIED","","The caller did not have permission to perform the…",0,null],[13,"IO","","Otherwise unspecified error occurred during I/O.",0,null],[13,"IO_REFUSED","","The entity the I/O operation is being performed on…",0,null],[13,"IO_DATA_INTEGRITY","","The data in the operation failed an integrity check and is…",0,null],[13,"IO_DATA_LOSS","","The data in the operation is currently unavailable and may…",0,null],[13,"IO_NOT_PRESENT","","The device is no longer available (has been unplugged from…",0,null],[13,"IO_OVERRUN","","More data was received from the device than expected.…",0,null],[13,"IO_MISSED_DEADLINE","","An operation did not complete within the required…",0,null],[13,"IO_INVALID","","The data in the operation is invalid parameter or is out…",0,null],[13,"BAD_PATH","","Path name is too long.",0,null],[13,"NOT_DIR","","Object is not a directory or does not support directory…",0,null],[13,"NOT_FILE","","Object is not a regular file.",0,null],[13,"FILE_BIG","","This operation would cause a file to exceed a…",0,null],[13,"NO_SPACE","","Filesystem or device space is exhausted.",0,null],[13,"NOT_EMPTY","","Directory is not empty.",0,null],[13,"STOP","","Do not call again. Example: A notification callback will…",0,null],[13,"NEXT","","Advance to the next item. Example: A notification callback…",0,null],[13,"ASYNC","","Ownership of the item has moved to an asynchronous worker.",0,null],[13,"PROTOCOL_NOT_SUPPORTED","","Specified protocol is not supported.",0,null],[13,"ADDRESS_UNREACHABLE","","Host is unreachable.",0,null],[13,"ADDRESS_IN_USE","","Address is being used by someone else.",0,null],[13,"NOT_CONNECTED","","Socket is not connected.",0,null],[13,"CONNECTION_REFUSED","","Remote peer rejected the connection.",0,null],[13,"CONNECTION_RESET","","Connection was reset.",0,null],[13,"CONNECTION_ABORTED","","Connection was aborted.",0,null],[0,"debuglog","","",null,null],[3,"DebugLog","zircon_object::debuglog","",null,null],[11,"create","","",1,[[],["arc",3]]],[11,"write","","",1,[[],["zxresult",6]]],[0,"ipc","zircon_object","Objects for IPC.",null,null],[3,"Channel","zircon_object::ipc","Bidirectional interprocess communication",null,null],[3,"MessagePacket","","",null,null],[12,"data","","",2,null],[12,"handles","","",2,null],[3,"Fifo","","",null,null],[3,"Socket","","",null,null],[11,"create","","Create a channel and return a pair of its endpoints",3,[[]]],[11,"check_and_read","","Read a packet from the channel if check is ok, otherwise…",3,[[],[["messagepacket",3],["zxresult",6]]]],[11,"read","","Read a packet from the channel",3,[[],[["messagepacket",3],["zxresult",6]]]],[11,"write","","Write a packet to the channel",3,[[["messagepacket",3]],["zxresult",6]]],[11,"call","","Send a message to a channel and await a reply.",3,[[["messagepacket",3],["arc",3]]]],[11,"create","","",4,[[]]],[11,"create","","",5,[[]]],[0,"object","zircon_object","Kernel object basis.",null,null],[3,"Handle","zircon_object::object","A Handle is how a specific process refers to a specific…",null,null],[12,"object","","",6,null],[12,"rights","","",6,null],[3,"HandleBasicInfo","","",null,null],[3,"HandleInfo","","",null,null],[12,"handle","","",7,null],[3,"Rights","","Rights are associated with handles and convey privileges…",null,null],[3,"Signal","","Signals that waitable kernel objects expose to applications.",null,null],[3,"KObjectBase","","The base struct of a kernel object.",null,null],[12,"id","","",8,null],[3,"DummyObject","","Empty kernel object. Just for test.",null,null],[5,"wait_signal_many","","Asynchronous wait signal for multiple objects.",null,[[]]],[11,"new","","",6,[[["rights",3],["arc",3],["kernelobject",8]]]],[11,"get_info","","",6,[[],["handlebasicinfo",3]]],[11,"get_handle_info","","",6,[[],["handleinfo",3]]],[18,"DUPLICATE","","Allows handle duplication via `zx_handle_duplicate()`.",9,null],[18,"TRANSFER","","Allows handle transfer via `zx_channel_write()`.",9,null],[18,"READ","","Allows reading of data from containers (channels, sockets,…",9,null],[18,"WRITE","","Allows writing of data to containers (channels, sockets,…",9,null],[18,"EXECUTE","","Allows mapping as executable if `Rights::MAP` is also…",9,null],[18,"MAP","","Allows mapping of a VM object into an address space.",9,null],[18,"GET_PROPERTY","","Allows property inspection via `zx_object_get_property()`.",9,null],[18,"SET_PROPERTY","","Allows property modification via `zx_object_set_property()`.",9,null],[18,"ENUMERATE","","Allows enumerating child objects via…",9,null],[18,"DESTROY","","Allows termination of task objects via `zx_task_kill()`.",9,null],[18,"SET_POLICY","","Allows policy modification via `zx_job_set_policy()`.",9,null],[18,"GET_POLICY","","Allows policy inspection via `zx_job_get_policy()`.",9,null],[18,"SIGNAL","","Allows use of `zx_object_signal()`.",9,null],[18,"SIGNAL_PEER","","Allows use of `zx_object_signal_peer()`.",9,null],[18,"WAIT","","Allows use of `zx_object_wait_one()`,…",9,null],[18,"INSPECT","","Allows inspection via `zx_object_get_info()`.",9,null],[18,"MANAGE_JOB","","Allows creation of processes, subjobs, etc.",9,null],[18,"MANAGE_PROCESS","","Allows creation of threads, etc.",9,null],[18,"MANAGE_THREAD","","Allows suspending/resuming threads, etc.",9,null],[18,"APPLY_PROFILE","","",9,null],[18,"SAME_RIGHTS","","",9,null],[18,"BASIC","","",9,null],[18,"IO","","",9,null],[18,"PROPERTY","","",9,null],[18,"POLICY","","",9,null],[18,"DEFAULT_CHANNEL","","",9,null],[18,"DEFAULT_PROCESS","","",9,null],[18,"DEFAULT_THREAD","","",9,null],[18,"DEFAULT_VMO","","",9,null],[18,"DEFAULT_VMAR","","",9,null],[18,"DEFAULT_JOB","","",9,null],[18,"DEFAULT_RESOURCE","","",9,null],[18,"DEFAULT_DEBUGLOG","","",9,null],[18,"DEFAULT_SUSPEND_TOKEN","","",9,null],[18,"DEFAULT_PORT","","",9,null],[18,"DEFAULT_TIMER","","",9,null],[18,"DEFAULT_EVENT","","",9,null],[18,"DEFAULT_EVENTPAIR","","",9,null],[18,"DEFAULT_FIFO","","",9,null],[18,"DEFAULT_SOCKET","","",9,null],[11,"empty","","Returns an empty set of flags",9,[[],["rights",3]]],[11,"all","","Returns the set containing all flags.",9,[[],["rights",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",9,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",9,[[],[["option",4],["rights",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",9,[[],["rights",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",9,[[],["rights",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",9,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",9,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",9,[[["rights",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",9,[[["rights",3]]]],[11,"insert","","Inserts the specified flags in-place.",9,[[["rights",3]]]],[11,"remove","","Removes the specified flags in-place.",9,[[["rights",3]]]],[11,"toggle","","Toggles the specified flags in-place.",9,[[["rights",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",9,[[["rights",3]]]],[18,"READABLE","","",10,null],[18,"WRITABLE","","",10,null],[18,"PEER_CLOSED","","",10,null],[18,"SIGNALED","","",10,null],[18,"HANDLE_CLOSED","","",10,null],[18,"USER_ALL","","",10,null],[18,"CLOCK_STARTED","","",10,null],[18,"SOCKET_PEER_WRITE_DISABLED","","",10,null],[18,"SOCKET_WRITE_DISABLED","","",10,null],[18,"SOCKET_READ_THRESHOLD","","",10,null],[18,"SOCKET_WRITE_THRESHOLD","","",10,null],[18,"TASK_TERMINATED","","",10,null],[18,"JOB_TERMINATED","","",10,null],[18,"JOB_NO_JOBS","","",10,null],[18,"JOB_NO_PROCESSES","","",10,null],[18,"PROCESS_TERMINATED","","",10,null],[18,"THREAD_TERMINATED","","",10,null],[18,"THREAD_RUNNING","","",10,null],[18,"THREAD_SUSPENDED","","",10,null],[18,"SIGCHLD","","",10,null],[18,"USER_SIGNAL_0","","",10,null],[18,"USER_SIGNAL_1","","",10,null],[18,"USER_SIGNAL_2","","",10,null],[18,"USER_SIGNAL_3","","",10,null],[18,"USER_SIGNAL_4","","",10,null],[18,"USER_SIGNAL_5","","",10,null],[18,"USER_SIGNAL_6","","",10,null],[18,"USER_SIGNAL_7","","",10,null],[11,"empty","","Returns an empty set of flags",10,[[],["signal",3]]],[11,"all","","Returns the set containing all flags.",10,[[],["signal",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",10,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",10,[[],[["signal",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",10,[[],["signal",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",10,[[],["signal",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",10,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",10,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",10,[[["signal",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",10,[[["signal",3]]]],[11,"insert","","Inserts the specified flags in-place.",10,[[["signal",3]]]],[11,"remove","","Removes the specified flags in-place.",10,[[["signal",3]]]],[11,"toggle","","Toggles the specified flags in-place.",10,[[["signal",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",10,[[["signal",3]]]],[11,"verify_user_signal","","",10,[[["signal",3]],[["signal",3],["zxresult",6]]]],[6,"HandleValue","","The value refers to a Handle in user space.",null,null],[6,"KoID","","The type of kernel object ID.",null,null],[6,"SignalHandler","","The type of kernel object signal handler.",null,null],[17,"INVALID_HANDLE","","Invalid handle value.",null,null],[8,"KernelObject","","Common interface of a kernel object.",null,null],[10,"id","","",11,[[],["koid",6]]],[10,"type_name","","",11,[[]]],[10,"name","","",11,[[],["string",3]]],[10,"set_name","","",11,[[]]],[10,"signal","","",11,[[],["signal",3]]],[10,"signal_set","","",11,[[["signal",3]]]],[10,"signal_change","","",11,[[["signal",3]]]],[10,"add_signal_callback","","",11,[[["signalhandler",6]]]],[11,"get_child","","",11,[[["koid",6]],[["zxresult",6],["arc",3]]]],[11,"peer","","",11,[[],[["zxresult",6],["arc",3]]]],[11,"related_koid","","",11,[[],["koid",6]]],[11,"allowed_signals","","",11,[[],["signal",3]]],[11,"is","","Returns true if the trait object wraps an object of type…",11,[[]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the…",11,[[["box",3]],[["result",4],["box",3],["box",3]]]],[11,"downcast_rc","","Returns an `Rc`-ed object from an `Rc`-ed trait object if…",11,[[["rc",3]],[["rc",3],["rc",3],["result",4]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object…",11,[[],["option",4]]],[11,"downcast_mut","","Returns a mutable reference to the object within the trait…",11,[[],["option",4]]],[11,"downcast_arc","","Returns an `Arc`-ed object from an `Arc`-ed trait object…",11,[[["arc",3]],[["arc",3],["arc",3],["result",4]]]],[11,"new","","Create a new kernel object base.",8,[[]]],[11,"with_signal","","Create a kernel object base with initial `signal`.",8,[[["signal",3]]]],[11,"with_name","","Create a kernel object base with `name`.",8,[[]]],[11,"name","","Get object's name.",8,[[],["string",3]]],[11,"set_name","","Set object's name.",8,[[]]],[11,"signal","","Get the signal status.",8,[[],["signal",3]]],[11,"signal_change","","Change signal status: first `clear` then `set` indicated…",8,[[["signal",3]]]],[11,"signal_set","","Assert `signal`.",8,[[["signal",3]]]],[11,"signal_clear","","Deassert `signal`.",8,[[["signal",3]]]],[11,"add_signal_callback","","Add `callback` for signal status changes.",8,[[["signalhandler",6]]]],[11,"wait_signal","","Asynchronous wait for one of `signal`.",11,[[["signal",3],["arc",3]]]],[11,"send_signal_to_port_async","","Once one of the `signal` asserted, push a packet with…",11,[[["signal",3],["arc",3],["arc",3]]]],[11,"new","","",12,[[],["arc",3]]],[0,"resource","zircon_object","",null,null],[3,"ResourceFlags","zircon_object::resource","",null,null],[3,"Resource","","Address space rights and accounting.",null,null],[4,"ResourceKind","","ResourceKind definition from…",null,null],[13,"MMIO","","",13,null],[13,"IRQ","","",13,null],[13,"IOPORT","","",13,null],[13,"HYPERVISOR","","",13,null],[13,"ROOT","","",13,null],[13,"VMEX","","",13,null],[13,"SMC","","",13,null],[13,"COUNT","","",13,null],[18,"EXCLUSIVE","","",14,null],[11,"empty","","Returns an empty set of flags",14,[[],["resourceflags",3]]],[11,"all","","Returns the set containing all flags.",14,[[],["resourceflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",14,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",14,[[],[["option",4],["resourceflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",14,[[],["resourceflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",14,[[],["resourceflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",14,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",14,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",14,[[["resourceflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",14,[[["resourceflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",14,[[["resourceflags",3]]]],[11,"remove","","Removes the specified flags in-place.",14,[[["resourceflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",14,[[["resourceflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",14,[[["resourceflags",3]]]],[11,"create","","Create a new `Resource`.",15,[[["resourceflags",3],["resourcekind",4]],["arc",3]]],[11,"validate","","",15,[[["resourcekind",4]],["zxresult",6]]],[11,"validate_ranged_resource","","",15,[[["resourcekind",4]],["zxresult",6]]],[11,"check_exclusive","","",15,[[["resourceflags",3]],["zxresult",6]]],[0,"signal","zircon_object","Objects for signaling and waiting.",null,null],[3,"Event","zircon_object::signal","Signalable event for concurrent programming",null,null],[3,"EventPair","","Mutually signalable pair of events for concurrent…",null,null],[3,"Futex","","A primitive for creating userspace synchronization tools.",null,null],[3,"PortPacket","","A packet sent through a port.",null,null],[3,"PacketSignal","","",null,null],[12,"trigger","","",16,null],[12,"observed","","",16,null],[12,"count","","",16,null],[12,"timestamp","","",16,null],[3,"PacketException","","",null,null],[12,"pid","","",17,null],[12,"tid","","",17,null],[12,"num","","",17,null],[3,"PortPacketRepr","","A high-level representation of a packet sent through a port.",null,null],[12,"key","","",18,null],[12,"status","","",18,null],[12,"data","","",18,null],[3,"Port","","Signaling and mailbox primitive",null,null],[3,"Timer","","An object that may be signaled at some point in the future",null,null],[4,"PayloadRepr","","A high-level representation of a packet payload.",null,null],[13,"Signal","","",19,null],[13,"Exception","","",19,null],[13,"User","","",19,null],[4,"Slack","","",null,null],[13,"Center","","",20,null],[13,"Early","","",20,null],[13,"Late","","",20,null],[11,"new","","",21,[[],["arc",3]]],[11,"create","","Create a pair of event.",22,[[]]],[11,"peer","","Get the peer event.",22,[[],[["arc",3],["zxresult",6]]]],[11,"new","","Create a new Futex.",23,[[["atomici32",3]],["arc",3]]],[11,"wait","","Wait on a futex.",23,[[["arc",3]]]],[11,"wake","","Wake some number of threads waiting on a futex.",23,[[]]],[11,"owner","","Get the owner of the futex.",23,[[],[["option",4],["arc",3]]]],[11,"wait_with_owner","","Wait on a futex.",23,[[["option",4],["arc",3],["arc",3]]]],[11,"wake_single_owner","","Wake exactly one thread from the futex wait queue.",23,[[]]],[11,"requeue","","Requeuing is a generalization of waking.",23,[[["option",4],["arc",3],["arc",3]],["zxresult",6]]],[11,"new","","Create a new `Port`.",24,[[],["arc",3]]],[11,"push","","Push a `packet` into the port.",24,[[]]],[11,"wait","","Asynchronous wait until at least one packet is available,…",24,[[["arc",3]]]],[11,"new","","Create a new `Timer`.",25,[[],["arc",3]]],[11,"with_slack","","Create a new `Timer` with slack.",25,[[["slack",4]],["arc",3]]],[11,"one_shot","","Create a one-shot timer.",25,[[["duration",3]],["arc",3]]],[11,"set","","Starts a one-shot timer that will fire when `deadline`…",25,[[["duration",3],["arc",3]]]],[11,"cancel","","Cancel the pending timer started by `set`.",25,[[]]],[0,"task","zircon_object","Objects for Task Management.",null,null],[3,"Job","zircon_object::task","Control a group of processes",null,null],[3,"JobInfo","","",null,null],[3,"JobPolicy","","",null,null],[3,"BasicPolicy","","",null,null],[12,"condition","","",26,null],[12,"action","","",26,null],[3,"TimerSlackPolicy","","",null,null],[3,"TimerSlack","","",null,null],[3,"Process","","Process abstraction",null,null],[3,"ProcessInfo","","",null,null],[12,"return_code","","",27,null],[12,"started","","",27,null],[12,"has_exited","","",27,null],[12,"debugger_attached","","",27,null],[12,"padding1","","",27,null],[3,"SuspendToken","","",null,null],[3,"Thread","","Runnable / computation entity",null,null],[3,"ThreadInfo","","",null,null],[4,"SetPolicyOptions","","",null,null],[13,"Absolute","","Policy is applied for all conditions in policy or the call…",28,null],[13,"Relative","","Policy is applied for the conditions not specifically…",28,null],[4,"PolicyCondition","","",null,null],[13,"BadHandle","","A process under this job is attempting to issue a syscall…",29,null],[13,"WrongObject","","A process under this job is attempting to issue a syscall…",29,null],[13,"VmarWx","","A process under this job is attempting to map an address…",29,null],[13,"NewAny","","A special condition that stands for all of the above…",29,null],[13,"NewVMO","","A process under this job is attempting to create a new vm…",29,null],[13,"NewChannel","","A process under this job is attempting to create a new…",29,null],[13,"NewEvent","","A process under this job is attempting to create a new…",29,null],[13,"NewEventPair","","A process under this job is attempting to create a new…",29,null],[13,"NewPort","","A process under this job is attempting to create a new port.",29,null],[13,"NewSocket","","A process under this job is attempting to create a new…",29,null],[13,"NewFIFO","","A process under this job is attempting to create a new fifo.",29,null],[13,"NewTimer","","A process under this job is attempting to create a new…",29,null],[13,"NewProcess","","A process under this job is attempting to create a new…",29,null],[13,"NewProfile","","A process under this job is attempting to create a new…",29,null],[13,"AmbientMarkVMOExec","","A process under this job is attempting to use…",29,null],[4,"PolicyAction","","",null,null],[13,"Allow","","Allow condition.",30,null],[13,"Deny","","Prevent condition.",30,null],[13,"AllowException","","Generate an exception via the debug port. An exception…",30,null],[13,"DenyException","","Just like `AllowException`, but after resuming condition…",30,null],[13,"Kill","","Terminate the process.",30,null],[4,"TimerSlackDefaultMode","","",null,null],[13,"Center","","",31,null],[13,"Early","","",31,null],[13,"Late","","",31,null],[4,"Status","","",null,null],[13,"Init","","",32,null],[13,"Running","","",32,null],[13,"Exited","","",32,null],[4,"ThreadStateKind","","",null,null],[13,"General","","",33,null],[13,"FloatPoint","","",33,null],[13,"Vector","","",33,null],[13,"Debug","","",33,null],[13,"SingleStep","","",33,null],[13,"FS","","",33,null],[13,"GS","","",33,null],[4,"ThreadState","","The thread state.",null,null],[13,"New","","The thread has been created but it has not started running…",34,null],[13,"Running","","The thread is running user code normally.",34,null],[13,"Suspended","","Stopped due to `zx_task_suspend()`.",34,null],[13,"Blocked","","In a syscall or handling an exception.",34,null],[13,"Dying","","The thread is in the process of being terminated, but it…",34,null],[13,"Dead","","The thread has stopped running.",34,null],[13,"BlockedException","","The thread is stopped in an exception.",34,null],[13,"BlockedSleeping","","The thread is stopped in `zx_nanosleep()`.",34,null],[13,"BlockedFutex","","The thread is stopped in `zx_futex_wait()`.",34,null],[13,"BlockedPort","","The thread is stopped in `zx_port_wait()`.",34,null],[13,"BlockedChannel","","The thread is stopped in `zx_channel_call()`.",34,null],[13,"BlockedWaitOne","","The thread is stopped in `zx_object_wait_one()`.",34,null],[13,"BlockedWaitMany","","The thread is stopped in `zx_object_wait_many()`.",34,null],[13,"BlockedInterrupt","","The thread is stopped in `zx_interrupt_wait()`.",34,null],[13,"BlockedPager","","",34,null],[5,"check_timer_policy","","",null,[[["timerslackpolicy",3]],["zxresult",6]]],[11,"root","","Create the root job.",35,[[],["arc",3]]],[11,"create_child","","Create a new child job object.",35,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"policy","","Get the policy of the job.",35,[[],["jobpolicy",3]]],[11,"set_policy_basic","","Sets one or more security and/or resource policies to an…",35,[[["setpolicyoptions",4]],["zxresult",6]]],[11,"set_policy_timer_slack","","",35,[[["timerslackpolicy",3]],["zxresult",6]]],[11,"set_critical","","Set a process as critical to the job.",35,[[["arc",3]],["zxresult",6]]],[11,"get_info","","",35,[[],["jobinfo",3]]],[11,"check_root_job","","",35,[[],["zxresult",6]]],[11,"get_action","","Get the action of a policy `condition`.",36,[[["policycondition",4]],[["policyaction",4],["option",4]]]],[11,"apply","","Apply a basic policy.",36,[[["basicpolicy",3]]]],[11,"merge","","Merge the policy with `parent`'s.",36,[[]]],[11,"generate_new","","",37,[[["timerslackpolicy",3]],["timerslack",3]]],[11,"create","","Create a new process in the `job`.",38,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"create_with_ext","","Create a new process with extension info.",38,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"start","","Start the first `thread` in the process.",38,[[["arc",3],["handle",3]],["zxresult",6]]],[11,"exit","","Exit current process with `retcode`.",38,[[]]],[11,"check_policy","","Check whether `condition` is allowed in the parent job's…",38,[[["policycondition",4]],["zxresult",6]]],[11,"status","","Get process status.",38,[[],["status",4]]],[11,"ext","","Get the extension.",38,[[],["box",3]]],[11,"vmar","","Get the `VmAddressRegion` of the process.",38,[[],[["arc",3],["vmaddressregion",3]]]],[11,"job","","Get the job of the process.",38,[[],[["job",3],["arc",3]]]],[11,"add_handle","","Add a handle to the process",38,[[["handle",3]],["handlevalue",6]]],[11,"add_handles","","Add all handles to the process",38,[[["vec",3],["handle",3]],[["handlevalue",6],["vec",3]]]],[11,"remove_handle","","Remove a handle from the process",38,[[["handlevalue",6]],[["zxresult",6],["handle",3]]]],[11,"remove_handles","","Remove all handles from the process.",38,[[],[["zxresult",6],["vec",3]]]],[11,"get_futex","","Get a futex from the process",38,[[["atomici32",3]],[["futex",3],["arc",3]]]],[11,"dup_handle_operating_rights","","Duplicate a handle with new `rights`, return the new…",38,[[["handlevalue",6]],[["handlevalue",6],["zxresult",6]]]],[11,"get_object_with_rights","","Get the kernel object corresponding to this…",38,[[["rights",3],["handlevalue",6]],[["arc",3],["zxresult",6]]]],[11,"get_object_and_rights","","",38,[[["handlevalue",6]],["zxresult",6]]],[11,"get_dyn_object_with_rights","","",38,[[["rights",3],["handlevalue",6]],[["zxresult",6],["arc",3]]]],[11,"get_object","","Get the kernel object corresponding to this `handle_value`",38,[[["handlevalue",6]],[["arc",3],["zxresult",6]]]],[11,"validate_resource","","Try to get Resource and validate it",38,[[["resourcekind",4],["handlevalue",6]],["zxresult",6]]],[11,"get_handle_info","","",38,[[["handlevalue",6]],[["zxresult",6],["handlebasicinfo",3]]]],[11,"get_info","","",38,[[],["processinfo",3]]],[11,"set_debug_addr","","",38,[[]]],[11,"get_debug_addr","","",38,[[]]],[11,"set_dyn_break_on_load","","",38,[[]]],[11,"get_dyn_break_on_load","","",38,[[]]],[11,"get_cancel_token","","",38,[[["handlevalue",6]],[["receiver",3],["zxresult",6]]]],[11,"create","","",39,[[["arc",3]],["arc",3]]],[11,"create","","Create a new thread.",40,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"create_with_ext","","Create a new thread with extension info.",40,[[["arc",3]],[["arc",3],["zxresult",6]]]],[11,"proc","","Get the process.",40,[[],["arc",3]]],[11,"ext","","Get the extension.",40,[[],["box",3]]],[11,"start","","Start execution on the thread.",40,[[["arc",3]],["zxresult",6]]],[11,"start_with_regs","","Start execution with given registers.",40,[[["generalregs",3],["arc",3]],["zxresult",6]]],[11,"exit","","Terminate the current running thread. TODO: move to…",40,[[]]],[11,"read_state","","Read one aspect of thread state.",40,[[["threadstatekind",4]],["zxresult",6]]],[11,"write_state","","Write one aspect of thread state.",40,[[["threadstatekind",4]],["zxresult",6]]],[11,"wait_for_run","","",40,[[["arc",3]]]],[11,"end_running","","",40,[[["box",3],["usercontext",3]]]],[11,"get_thread_info","","",40,[[],["threadinfo",3]]],[11,"blocking_run","","Run async future and change state while blocking.",40,[[["threadstate",4],["duration",3]]]],[11,"cancelable_blocking_run","","Run a cancelable async future and change state while…",40,[[["threadstate",4],["duration",3],["receiver",3]]]],[11,"state","","",40,[[],["threadstate",4]]],[8,"ContextExt","","",null,null],[10,"read_state","","",41,[[["threadstatekind",4]],["zxresult",6]]],[10,"write_state","","",41,[[["threadstatekind",4]],["zxresult",6]]],[8,"IntoResult","","",null,null],[10,"into_result","","",42,[[],["zxresult",6]]],[8,"Task","","Task (Thread, Process, or Job)",null,null],[10,"kill","","Kill the task.",43,[[],["zxresult",6]]],[10,"suspend","","Suspend the task. Currently only thread or process handles…",43,[[],["zxresult",6]]],[10,"create_exception_channel","","Create an exception channel on the task.",43,[[],[["zxresult",6],["channel",3]]]],[10,"resume_from_exception","","Resume the task from a previously caught exception.",43,[[["port",3]],["zxresult",6]]],[0,"vm","zircon_object","Objects for Virtual Memory Management.",null,null],[3,"MMUFlags","zircon_object::vm","",null,null],[3,"VmarFlags","","",null,null],[3,"VmAddressRegion","","Virtual Memory Address Regions",null,null],[3,"VmarInfo","","",null,null],[3,"VmMapping","","Virtual Memory Mapping",null,null],[3,"VmObject","","",null,null],[5,"page_aligned","","",null,[[]]],[5,"check_aligned","","",null,[[]]],[5,"pages","","How many pages the `size` needs.",null,[[]]],[5,"roundup_pages","","",null,[[]]],[18,"COMPACT","","",44,null],[18,"SPECIFIC","","",44,null],[18,"SPECIFIC_OVERWRITE","","",44,null],[18,"CAN_MAP_SPECIFIC","","",44,null],[18,"CAN_MAP_READ","","",44,null],[18,"CAN_MAP_WRITE","","",44,null],[18,"CAN_MAP_EXECUTE","","",44,null],[18,"REQUIRE_NON_RESIZABLE","","",44,null],[18,"ALLOW_FAULTS","","",44,null],[18,"CAN_MAP_RXW","","",44,null],[18,"ROOT_FLAGS","","",44,null],[11,"empty","","Returns an empty set of flags",44,[[],["vmarflags",3]]],[11,"all","","Returns the set containing all flags.",44,[[],["vmarflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",44,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",44,[[],[["option",4],["vmarflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",44,[[],["vmarflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",44,[[],["vmarflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",44,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",44,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",44,[[["vmarflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",44,[[["vmarflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",44,[[["vmarflags",3]]]],[11,"remove","","Removes the specified flags in-place.",44,[[["vmarflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",44,[[["vmarflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",44,[[["vmarflags",3]]]],[11,"new_root","","Create a new root VMAR.",45,[[],["arc",3]]],[11,"allocate_at","","Create a child VMAR at the `offset`.",45,[[["vmarflags",3],["arc",3]],[["arc",3],["zxresult",6]]]],[11,"allocate","","Create a child VMAR with optional `offset`.",45,[[["vmarflags",3],["option",4],["arc",3]],[["arc",3],["zxresult",6]]]],[11,"map_at","","Map the `vmo` into this VMAR at given `offset`.",45,[[["mmuflags",3],["arc",3],["vmobject",3]],[["virtaddr",6],["zxresult",6]]]],[11,"map","","Map the `vmo` into this VMAR.",45,[[["vmobject",3],["option",4],["arc",3],["mmuflags",3]],[["virtaddr",6],["zxresult",6]]]],[11,"unmap","","Unmaps all VMO mappings and destroys all sub-regions…",45,[[["virtaddr",6]],["zxresult",6]]],[11,"protect","","",45,[[["mmuflags",3]],["zxresult",6]]],[11,"destroy","","Unmap all mappings within the VMAR, and destroy all…",45,[[["arc",3]],["zxresult",6]]],[11,"clear","","Unmap all mappings and destroy all sub-regions of VMAR.",45,[[],["zxresult",6]]],[11,"table_phys","","Get physical address of the underlying page table.",45,[[],["physaddr",6]]],[11,"addr","","Get start address of this VMAR.",45,[[]]],[11,"is_dead","","",45,[[]]],[11,"is_alive","","",45,[[]]],[11,"get_info","","",45,[[],["vmarinfo",3]]],[11,"get_flags","","",45,[[],["vmarflags",3]]],[11,"dump","","",45,[[]]],[11,"vdso_base_addr","","",45,[[],["option",4]]],[11,"is_valid_mapping_flags","","",46,[[["mmuflags",3]]]],[11,"protect","","",46,[[["mmuflags",3]]]],[11,"new_paged","","Create a new VMO backing on physical memory allocated in…",47,[[],["arc",3]]],[11,"new_physical","","Create a new VMO representing a piece of contiguous…",47,[[["physaddr",6]],["arc",3]]],[11,"create_clone","","",47,[[],["arc",3]]],[6,"PhysAddr","","Physical Address",null,null],[6,"VirtAddr","","Virtual Address",null,null],[17,"PAGE_SIZE","","Size of a page",null,null],[8,"VMObjectTrait","","Virtual Memory Objects",null,null],[10,"read","","Read memory to `buf` from VMO at `offset`.",48,[[]]],[10,"write","","Write memory from `buf` to VMO at `offset`.",48,[[]]],[10,"len","","Get the length of VMO.",48,[[]]],[10,"set_len","","Set the length of VMO.",48,[[]]],[10,"map_to","","Map physical memory to `page_table`.",48,[[["pagetable",3],["virtaddr",6],["mmuflags",3]]]],[11,"unmap_from","","Unmap physical memory from `page_table`.",48,[[["pagetable",3],["virtaddr",6]]]],[10,"commit","","Commit allocating physical memory.",48,[[]]],[10,"decommit","","Decommit allocated physical memory.",48,[[]]],[10,"create_child","","Create a child vmo",48,[[],[["arc",3],["vmobjecttrait",8]]]],[10,"create_clone","","",48,[[],[["arc",3],["vmobjecttrait",8]]]],[6,"ZxResult","zircon_object","The type returned by kernel objects methods.",null,null],[14,"impl_kobject","","Macro to auto implement `KernelObject` trait.",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"into_any","","",0,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","zircon_object::debuglog","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_any","","",1,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","zircon_object::ipc","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_any","","",3,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any_arc","","",3,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_any","","",2,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_any","","",4,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"into_any_arc","","",4,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_any","","",5,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any_arc","","",5,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","zircon_object::object","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"into_any","","",6,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"into_any_arc","","",6,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_any","","",49,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",49,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",49,[[],["any",8]]],[11,"as_any_mut","","",49,[[],["any",8]]],[11,"into_any_arc","","",49,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_any","","",7,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"into_any_arc","","",7,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"into_any","","",9,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any_arc","","",9,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"into_any","","",10,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"into_any_arc","","",10,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_any","","",8,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"into_any_arc","","",8,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_any","","",12,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"into_any_arc","","",12,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","zircon_object::resource","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"into_any","","",14,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any_arc","","",14,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_any","","",15,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",15,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"into_any_arc","","",15,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"into_any","","",13,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"into_any_arc","","",13,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","zircon_object::signal","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_any","","",21,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",21,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"into_any_arc","","",21,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"into_any","","",22,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",22,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"into_any_arc","","",22,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"into_any","","",23,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",23,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",23,[[],["any",8]]],[11,"as_any_mut","","",23,[[],["any",8]]],[11,"into_any_arc","","",23,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_any","","",50,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",50,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",50,[[],["any",8]]],[11,"as_any_mut","","",50,[[],["any",8]]],[11,"into_any_arc","","",50,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"into_any","","",16,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"into_any_arc","","",16,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"into_any","","",17,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",17,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",17,[[],["any",8]]],[11,"as_any_mut","","",17,[[],["any",8]]],[11,"into_any_arc","","",17,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"into_any","","",18,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"into_any_arc","","",18,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"into_any","","",24,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",24,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",24,[[],["any",8]]],[11,"as_any_mut","","",24,[[],["any",8]]],[11,"into_any_arc","","",24,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_any","","",25,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"into_any_arc","","",25,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"into_any","","",19,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"into_any_arc","","",19,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_any","","",20,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"into_any_arc","","",20,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","zircon_object::task","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_any","","",35,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",35,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",35,[[],["any",8]]],[11,"as_any_mut","","",35,[[],["any",8]]],[11,"into_any_arc","","",35,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"into_any","","",51,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",51,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",51,[[],["any",8]]],[11,"as_any_mut","","",51,[[],["any",8]]],[11,"into_any_arc","","",51,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"into_any","","",36,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",36,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"into_any_arc","","",36,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"into_any","","",26,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",26,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"into_any_arc","","",26,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"into_any","","",52,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",52,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",52,[[],["any",8]]],[11,"as_any_mut","","",52,[[],["any",8]]],[11,"into_any_arc","","",52,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"into_any","","",37,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",37,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",37,[[],["any",8]]],[11,"as_any_mut","","",37,[[],["any",8]]],[11,"into_any_arc","","",37,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_any","","",38,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",38,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",38,[[],["any",8]]],[11,"as_any_mut","","",38,[[],["any",8]]],[11,"into_any_arc","","",38,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"into_any","","",27,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",27,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",27,[[],["any",8]]],[11,"as_any_mut","","",27,[[],["any",8]]],[11,"into_any_arc","","",27,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"into","","",39,[[]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"into_any","","",39,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",39,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",39,[[],["any",8]]],[11,"as_any_mut","","",39,[[],["any",8]]],[11,"into_any_arc","","",39,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"into","","",40,[[]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"into_any","","",40,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",40,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",40,[[],["any",8]]],[11,"as_any_mut","","",40,[[],["any",8]]],[11,"into_any_arc","","",40,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"into_any","","",53,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",53,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",53,[[],["any",8]]],[11,"as_any_mut","","",53,[[],["any",8]]],[11,"into_any_arc","","",53,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"into_any","","",28,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",28,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",28,[[],["any",8]]],[11,"as_any_mut","","",28,[[],["any",8]]],[11,"into_any_arc","","",28,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"into_any","","",29,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",29,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",29,[[],["any",8]]],[11,"as_any_mut","","",29,[[],["any",8]]],[11,"into_any_arc","","",29,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"into_any","","",30,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",30,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",30,[[],["any",8]]],[11,"as_any_mut","","",30,[[],["any",8]]],[11,"into_any_arc","","",30,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"into_any","","",31,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",31,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",31,[[],["any",8]]],[11,"as_any_mut","","",31,[[],["any",8]]],[11,"into_any_arc","","",31,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"into_any","","",32,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",32,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",32,[[],["any",8]]],[11,"as_any_mut","","",32,[[],["any",8]]],[11,"into_any_arc","","",32,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"into_any","","",33,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",33,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",33,[[],["any",8]]],[11,"as_any_mut","","",33,[[],["any",8]]],[11,"into_any_arc","","",33,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"into_any","","",34,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",34,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",34,[[],["any",8]]],[11,"as_any_mut","","",34,[[],["any",8]]],[11,"into_any_arc","","",34,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","zircon_object::vm","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"into_any","","",54,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",54,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",54,[[],["any",8]]],[11,"as_any_mut","","",54,[[],["any",8]]],[11,"into_any_arc","","",54,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"into","","",44,[[]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"into_any","","",44,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",44,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",44,[[],["any",8]]],[11,"as_any_mut","","",44,[[],["any",8]]],[11,"into_any_arc","","",44,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"into","","",45,[[]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"into_any","","",45,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",45,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",45,[[],["any",8]]],[11,"as_any_mut","","",45,[[],["any",8]]],[11,"into_any_arc","","",45,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_any","","",55,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",55,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"into_any_arc","","",55,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_any","","",46,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",46,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",46,[[],["any",8]]],[11,"as_any_mut","","",46,[[],["any",8]]],[11,"into_any_arc","","",46,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"into_any","","",47,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",47,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",47,[[],["any",8]]],[11,"as_any_mut","","",47,[[],["any",8]]],[11,"into_any_arc","","",47,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from_iter","","",54,[[],["mmuflags",3]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"partial_cmp","","",54,[[["mmuflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",54,[[["mmuflags",3]]]],[11,"le","","",54,[[["mmuflags",3]]]],[11,"gt","","",54,[[["mmuflags",3]]]],[11,"ge","","",54,[[["mmuflags",3]]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitor_assign","","Adds the set of flags.",54,[[["mmuflags",3]]]],[11,"hash","","",54,[[]]],[11,"cmp","","",54,[[["mmuflags",3]],["ordering",4]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","","Returns the set difference of the two sets of flags.",54,[[["mmuflags",3]],["mmuflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",54,[[["mmuflags",3]],["mmuflags",3]]],[11,"not","","Returns the complement of this set of flags.",54,[[],["mmuflags",3]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"bitxor_assign","","Toggles the set of flags.",54,[[["mmuflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",54,[[["mmuflags",3]]]],[11,"extend","","",54,[[]]],[11,"bitor","","Returns the union of the two sets of flags.",54,[[["mmuflags",3]],["mmuflags",3]]],[11,"eq","","",54,[[["mmuflags",3]]]],[11,"ne","","",54,[[["mmuflags",3]]]],[11,"clone","","",54,[[],["mmuflags",3]]],[11,"fmt","","",54,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub_assign","","Disables all flags enabled in the set.",54,[[["mmuflags",3]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",54,[[["mmuflags",3]],["mmuflags",3]]],[11,"id","zircon_object::debuglog","",1,[[],["koid",6]]],[11,"type_name","","",1,[[]]],[11,"name","","",1,[[],["string",3]]],[11,"set_name","","",1,[[]]],[11,"signal","","",1,[[],["signal",3]]],[11,"signal_set","","",1,[[["signal",3]]]],[11,"signal_change","","",1,[[["signal",3]]]],[11,"add_signal_callback","","",1,[[["signalhandler",6]]]],[11,"id","zircon_object::ipc","",3,[[],["koid",6]]],[11,"type_name","","",3,[[]]],[11,"name","","",3,[[],["string",3]]],[11,"set_name","","",3,[[]]],[11,"signal","","",3,[[],["signal",3]]],[11,"signal_set","","",3,[[["signal",3]]]],[11,"signal_change","","",3,[[["signal",3]]]],[11,"add_signal_callback","","",3,[[["signalhandler",6]]]],[11,"peer","","",3,[[],[["zxresult",6],["arc",3]]]],[11,"related_koid","","",3,[[],["koid",6]]],[11,"id","","",4,[[],["koid",6]]],[11,"type_name","","",4,[[]]],[11,"name","","",4,[[],["string",3]]],[11,"set_name","","",4,[[]]],[11,"signal","","",4,[[],["signal",3]]],[11,"signal_set","","",4,[[["signal",3]]]],[11,"signal_change","","",4,[[["signal",3]]]],[11,"add_signal_callback","","",4,[[["signalhandler",6]]]],[11,"peer","","",4,[[],[["zxresult",6],["arc",3]]]],[11,"related_koid","","",4,[[],["koid",6]]],[11,"id","","",5,[[],["koid",6]]],[11,"type_name","","",5,[[]]],[11,"name","","",5,[[],["string",3]]],[11,"set_name","","",5,[[]]],[11,"signal","","",5,[[],["signal",3]]],[11,"signal_set","","",5,[[["signal",3]]]],[11,"signal_change","","",5,[[["signal",3]]]],[11,"add_signal_callback","","",5,[[["signalhandler",6]]]],[11,"peer","","",5,[[],[["zxresult",6],["arc",3]]]],[11,"related_koid","","",5,[[],["koid",6]]],[11,"id","zircon_object::object","",12,[[],["koid",6]]],[11,"type_name","","",12,[[]]],[11,"name","","",12,[[],["string",3]]],[11,"set_name","","",12,[[]]],[11,"signal","","",12,[[],["signal",3]]],[11,"signal_set","","",12,[[["signal",3]]]],[11,"signal_change","","",12,[[["signal",3]]]],[11,"add_signal_callback","","",12,[[["signalhandler",6]]]],[11,"id","zircon_object::resource","",15,[[],["koid",6]]],[11,"type_name","","",15,[[]]],[11,"name","","",15,[[],["string",3]]],[11,"set_name","","",15,[[]]],[11,"signal","","",15,[[],["signal",3]]],[11,"signal_set","","",15,[[["signal",3]]]],[11,"signal_change","","",15,[[["signal",3]]]],[11,"add_signal_callback","","",15,[[["signalhandler",6]]]],[11,"id","zircon_object::signal","",21,[[],["koid",6]]],[11,"type_name","","",21,[[]]],[11,"name","","",21,[[],["string",3]]],[11,"set_name","","",21,[[]]],[11,"signal","","",21,[[],["signal",3]]],[11,"signal_set","","",21,[[["signal",3]]]],[11,"signal_change","","",21,[[["signal",3]]]],[11,"add_signal_callback","","",21,[[["signalhandler",6]]]],[11,"allowed_signals","","",21,[[],["signal",3]]],[11,"id","","",22,[[],["koid",6]]],[11,"type_name","","",22,[[]]],[11,"name","","",22,[[],["string",3]]],[11,"set_name","","",22,[[]]],[11,"signal","","",22,[[],["signal",3]]],[11,"signal_set","","",22,[[["signal",3]]]],[11,"signal_change","","",22,[[["signal",3]]]],[11,"add_signal_callback","","",22,[[["signalhandler",6]]]],[11,"allowed_signals","","",22,[[],["signal",3]]],[11,"peer","","",22,[[],[["zxresult",6],["arc",3]]]],[11,"related_koid","","",22,[[],["koid",6]]],[11,"id","","",23,[[],["koid",6]]],[11,"type_name","","",23,[[]]],[11,"name","","",23,[[],["string",3]]],[11,"set_name","","",23,[[]]],[11,"signal","","",23,[[],["signal",3]]],[11,"signal_set","","",23,[[["signal",3]]]],[11,"signal_change","","",23,[[["signal",3]]]],[11,"add_signal_callback","","",23,[[["signalhandler",6]]]],[11,"id","","",24,[[],["koid",6]]],[11,"type_name","","",24,[[]]],[11,"name","","",24,[[],["string",3]]],[11,"set_name","","",24,[[]]],[11,"signal","","",24,[[],["signal",3]]],[11,"signal_set","","",24,[[["signal",3]]]],[11,"signal_change","","",24,[[["signal",3]]]],[11,"add_signal_callback","","",24,[[["signalhandler",6]]]],[11,"id","","",25,[[],["koid",6]]],[11,"type_name","","",25,[[]]],[11,"name","","",25,[[],["string",3]]],[11,"set_name","","",25,[[]]],[11,"signal","","",25,[[],["signal",3]]],[11,"signal_set","","",25,[[["signal",3]]]],[11,"signal_change","","",25,[[["signal",3]]]],[11,"add_signal_callback","","",25,[[["signalhandler",6]]]],[11,"id","zircon_object::task","",35,[[],["koid",6]]],[11,"type_name","","",35,[[]]],[11,"name","","",35,[[],["string",3]]],[11,"set_name","","",35,[[]]],[11,"signal","","",35,[[],["signal",3]]],[11,"signal_set","","",35,[[["signal",3]]]],[11,"signal_change","","",35,[[["signal",3]]]],[11,"add_signal_callback","","",35,[[["signalhandler",6]]]],[11,"get_child","","",35,[[["koid",6]],[["zxresult",6],["arc",3]]]],[11,"related_koid","","",35,[[],["koid",6]]],[11,"id","","",38,[[],["koid",6]]],[11,"type_name","","",38,[[]]],[11,"name","","",38,[[],["string",3]]],[11,"set_name","","",38,[[]]],[11,"signal","","",38,[[],["signal",3]]],[11,"signal_set","","",38,[[["signal",3]]]],[11,"signal_change","","",38,[[["signal",3]]]],[11,"add_signal_callback","","",38,[[["signalhandler",6]]]],[11,"get_child","","",38,[[["koid",6]],[["zxresult",6],["arc",3]]]],[11,"related_koid","","",38,[[],["koid",6]]],[11,"id","","",39,[[],["koid",6]]],[11,"type_name","","",39,[[]]],[11,"name","","",39,[[],["string",3]]],[11,"set_name","","",39,[[]]],[11,"signal","","",39,[[],["signal",3]]],[11,"signal_set","","",39,[[["signal",3]]]],[11,"signal_change","","",39,[[["signal",3]]]],[11,"add_signal_callback","","",39,[[["signalhandler",6]]]],[11,"id","","",40,[[],["koid",6]]],[11,"type_name","","",40,[[]]],[11,"name","","",40,[[],["string",3]]],[11,"set_name","","",40,[[]]],[11,"signal","","",40,[[],["signal",3]]],[11,"signal_set","","",40,[[["signal",3]]]],[11,"signal_change","","",40,[[["signal",3]]]],[11,"add_signal_callback","","",40,[[["signalhandler",6]]]],[11,"related_koid","","",40,[[],["koid",6]]],[11,"id","zircon_object::vm","",45,[[],["koid",6]]],[11,"type_name","","",45,[[]]],[11,"name","","",45,[[],["string",3]]],[11,"set_name","","",45,[[]]],[11,"signal","","",45,[[],["signal",3]]],[11,"signal_set","","",45,[[["signal",3]]]],[11,"signal_change","","",45,[[["signal",3]]]],[11,"add_signal_callback","","",45,[[["signalhandler",6]]]],[11,"id","","",47,[[],["koid",6]]],[11,"type_name","","",47,[[]]],[11,"name","","",47,[[],["string",3]]],[11,"set_name","","",47,[[]]],[11,"signal","","",47,[[],["signal",3]]],[11,"signal_set","","",47,[[["signal",3]]]],[11,"signal_change","","",47,[[["signal",3]]]],[11,"add_signal_callback","","",47,[[["signalhandler",6]]]],[11,"into_result","zircon_object","",56,[[],["zxresult",6]]],[11,"deref","zircon_object::vm","",47,[[]]],[11,"from","zircon_object","",0,[[["error",4]]]],[11,"from","zircon_object::signal","",50,[[["portpacketrepr",3]]]],[11,"from","","",18,[[["portpacket",3]]]],[11,"fmt","zircon_object::debuglog","",1,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","zircon_object","",0,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::ipc","",3,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",4,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",5,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","zircon_object::object","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","zircon_object::resource","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","zircon_object::signal","",21,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",22,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",23,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",25,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::task","",35,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],[["result",4],["error",3]]]],[11,"sub","zircon_object::object","Returns the set difference of the two sets of flags.",9,[[["rights",3]],["rights",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",10,[[["signal",3]],["signal",3]]],[11,"sub","zircon_object::resource","Returns the set difference of the two sets of flags.",14,[[["resourceflags",3]],["resourceflags",3]]],[11,"sub","zircon_object::vm","Returns the set difference of the two sets of flags.",44,[[["vmarflags",3]],["vmarflags",3]]],[11,"eq","zircon_object","",0,[[["zxerror",4]]]],[11,"eq","zircon_object::object","",9,[[["rights",3]]]],[11,"ne","","",9,[[["rights",3]]]],[11,"eq","","",10,[[["signal",3]]]],[11,"ne","","",10,[[["signal",3]]]],[11,"eq","zircon_object::resource","",13,[[["resourcekind",4]]]],[11,"eq","","",14,[[["resourceflags",3]]]],[11,"ne","","",14,[[["resourceflags",3]]]],[11,"eq","zircon_object::signal","",16,[[["packetsignal",3]]]],[11,"ne","","",16,[[["packetsignal",3]]]],[11,"eq","","",17,[[["packetexception",3]]]],[11,"ne","","",17,[[["packetexception",3]]]],[11,"eq","","",18,[[["portpacketrepr",3]]]],[11,"ne","","",18,[[["portpacketrepr",3]]]],[11,"eq","","",19,[[["payloadrepr",4]]]],[11,"ne","","",19,[[["payloadrepr",4]]]],[11,"eq","zircon_object::task","",30,[[["policyaction",4]]]],[11,"eq","","",32,[[["status",4]]]],[11,"ne","","",32,[[["status",4]]]],[11,"eq","","",34,[[["threadstate",4]]]],[11,"eq","zircon_object::vm","",44,[[["vmarflags",3]]]],[11,"ne","","",44,[[["vmarflags",3]]]],[11,"cmp","zircon_object::object","",9,[[["rights",3]],["ordering",4]]],[11,"cmp","","",10,[[["signal",3]],["ordering",4]]],[11,"cmp","zircon_object::resource","",14,[[["resourceflags",3]],["ordering",4]]],[11,"cmp","zircon_object::vm","",44,[[["vmarflags",3]],["ordering",4]]],[11,"partial_cmp","zircon_object::object","",9,[[["rights",3]],[["ordering",4],["option",4]]]],[11,"lt","","",9,[[["rights",3]]]],[11,"le","","",9,[[["rights",3]]]],[11,"gt","","",9,[[["rights",3]]]],[11,"ge","","",9,[[["rights",3]]]],[11,"partial_cmp","","",10,[[["signal",3]],[["ordering",4],["option",4]]]],[11,"lt","","",10,[[["signal",3]]]],[11,"le","","",10,[[["signal",3]]]],[11,"gt","","",10,[[["signal",3]]]],[11,"ge","","",10,[[["signal",3]]]],[11,"partial_cmp","zircon_object::resource","",14,[[["resourceflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",14,[[["resourceflags",3]]]],[11,"le","","",14,[[["resourceflags",3]]]],[11,"gt","","",14,[[["resourceflags",3]]]],[11,"ge","","",14,[[["resourceflags",3]]]],[11,"partial_cmp","zircon_object::vm","",44,[[["vmarflags",3]],[["ordering",4],["option",4]]]],[11,"lt","","",44,[[["vmarflags",3]]]],[11,"le","","",44,[[["vmarflags",3]]]],[11,"gt","","",44,[[["vmarflags",3]]]],[11,"ge","","",44,[[["vmarflags",3]]]],[11,"sub_assign","zircon_object::object","Disables all flags enabled in the set.",9,[[["rights",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",10,[[["signal",3]]]],[11,"sub_assign","zircon_object::resource","Disables all flags enabled in the set.",14,[[["resourceflags",3]]]],[11,"sub_assign","zircon_object::vm","Disables all flags enabled in the set.",44,[[["vmarflags",3]]]],[11,"not","zircon_object::object","Returns the complement of this set of flags.",9,[[],["rights",3]]],[11,"not","","Returns the complement of this set of flags.",10,[[],["signal",3]]],[11,"not","zircon_object::resource","Returns the complement of this set of flags.",14,[[],["resourceflags",3]]],[11,"not","zircon_object::vm","Returns the complement of this set of flags.",44,[[],["vmarflags",3]]],[11,"bitand","zircon_object::object","Returns the intersection between the two sets of flags.",9,[[["rights",3]],["rights",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",10,[[["signal",3]],["signal",3]]],[11,"bitand","zircon_object::resource","Returns the intersection between the two sets of flags.",14,[[["resourceflags",3]],["resourceflags",3]]],[11,"bitand","zircon_object::vm","Returns the intersection between the two sets of flags.",44,[[["vmarflags",3]],["vmarflags",3]]],[11,"bitor","zircon_object::object","Returns the union of the two sets of flags.",9,[[["rights",3]],["rights",3]]],[11,"bitor","","Returns the union of the two sets of flags.",10,[[["signal",3]],["signal",3]]],[11,"bitor","zircon_object::resource","Returns the union of the two sets of flags.",14,[[["resourceflags",3]],["resourceflags",3]]],[11,"bitor","zircon_object::vm","Returns the union of the two sets of flags.",44,[[["vmarflags",3]],["vmarflags",3]]],[11,"bitxor","zircon_object::object","Returns the left flags, but with all the right flags…",9,[[["rights",3]],["rights",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",10,[[["signal",3]],["signal",3]]],[11,"bitxor","zircon_object::resource","Returns the left flags, but with all the right flags…",14,[[["resourceflags",3]],["resourceflags",3]]],[11,"bitxor","zircon_object::vm","Returns the left flags, but with all the right flags…",44,[[["vmarflags",3]],["vmarflags",3]]],[11,"bitand_assign","zircon_object::object","Disables all flags disabled in the set.",9,[[["rights",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",10,[[["signal",3]]]],[11,"bitand_assign","zircon_object::resource","Disables all flags disabled in the set.",14,[[["resourceflags",3]]]],[11,"bitand_assign","zircon_object::vm","Disables all flags disabled in the set.",44,[[["vmarflags",3]]]],[11,"bitor_assign","zircon_object::object","Adds the set of flags.",9,[[["rights",3]]]],[11,"bitor_assign","","Adds the set of flags.",10,[[["signal",3]]]],[11,"bitor_assign","zircon_object::resource","Adds the set of flags.",14,[[["resourceflags",3]]]],[11,"bitor_assign","zircon_object::vm","Adds the set of flags.",44,[[["vmarflags",3]]]],[11,"bitxor_assign","zircon_object::object","Toggles the set of flags.",9,[[["rights",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",10,[[["signal",3]]]],[11,"bitxor_assign","zircon_object::resource","Toggles the set of flags.",14,[[["resourceflags",3]]]],[11,"bitxor_assign","zircon_object::vm","Toggles the set of flags.",44,[[["vmarflags",3]]]],[11,"drop","zircon_object::ipc","",3,[[]]],[11,"drop","zircon_object::signal","",22,[[]]],[11,"drop","zircon_object::task","",39,[[]]],[11,"drop","zircon_object::vm","",46,[[]]],[11,"hash","zircon_object::object","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","zircon_object::resource","",14,[[]]],[11,"hash","zircon_object::vm","",44,[[]]],[11,"extend","zircon_object::object","",9,[[["intoiterator",8]]]],[11,"extend","","",10,[[["intoiterator",8]]]],[11,"extend","zircon_object::resource","",14,[[["intoiterator",8]]]],[11,"extend","zircon_object::vm","",44,[[["intoiterator",8]]]],[11,"from_iter","zircon_object::object","",9,[[["intoiterator",8]],["rights",3]]],[11,"from_iter","","",10,[[["intoiterator",8]],["signal",3]]],[11,"from_iter","zircon_object::resource","",14,[[["intoiterator",8]],["resourceflags",3]]],[11,"from_iter","zircon_object::vm","",44,[[["intoiterator",8]],["vmarflags",3]]],[11,"try_from","zircon_object::object","",9,[[],["zxresult",6]]],[11,"try_from","zircon_object::resource","",13,[[],["result",4]]],[11,"try_from","zircon_object::task","",33,[[],["result",4]]],[11,"fmt","zircon_object::object","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::resource","",14,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",44,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::resource","",14,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",44,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::resource","",14,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",44,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::object","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::resource","",14,[[["formatter",3]],["result",6]]],[11,"fmt","zircon_object::vm","",44,[[["formatter",3]],["result",6]]],[11,"clone","zircon_object","",0,[[],["zxerror",4]]],[11,"clone","zircon_object::object","",6,[[],["handle",3]]],[11,"clone","","",9,[[],["rights",3]]],[11,"clone","","",10,[[],["signal",3]]],[11,"clone","zircon_object::resource","",13,[[],["resourcekind",4]]],[11,"clone","","",14,[[],["resourceflags",3]]],[11,"clone","zircon_object::signal","",16,[[],["packetsignal",3]]],[11,"clone","","",17,[[],["packetexception",3]]],[11,"clone","","",18,[[],["portpacketrepr",3]]],[11,"clone","","",19,[[],["payloadrepr",4]]],[11,"clone","zircon_object::task","",36,[[],["jobpolicy",3]]],[11,"clone","","",28,[[],["setpolicyoptions",4]]],[11,"clone","","",26,[[],["basicpolicy",3]]],[11,"clone","","",29,[[],["policycondition",4]]],[11,"clone","","",30,[[],["policyaction",4]]],[11,"clone","","",52,[[],["timerslackpolicy",3]]],[11,"clone","","",31,[[],["timerslackdefaultmode",4]]],[11,"clone","","",32,[[],["status",4]]],[11,"clone","","",33,[[],["threadstatekind",4]]],[11,"clone","","",34,[[],["threadstate",4]]],[11,"clone","zircon_object::vm","",44,[[],["vmarflags",3]]],[11,"default","zircon_object::ipc","",2,[[],["messagepacket",3]]],[11,"default","zircon_object::object","",49,[[],["handlebasicinfo",3]]],[11,"default","","",7,[[],["handleinfo",3]]],[11,"default","","",10,[[],["signal",3]]],[11,"default","","",8,[[]]],[11,"default","zircon_object::task","",51,[[],["jobinfo",3]]],[11,"default","","",36,[[],["jobpolicy",3]]],[11,"default","","",37,[[]]],[11,"default","","",32,[[]]],[11,"default","","",27,[[],["processinfo",3]]],[11,"default","","",34,[[]]],[18,"READ","zircon_object::vm","",54,null],[18,"WRITE","","",54,null],[18,"EXECUTE","","",54,null],[18,"USER","","",54,null],[11,"empty","","Returns an empty set of flags",54,[[],["mmuflags",3]]],[11,"all","","Returns the set containing all flags.",54,[[],["mmuflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",54,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",54,[[],[["option",4],["mmuflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",54,[[],["mmuflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",54,[[],["mmuflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",54,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",54,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",54,[[["mmuflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",54,[[["mmuflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",54,[[["mmuflags",3]]]],[11,"remove","","Removes the specified flags in-place.",54,[[["mmuflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",54,[[["mmuflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",54,[[["mmuflags",3]]]],[11,"unmap_from","","Unmap physical memory from `page_table`.",48,[[["pagetable",3],["virtaddr",6]]]]],"p":[[4,"ZxError"],[3,"DebugLog"],[3,"MessagePacket"],[3,"Channel"],[3,"Fifo"],[3,"Socket"],[3,"Handle"],[3,"HandleInfo"],[3,"KObjectBase"],[3,"Rights"],[3,"Signal"],[8,"KernelObject"],[3,"DummyObject"],[4,"ResourceKind"],[3,"ResourceFlags"],[3,"Resource"],[3,"PacketSignal"],[3,"PacketException"],[3,"PortPacketRepr"],[4,"PayloadRepr"],[4,"Slack"],[3,"Event"],[3,"EventPair"],[3,"Futex"],[3,"Port"],[3,"Timer"],[3,"BasicPolicy"],[3,"ProcessInfo"],[4,"SetPolicyOptions"],[4,"PolicyCondition"],[4,"PolicyAction"],[4,"TimerSlackDefaultMode"],[4,"Status"],[4,"ThreadStateKind"],[4,"ThreadState"],[3,"Job"],[3,"JobPolicy"],[3,"TimerSlack"],[3,"Process"],[3,"SuspendToken"],[3,"Thread"],[8,"ContextExt"],[8,"IntoResult"],[8,"Task"],[3,"VmarFlags"],[3,"VmAddressRegion"],[3,"VmMapping"],[3,"VmObject"],[8,"VMObjectTrait"],[3,"HandleBasicInfo"],[3,"PortPacket"],[3,"JobInfo"],[3,"TimerSlackPolicy"],[3,"ThreadInfo"],[3,"MMUFlags"],[3,"VmarInfo"],[6,"ZxResult"]]};
searchIndex["zircon_syscall"] = {"doc":"Zircon syscall implementations","i":[[3,"Syscall","zircon_syscall","",null,null],[12,"regs","","",0,null],[12,"thread","","",0,null],[12,"exit","","",0,null],[11,"sys_channel_read","","Read a message from a channel.",0,[[["handlevalue",6],["useroutptr",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_channel_write","","",0,[[["userinptr",6],["handlevalue",6],["userinptr",6]],["zxresult",6]]],[11,"sys_channel_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_channel_call_noretry","","",0,[[["userinptr",6],["handlevalue",6],["channelcallargs",3],["useroutptr",6],["deadline",3]]]],[11,"sys_channel_call_finish","","",0,[[["userinptr",6],["channelcallargs",3],["useroutptr",6],["deadline",3]],["zxresult",6]]],[11,"sys_cprng_draw_once","","",0,[[],["zxresult",6]]],[11,"sys_debug_write","","",0,[[["userinptr",6]],["zxresult",6]]],[11,"sys_debug_read","","",0,[[["useroutptr",6],["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_debuglog_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_debuglog_write","","",0,[[["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_fifo_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_futex_wait","","",0,[[["atomici32",3],["handlevalue",6],["userinptr",6],["deadline",3]]]],[11,"sys_futex_requeue","","",0,[[["userinptr",6],["atomici32",3],["handlevalue",6]],["zxresult",6]]],[11,"sys_futex_wake","","",0,[[["userinptr",6],["atomici32",3]],["zxresult",6]]],[11,"sys_futex_wake_single_owner","","",0,[[["userinptr",6],["atomici32",3]],["zxresult",6]]],[11,"sys_handle_duplicate","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_handle_close","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_handle_close_many","","",0,[[["handlevalue",6],["userinptr",6]],["zxresult",6]]],[11,"sys_handle_replace","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_object_get_property","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_object_set_property","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_object_wait_one","","",0,[[["handlevalue",6],["useroutptr",6],["deadline",3],["signal",3]]]],[11,"sys_object_get_info","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_object_signal_peer","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_object_wait_async","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_object_signal","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_object_wait_many","","",0,[[["deadline",3],["userwaititem",3],["userinoutptr",6]]]],[11,"sys_port_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_port_wait","","",0,[[["handlevalue",6],["deadline",3],["useroutptr",6],["portpacket",3]]]],[11,"sys_port_queue","","",0,[[["userinptr",6],["handlevalue",6],["portpacket",3]],["zxresult",6]]],[11,"sys_resource_create","","",0,[[["userinptr",6],["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_timer_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_event_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_eventpair_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_timer_set","","",0,[[["handlevalue",6],["deadline",3]],["zxresult",6]]],[11,"sys_socket_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_system_get_event","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_process_create","","",0,[[["userinptr",6],["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_process_exit","","",0,[[],["zxresult",6]]],[11,"sys_thread_create","","",0,[[["userinptr",6],["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_process_start","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_thread_write_state","","",0,[[["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_job_set_critical","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_thread_start","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_thread_exit","","",0,[[],["zxresult",6]]],[11,"sys_task_suspend_token","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_job_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_job_set_policy","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_clock_get","","",0,[[["useroutptr",6]],["zxresult",6]]],[11,"sys_clock_adjust","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_nanosleep","","",0,[[["deadline",3]]]],[11,"sys_vmar_allocate","","",0,[[["handlevalue",6],["useroutptr",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_vmar_map","","",0,[[["useroutptr",6],["handlevalue",6],["virtaddr",6]],["zxresult",6]]],[11,"sys_vmar_destroy","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_vmar_protect","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_vmar_unmap","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_create","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_vmo_read","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_vmo_write","","",0,[[["userinptr",6],["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_replace_as_executable","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_vmo_get_size","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_vmo_create_child","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"sys_vmo_set_size","","",0,[[["handlevalue",6]],["zxresult",6]]],[11,"sys_vmo_op_range","","",0,[[["handlevalue",6],["useroutptr",6]],["zxresult",6]]],[11,"syscall","","",0,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"into_result","","",0,[[],[["result",4],["zxerror",4]]]],[11,"into_any","","",0,[[["box",3]],[["box",3],["any",8]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]]],"p":[[3,"Syscall"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);